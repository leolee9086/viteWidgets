{"version":3,"file":"virtual-tour.js","sources":["../../src/plugins/virtual-tour/AbstractDatasource.js","../../src/plugins/virtual-tour/utils.js","../../src/plugins/virtual-tour/ClientSideDatasource.js","../../src/plugins/virtual-tour/constants.js","../../src/plugins/virtual-tour/ServerSideDatasource.js","../../src/plugins/virtual-tour/index.js"],"sourcesContent":["import { PSVError } from 'photo-sphere-viewer';\n\n/**\n * @memberOf PSV.plugins.VirtualTourPlugin\n * @private\n */\nexport class AbstractDatasource {\n\n  /**\n   * @type {Record<string, PSV.plugins.VirtualTourPlugin.Node>}\n   */\n  nodes = {};\n\n  /**\n   * @param {PSV.plugins.VirtualTourPlugin} plugin\n   */\n  constructor(plugin) {\n    this.plugin = plugin;\n  }\n\n  destroy() {\n    delete this.plugin;\n  }\n\n  /**\n   * @summary Loads a node\n   * @param {string} nodeId\n   * @return {Promise<PSV.plugins.VirtualTourPlugin.Node>}\n   */\n  loadNode(nodeId) { // eslint-disable-line no-unused-vars\n    throw new PSVError('loadNode not implemented');\n  }\n\n}\n","import { PSVError, utils } from 'photo-sphere-viewer';\n\n/**\n * @summary Checks the configuration of a node\n * @param {PSV.plugins.VirtualTourPlugin.Node} node\n * @param {boolean} isGps\n * @private\n */\nexport function checkNode(node, isGps) {\n  if (!node.id) {\n    throw new PSVError('No id given for node');\n  }\n  if (!node.panorama) {\n    throw new PSVError(`No panorama provided for node ${node.id}`);\n  }\n  if (isGps && !(node.position?.length >= 2)) {\n    throw new PSVError(`No position provided for node ${node.id}`);\n  }\n}\n\n/**\n * @summary Checks the configuration of a link\n * @param {PSV.plugins.VirtualTourPlugin.Node} node\n * @param {PSV.plugins.VirtualTourPlugin.NodeLink} link\n * @param {boolean} isGps\n * @private\n */\nexport function checkLink(node, link, isGps) {\n  if (!link.nodeId) {\n    throw new PSVError(`Link of node ${node.id} has no target id`);\n  }\n  if (!isGps && !utils.isExtendedPosition(link)) {\n    throw new PSVError(`No position provided for link ${link.nodeId} of node ${node.id}`);\n  }\n  if (isGps && !link.position) {\n    throw new PSVError(`No GPS position provided for link ${link.nodeId} of node ${node.id}`);\n  }\n}\n\n/**\n * @summary Changes the color of a mesh\n * @param {external:THREE.Mesh} mesh\n * @param {*} color\n * @private\n */\nexport function setMeshColor(mesh, color) {\n  mesh.material.color.set(color);\n}\n\n/**\n * @summary Returns the distance between two GPS points\n * @param {number[]} p1\n * @param {number[]} p2\n * @return {number}\n * @private\n */\nexport function distance(p1, p2) {\n  return utils.greatArcDistance(p1, p2) * 6371e3;\n}\n\n/**\n * @summary Returns the bearing between two GPS points\n * {@link http://www.movable-type.co.uk/scripts/latlong.html}\n * @param {number[]} p1\n * @param {number[]} p2\n * @return {number}\n * @private\n */\nexport function bearing(p1, p2) {\n  const [λ1, φ1] = p1;\n  const [λ2, φ2] = p2;\n\n  const y = Math.sin(λ2 - λ1) * Math.cos(φ2);\n  const x = Math.cos(φ1) * Math.sin(φ2) - Math.sin(φ1) * Math.cos(φ2) * Math.cos(λ2 - λ1);\n  return Math.atan2(y, x);\n}\n","import { PSVError, utils } from 'photo-sphere-viewer';\nimport { AbstractDatasource } from './AbstractDatasource';\nimport { checkLink, checkNode } from './utils';\n\n/**\n * @memberOf PSV.plugins.VirtualTourPlugin\n * @private\n */\nexport class ClientSideDatasource extends AbstractDatasource {\n\n  loadNode(nodeId) {\n    if (this.nodes[nodeId]) {\n      return Promise.resolve(this.nodes[nodeId]);\n    }\n    else {\n      return Promise.reject(new PSVError(`Node ${nodeId} not found`));\n    }\n  }\n\n  setNodes(rawNodes) {\n    if (!rawNodes?.length) {\n      throw new PSVError('No nodes provided');\n    }\n\n    const nodes = {};\n    const linkedNodes = {};\n\n    rawNodes.forEach((node) => {\n      checkNode(node, this.plugin.isGps());\n\n      if (nodes[node.id]) {\n        throw new PSVError(`Duplicate node ${node.id}`);\n      }\n      if (!node.links) {\n        utils.logWarn(`Node ${node.id} has no links`);\n        node.links = [];\n      }\n\n      nodes[node.id] = node;\n    });\n\n    rawNodes.forEach((node) => {\n      node.links.forEach((link) => {\n        if (!nodes[link.nodeId]) {\n          throw new PSVError(`Target node ${link.nodeId} of node ${node.id} does not exists`);\n        }\n\n        // copy essential data\n        link.position = link.position || nodes[link.nodeId].position;\n        link.name = link.name || nodes[link.nodeId].name;\n\n        checkLink(node, link, this.plugin.isGps());\n\n        linkedNodes[link.nodeId] = true;\n      });\n    });\n\n    rawNodes.forEach((node) => {\n      if (!linkedNodes[node.id]) {\n        utils.logWarn(`Node ${node.id} is never linked to`);\n      }\n    });\n\n    this.nodes = nodes;\n  }\n\n}\n","import { ObjectLoader } from 'three';\nimport arrowGeometryJson from './arrow.json';\nimport arrowIconSvg from './arrow.svg';\nimport arrowOutlineGeometryJson from './arrow_outline.json';\n\n/**\n * @summary In client mode all the nodes are provided in the config or with the `setNodes` method\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_CLIENT = 'client';\n\n/**\n * @summary In server mode the nodes are fetched asynchronously\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_SERVER = 'server';\n\n/**\n * @summary In manual mode each link is positionned manually on the panorama\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_MANUAL = 'manual';\n\n/**\n * @summary In GPS mode each node is globally positionned and the links are automatically computed\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_GPS = 'gps';\n\n/**\n * @summaru In markers mode the links are represented using markers\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_MARKERS = 'markers';\n\n/**\n * @summaru In 3D mode the links are represented using 3d arrows\n * @type {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const MODE_3D = '3d';\n\n/**\n * @summary Available events\n * @enum {string}\n * @memberof PSV.plugins.VirtualTourPlugin\n * @constant\n */\nexport const EVENTS = {\n  /**\n   * @event node-changed\n   * @memberof PSV.plugins.VirtualTourPlugin\n   * @summary Triggered when the current node changes\n   * @param {string} nodeId\n   */\n  NODE_CHANGED     : 'node-changed',\n};\n\n/**\n * @summary Property name added to markers\n * @type {string}\n * @constant\n * @private\n */\nexport const LINK_DATA = 'tourLink';\n\n/**\n * @summary Default style of the link marker\n * @type {PSV.plugins.MarkersPlugin.Properties}\n * @constant\n * @private\n */\nexport const DEFAULT_MARKER = {\n  html     : arrowIconSvg,\n  width    : 80,\n  height   : 80,\n  scale    : [0.5, 2],\n  anchor   : 'top center',\n  className: 'psv-virtual-tour__marker',\n  style    : {\n    color: 'rgba(0, 208, 255, 0.8)',\n  },\n};\n\n/**\n * @summary Default style of the link arrow\n * @type {PSV.plugins.VirtualTourPlugin.ArrowStyle}\n * @constant\n * @private\n */\nexport const DEFAULT_ARROW = {\n  color       : 0xaaaaaa,\n  hoverColor  : 0xaa5500,\n  outlineColor: 0x000000,\n  scale       : [0.5, 2],\n};\n\n/**\n * @type {external:THREE.BufferedGeometry}\n * @constant\n * @private\n */\nexport const { ARROW_GEOM, ARROW_OUTLINE_GEOM } = (() => {\n  const loader = new ObjectLoader();\n  const geometries = loader.parseGeometries([arrowGeometryJson, arrowOutlineGeometryJson]);\n  const arrow = geometries[arrowGeometryJson.uuid];\n  const arrowOutline = geometries[arrowOutlineGeometryJson.uuid];\n  const scale = 0.015;\n  const rot = Math.PI / 2;\n  arrow.scale(scale, scale, scale);\n  arrow.rotateX(rot);\n  arrowOutline.scale(scale, scale, scale);\n  arrowOutline.rotateX(rot);\n  return { ARROW_GEOM: arrow, ARROW_OUTLINE_GEOM: arrowOutline };\n})();\n","import { PSVError, utils } from 'photo-sphere-viewer';\nimport { AbstractDatasource } from './AbstractDatasource';\nimport { checkLink, checkNode } from './utils';\n\n/**\n * @memberOf PSV.plugins.VirtualTourPlugin\n * @private\n */\nexport class ServerSideDatasource extends AbstractDatasource {\n\n  constructor(plugin) {\n    super(plugin);\n\n    if (!plugin.config.getNode) {\n      throw new PSVError('Missing getNode() option.');\n    }\n\n    this.nodeResolver = plugin.config.getNode;\n  }\n\n  loadNode(nodeId) {\n    if (this.nodes[nodeId]) {\n      return Promise.resolve(this.nodes[nodeId]);\n    }\n    else {\n      return Promise.resolve(this.nodeResolver(nodeId))\n        .then((node) => {\n          checkNode(node, this.plugin.isGps());\n          if (!node.links) {\n            utils.logWarn(`Node ${node.id} has no links`);\n            node.links = [];\n          }\n\n          node.links.forEach((link) => {\n            // copy essential data\n            if (this.nodes[link.nodeId]) {\n              link.position = link.position || this.nodes[link.nodeId].position;\n              link.name = link.name || this.nodes[link.nodeId].name;\n            }\n\n            checkLink(node, link, this.plugin.isGps());\n          });\n\n          this.nodes[nodeId] = node;\n          return node;\n        });\n    }\n  }\n\n}\n","import {\n  AmbientLight,\n  BackSide,\n  Group,\n  MathUtils,\n  Mesh,\n  MeshBasicMaterial,\n  MeshLambertMaterial,\n  PointLight\n} from 'three';\nimport { AbstractPlugin, CONSTANTS, PSVError, utils } from '../..';\nimport { ClientSideDatasource } from './ClientSideDatasource';\nimport {\n  ARROW_GEOM,\n  ARROW_OUTLINE_GEOM,\n  DEFAULT_ARROW,\n  DEFAULT_MARKER,\n  EVENTS,\n  LINK_DATA,\n  MODE_3D,\n  MODE_CLIENT,\n  MODE_GPS,\n  MODE_MANUAL,\n  MODE_MARKERS,\n  MODE_SERVER\n} from './constants';\nimport { ServerSideDatasource } from './ServerSideDatasource';\nimport './style.scss';\nimport { bearing, distance, setMeshColor } from './utils';\n\n\n/**\n * @callback GetNode\n * @summary Function to load a node\n * @memberOf PSV.plugins.VirtualTourPlugin\n * @param {string} nodeId\n * @returns {PSV.plugins.VirtualTourPlugin.Node|Promise<PSV.plugins.VirtualTourPlugin.Node>}\n */\n\n/**\n * @callback Preload\n * @summary Function to determine if a link must be preloaded\n * @memberOf PSV.plugins.VirtualTourPlugin\n * @param {PSV.plugins.VirtualTourPlugin.Node} node\n * @param {PSV.plugins.VirtualTourPlugin.NodeLink} link\n * @returns {boolean}\n */\n\n/**\n * @typedef {Object} PSV.plugins.VirtualTourPlugin.Node\n * @summary Definition of a single node in the tour\n * @property {string} id - unique identifier of the node\n * @property {*} panorama\n * @property {PSV.plugins.VirtualTourPlugin.NodeLink[]} [links] - links to other nodes\n * @property {number[]} [position] - GPS position (longitude, latitude, optional altitude)\n * @property {PSV.PanoData | PSV.PanoDataProvider} [panoData] - data used for this panorama\n * @property {PSV.SphereCorrection} [sphereCorrection] - sphere correction to apply to this panorama\n * @property {string} [name] - short name of the node\n * @property {string} [caption] - caption visible in the navbar\n * @property {string} [description] - description visible in the side panel\n * @property {string} [thumbnail] - thumbnail for the gallery\n * @property {PSV.plugins.MarkersPlugin.Properties[]} [markers] - additional markers to use on this node\n */\n\n/**\n * @typedef {PSV.ExtendedPosition} PSV.plugins.VirtualTourPlugin.NodeLink\n * @summary Definition of a link between two nodes\n * @property {string} nodeId - identifier of the target node\n * @property {string} [name] - override the name of the node (tooltip)\n * @property {number[]} [position] - override the GPS position of the node\n * @property {PSV.plugins.MarkersPlugin.Properties} [markerStyle] - override global marker style\n * @property {PSV.plugins.VirtualTourPlugin.ArrowStyle} [arrowStyle] - override global arrow style\n */\n\n/**\n * @typedef {Object} PSV.plugins.VirtualTourPlugin.ArrowStyle\n * @summary Style of the arrow in 3D mode\n * @property {string} [color=0xaaaaaa]\n * @property {string} [hoverColor=0xaa5500]\n * @property {number} [outlineColor=0x000000]\n * @property {number[]} [scale=[0.5,2]]\n */\n\n/**\n * @typedef {Object} PSV.plugins.VirtualTourPlugin.Options\n * @property {'client'|'server'} [dataMode='client'] - configure data mode\n * @property {'manual'|'gps'} [positionMode='manual'] - configure positioning mode\n * @property {'markers'|'3d'} [renderMode='3d'] - configure rendering mode of links\n * @property {PSV.plugins.VirtualTourPlugin.Node[]} [nodes] - initial nodes\n * @property {PSV.plugins.VirtualTourPlugin.GetNode} [getNode]\n * @property {string} [startNodeId] - id of the initial node, if not defined the first node will be used\n * @property {boolean|PSV.plugins.VirtualTourPlugin.Preload} [preload=false] - preload linked panoramas\n * @property {boolean|string|number} [rotateSpeed='20rpm'] - speed of rotation when clicking on a link, if 'false' the viewer won't rotate at all\n * @property {boolean|number} [transition=1500] - duration of the transition between nodes\n * @property {boolean} [linksOnCompass] - if the Compass plugin is enabled, displays the links on the compass, defaults to `true` on in markers render mode\n * @property {PSV.plugins.MarkersPlugin.Properties} [markerStyle] - global marker style\n * @property {PSV.plugins.VirtualTourPlugin.ArrowStyle} [arrowStyle] - global arrow style\n * @property {number} [markerLatOffset=-0.1] - (GPS & Markers mode) latitude offset applied to link markers, to compensate for viewer height\n * @property {'top'|'bottom'} [arrowPosition='bottom'] - (3D mode) arrows vertical position\n */\n\n/**\n * @typedef {Object} PSV.plugins.VirtualTourPlugin.NodeChangedData\n * @summary Data associated to the \"node-changed\" event\n * @type {PSV.plugins.VirtualTourPlugin.Node} [fromNode] - The previous node\n * @type {PSV.plugins.VirtualTourPlugin.NodeLink} [fromLink] - The link that was clicked in the previous node\n * @type {PSV.Position} [fromLinkPosition] - The position of the link on the previous node\n */\n\n\nexport { EVENTS, MODE_3D, MODE_CLIENT, MODE_GPS, MODE_MANUAL, MODE_MARKERS, MODE_SERVER } from './constants';\n\n\n/**\n * @summary Create virtual tours by linking multiple panoramas\n * @extends PSV.plugins.AbstractPlugin\n * @memberof PSV.plugins\n */\nexport class VirtualTourPlugin extends AbstractPlugin {\n\n  static id = 'virtual-tour';\n\n  static EVENTS = EVENTS;\n  static MODE_CLIENT = MODE_CLIENT;\n  static MODE_SERVER = MODE_SERVER;\n  static MODE_3D = MODE_3D;\n  static MODE_MARKERS = MODE_MARKERS;\n  static MODE_MANUAL = MODE_MANUAL;\n  static MODE_GPS = MODE_GPS;\n\n  /**\n   * @param {PSV.Viewer} psv\n   * @param {PSV.plugins.VirtualTourPlugin.Options} [options]\n   */\n  constructor(psv, options) {\n    super(psv);\n\n    /**\n     * @member {Object}\n     * @property {PSV.plugins.VirtualTourPlugin.Node} currentNode\n     * @property {PSV.Tooltip} currentTooltip\n     * @property {string} loadingNode\n     * @property {function} stopObserver\n     * @private\n     */\n    this.prop = {\n      currentNode   : null,\n      currentTooltip: null,\n      loadingNode   : null,\n      stopObserver  : null,\n    };\n\n    /**\n     * @type {Record<string, boolean | Promise>}\n     * @private\n     */\n    this.preload = {};\n\n    /**\n     * @member {PSV.plugins.VirtualTourPlugin.Options}\n     * @private\n     */\n    this.config = {\n      dataMode       : MODE_CLIENT,\n      positionMode   : MODE_MANUAL,\n      renderMode     : MODE_3D,\n      preload        : false,\n      rotateSpeed    : '20rpm',\n      transition     : CONSTANTS.DEFAULT_TRANSITION,\n      markerLatOffset: -0.1,\n      arrowPosition  : 'bottom',\n      linksOnCompass : options?.renderMode === MODE_MARKERS,\n      ...options,\n      markerStyle: {\n        ...DEFAULT_MARKER,\n        ...options?.markerStyle,\n      },\n      arrowStyle : {\n        ...DEFAULT_ARROW,\n        ...options?.arrowStyle,\n      },\n    };\n\n    /**\n     * @type {PSV.plugins.MarkersPlugin}\n     * @private\n     */\n    this.markers = null;\n\n    /**\n     * @type {PSV.plugins.CompassPlugin}\n     * @private\n     */\n    this.compass = null;\n\n    /**\n     * @type {PSV.plugins.GalleryPlugin}\n     * @private\n     */\n    this.gallery = null;\n\n    /**\n     * @type {PSV.plugins.VirtualTourPlugin.AbstractDatasource}\n     */\n    this.datasource = null;\n\n    /**\n     * @type {external:THREE.Group}\n     * @private\n     */\n    this.arrowsGroup = null;\n\n    if (this.is3D()) {\n      this.arrowsGroup = new Group();\n\n      const localLight = new PointLight(0xffffff, 1, 0);\n      localLight.position.set(0, this.config.arrowPosition === 'bottom' ? 2 : -2, 0);\n      this.arrowsGroup.add(localLight);\n    }\n  }\n\n  /**\n   * @package\n   */\n  init() {\n    super.init();\n\n    this.markers = this.psv.getPlugin('markers');\n    this.compass = this.psv.getPlugin('compass');\n    this.gallery = this.psv.getPlugin('gallery');\n\n    if (!this.is3D() && !this.markers) {\n      throw new PSVError('VirtualTour plugin requires the Markers plugin in markers mode.');\n    }\n\n    if (this.markers?.config.markers) {\n      utils.logWarn('No default markers can be configured on Markers plugin when using VirtualTour plugin. '\n        + 'Consider defining `markers` on each tour node.');\n      delete this.markers.config.markers;\n    }\n\n    this.datasource = this.isServerSide() ? new ServerSideDatasource(this) : new ClientSideDatasource(this);\n\n    if (this.is3D()) {\n      this.psv.once(CONSTANTS.EVENTS.READY, () => {\n        this.__positionArrows();\n        this.psv.renderer.scene.add(this.arrowsGroup);\n\n        const ambientLight = new AmbientLight(0xffffff, 1);\n        this.psv.renderer.scene.add(ambientLight);\n\n        this.psv.needsUpdate();\n      });\n\n      this.psv.on(CONSTANTS.EVENTS.POSITION_UPDATED, this);\n      this.psv.on(CONSTANTS.EVENTS.ZOOM_UPDATED, this);\n      this.psv.on(CONSTANTS.EVENTS.CLICK, this);\n      this.prop.stopObserver = this.psv.observeObjects(LINK_DATA, this);\n    }\n    else {\n      this.markers.on('select-marker', this);\n    }\n\n    if (this.isServerSide()) {\n      if (this.config.startNodeId) {\n        this.setCurrentNode(this.config.startNodeId);\n      }\n    }\n    else if (this.config.nodes) {\n      this.setNodes(this.config.nodes, this.config.startNodeId);\n      delete this.config.nodes;\n    }\n  }\n\n  /**\n   * @package\n   */\n  destroy() {\n    if (this.markers) {\n      this.markers.off('select-marker', this);\n    }\n    if (this.arrowsGroup) {\n      this.psv.renderer.scene.remove(this.arrowsGroup);\n    }\n\n    this.psv.off(CONSTANTS.EVENTS.POSITION_UPDATED, this);\n    this.psv.off(CONSTANTS.EVENTS.ZOOM_UPDATED, this);\n    this.psv.off(CONSTANTS.EVENTS.CLICK, this);\n    this.prop.stopObserver?.();\n\n    this.datasource.destroy();\n\n    delete this.preload;\n    delete this.datasource;\n    delete this.markers;\n    delete this.compass;\n    delete this.gallery;\n    delete this.arrowsGroup;\n\n    super.destroy();\n  }\n\n  handleEvent(e) {\n    let link;\n    switch (e.type) {\n      case 'select-marker':\n        link = e.args[0].data?.[LINK_DATA];\n        if (link) {\n          this.setCurrentNode(link.nodeId, link);\n        }\n        break;\n\n      case CONSTANTS.EVENTS.POSITION_UPDATED:\n      case CONSTANTS.EVENTS.ZOOM_UPDATED:\n        if (this.arrowsGroup) {\n          this.__positionArrows();\n        }\n        break;\n\n      case CONSTANTS.EVENTS.CLICK:\n        link = e.args[0].objects.find(o => o.userData[LINK_DATA])?.userData[LINK_DATA];\n        if (link) {\n          this.setCurrentNode(link.nodeId, link);\n        }\n        break;\n\n      case CONSTANTS.OBJECT_EVENTS.ENTER_OBJECT:\n        this.__onEnterObject(e.detail.object, e.detail.viewerPoint);\n        break;\n      case CONSTANTS.OBJECT_EVENTS.HOVER_OBJECT:\n        this.__onHoverObject(e.detail.object, e.detail.viewerPoint);\n        break;\n      case CONSTANTS.OBJECT_EVENTS.LEAVE_OBJECT:\n        this.__onLeaveObject(e.detail.object);\n        break;\n\n      default:\n    }\n  }\n\n  /**\n   * @summary Tests if running in server mode\n   * @return {boolean}\n   */\n  isServerSide() {\n    return this.config.dataMode === MODE_SERVER;\n  }\n\n  /**\n   * @summary Tests if running in GPS mode\n   * @return {boolean}\n   */\n  isGps() {\n    return this.config.positionMode === MODE_GPS;\n  }\n\n  /**\n   * @summary Tests if running in 3D mode\n   * @return {boolean}\n   */\n  is3D() {\n    return this.config.renderMode === MODE_3D;\n  }\n\n  /**\n   * @summary Sets the nodes (client mode only)\n   * @param {PSV.plugins.VirtualTourPlugin.Node[]} nodes\n   * @param {string} [startNodeId]\n   * @throws {PSV.PSVError} when the configuration is incorrect\n   */\n  setNodes(nodes, startNodeId) {\n    if (this.isServerSide()) {\n      throw new PSVError('Cannot set nodes in server side mode');\n    }\n\n    this.datasource.setNodes(nodes);\n\n    if (!startNodeId) {\n      startNodeId = nodes[0].id;\n    }\n    else if (!this.datasource.nodes[startNodeId]) {\n      startNodeId = nodes[0].id;\n      utils.logWarn(`startNodeId not found is provided nodes, resetted to ${startNodeId}`);\n    }\n\n    this.setCurrentNode(startNodeId);\n\n    if (this.gallery) {\n      this.gallery.setItems(\n        nodes.map(node => ({\n          id       : node.id,\n          panorama : node.panorama,\n          name     : node.name,\n          thumbnail: node.thumbnail,\n          options  : {\n            caption         : node.caption,\n            panoData        : node.panoData,\n            sphereCorrection: node.sphereCorrection,\n            description     : node.description,\n          },\n        })),\n        (id) => {\n          this.setCurrentNode(id);\n          this.gallery.hide();\n        }\n      );\n    }\n  }\n\n  /**\n   * @summary Changes the current node\n   * @param {string} nodeId\n   * @param {PSV.plugins.VirtualTourPlugin.NodeLink} [fromLink]\n   * @returns {Promise<boolean>} resolves false if the loading was aborted by another call\n   */\n  setCurrentNode(nodeId, fromLink = null) {\n    if (nodeId === this.prop.currentNode?.id) {\n      return Promise.resolve(true);\n    }\n\n    this.psv.hideError();\n\n    this.prop.loadingNode = nodeId;\n\n    const fromNode = this.prop.currentNode;\n    const fromLinkPosition = fromNode && fromLink ? this.__getLinkPosition(fromNode, fromLink) : null;\n\n    return Promise.all([\n      // if this node is already preloading, wait for it\n      Promise.resolve(this.preload[nodeId])\n        .then(() => {\n          if (this.prop.loadingNode !== nodeId) {\n            throw utils.getAbortError();\n          }\n\n          return this.datasource.loadNode(nodeId);\n        }),\n      Promise.resolve(fromLinkPosition ? this.config.rotateSpeed : false)\n        .then((speed) => { // eslint-disable-line consistent-return\n          if (speed) {\n            return this.psv.animate({ ...fromLinkPosition, speed });\n          }\n        })\n        .then(() => {\n          this.psv.loader.show();\n        }),\n    ])\n      .then(([node]) => {\n        if (this.prop.loadingNode !== nodeId) {\n          throw utils.getAbortError();\n        }\n\n        this.prop.currentNode = node;\n\n        if (this.prop.currentTooltip) {\n          this.prop.currentTooltip.hide();\n          this.prop.currentTooltip = null;\n        }\n\n        if (this.is3D()) {\n          this.arrowsGroup.remove(...this.arrowsGroup.children.filter(o => o.type === 'Mesh'));\n        }\n\n        this.markers?.clearMarkers();\n        this.compass?.clearHotspots();\n\n        return this.psv.setPanorama(node.panorama, {\n          transition      : this.config.transition,\n          caption         : node.caption,\n          description     : node.description,\n          panoData        : node.panoData,\n          sphereCorrection: node.sphereCorrection,\n        })\n          .then((completed) => {\n            if (!completed) {\n              throw utils.getAbortError();\n            }\n          });\n      })\n      .then(() => {\n        if (this.prop.loadingNode !== nodeId) {\n          throw utils.getAbortError();\n        }\n\n        const node = this.prop.currentNode;\n\n        if (node.markers) {\n          if (this.markers) {\n            this.markers.setMarkers(node.markers);\n          }\n          else {\n            utils.logWarn(`Node ${node.id} markers ignored because the plugin is not loaded.`);\n          }\n        }\n\n        this.__renderLinks(node);\n        this.__preload(node);\n\n        /**\n         * @event node-changed\n         * @memberof PSV.plugins.VirtualTourPlugin\n         * @summary Triggered when the current node is changed\n         * @param {string} nodeId\n         * @param {PSV.plugins.VirtualTourPlugin.NodeChangedData} data\n         */\n        this.trigger(EVENTS.NODE_CHANGED, nodeId, {\n          fromNode,\n          fromLink,\n          fromLinkPosition,\n        });\n\n        this.prop.loadingNode = null;\n\n        return true;\n      })\n      .catch((err) => {\n        if (utils.isAbortError(err)) {\n          return false;\n        }\n\n        this.psv.showError(this.psv.config.lang.loadError);\n\n        this.psv.loader.hide();\n        this.psv.navbar.setCaption('');\n\n        this.prop.loadingNode = null;\n\n        throw err;\n      });\n  }\n\n  /**\n   * @summary Adds the links for the node\n   * @param {PSV.plugins.VirtualTourPlugin.Node} node\n   * @private\n   */\n  __renderLinks(node) {\n    const positions = [];\n\n    node.links.forEach((link) => {\n      const position = this.__getLinkPosition(node, link);\n      positions.push(position);\n\n      if (this.is3D()) {\n        const mesh = new Mesh(ARROW_GEOM, new MeshLambertMaterial());\n        mesh.userData = { [LINK_DATA]: link, longitude: position.longitude };\n        mesh.rotation.order = 'YXZ';\n        mesh.rotateY(-position.longitude);\n        this.psv.dataHelper\n          .sphericalCoordsToVector3({ longitude: position.longitude, latitude: 0 }, mesh.position)\n          .multiplyScalar(1 / CONSTANTS.SPHERE_RADIUS);\n\n        const outlineMesh = new Mesh(ARROW_OUTLINE_GEOM, new MeshBasicMaterial({ side: BackSide }));\n        outlineMesh.position.copy(mesh.position);\n        outlineMesh.rotation.copy(mesh.rotation);\n\n        setMeshColor(mesh, link.arrowStyle?.color || this.config.arrowStyle.color);\n        setMeshColor(outlineMesh, link.arrowStyle?.outlineColor || this.config.arrowStyle.outlineColor);\n\n        this.arrowsGroup.add(mesh);\n        this.arrowsGroup.add(outlineMesh);\n      }\n      else {\n        if (this.isGps()) {\n          position.latitude += this.config.markerLatOffset;\n        }\n\n        this.markers.addMarker({\n          ...this.config.markerStyle,\n          ...link.markerStyle,\n          id      : `tour-link-${link.nodeId}`,\n          tooltip : link.name,\n          visible : true,\n          hideList: true,\n          content : null,\n          data    : { [LINK_DATA]: link },\n          ...position,\n        }, false);\n      }\n    });\n\n    if (this.is3D()) {\n      this.__positionArrows();\n    }\n    else {\n      this.markers.renderMarkers();\n    }\n\n    if (this.config.linksOnCompass && this.compass) {\n      this.compass.setHotspots(positions);\n    }\n  }\n\n  /**\n   * @summary Computes the marker position for a link\n   * @param {PSV.plugins.VirtualTourPlugin.Node} node\n   * @param {PSV.plugins.VirtualTourPlugin.NodeLink} link\n   * @return {PSV.Position}\n   * @private\n   */\n  __getLinkPosition(node, link) {\n    if (this.isGps()) {\n      const p1 = [MathUtils.degToRad(node.position[0]), MathUtils.degToRad(node.position[1])];\n      const p2 = [MathUtils.degToRad(link.position[0]), MathUtils.degToRad(link.position[1])];\n      const h1 = node.position[2] !== undefined ? node.position[2] : link.position[2] || 0;\n      const h2 = link.position[2] !== undefined ? link.position[2] : node.position[2] || 0;\n\n      let latitude = 0;\n      if (h1 !== h2) {\n        latitude = Math.atan((h2 - h1) / distance(p1, p2));\n      }\n\n      const longitude = bearing(p1, p2);\n\n      return { longitude, latitude };\n    }\n    else {\n      return this.psv.dataHelper.cleanPosition(link);\n    }\n  }\n\n  /**\n   * @private\n   */\n  __onEnterObject(mesh, viewerPoint) {\n    const link = mesh.userData[LINK_DATA];\n\n    setMeshColor(mesh, link.arrowStyle?.hoverColor || this.config.arrowStyle.hoverColor);\n\n    if (link.name) {\n      this.prop.currentTooltip = this.psv.tooltip.create({\n        left   : viewerPoint.x,\n        top    : viewerPoint.y,\n        content: link.name,\n      });\n    }\n\n    this.psv.needsUpdate();\n  }\n\n\n  /**\n   * @private\n   */\n  __onHoverObject(mesh, viewerPoint) {\n    if (this.prop.currentTooltip) {\n      this.prop.currentTooltip.move({\n        left: viewerPoint.x,\n        top : viewerPoint.y,\n      });\n    }\n  }\n\n\n  /**\n   * @private\n   */\n  __onLeaveObject(mesh) {\n    const link = mesh.userData[LINK_DATA];\n\n    setMeshColor(mesh, link.arrowStyle?.color || this.config.arrowStyle.color);\n\n    if (this.prop.currentTooltip) {\n      this.prop.currentTooltip.hide();\n      this.prop.currentTooltip = null;\n    }\n\n    this.psv.needsUpdate();\n  }\n\n  /**\n   * @summary Updates to position of the group of arrows\n   * @private\n   */\n  __positionArrows() {\n    this.arrowsGroup.position.copy(this.psv.prop.direction).multiplyScalar(0.5);\n    const s = this.config.arrowStyle.scale;\n    const f = s[1] + (s[0] - s[1]) * (this.psv.getZoomLevel() / 100);\n    const y = 2.5 - (this.psv.getZoomLevel() / 100) * 1.5;\n    this.arrowsGroup.position.y += this.config.arrowPosition === 'bottom' ? -y : y;\n    this.arrowsGroup.scale.set(f, f, f);\n  }\n\n  /**\n   * @summary Manage the preload of the linked panoramas\n   * @param {PSV.plugins.VirtualTourPlugin.Node} node\n   * @private\n   */\n  __preload(node) {\n    if (!this.config.preload) {\n      return;\n    }\n\n    this.preload[node.id] = true;\n\n    this.prop.currentNode.links\n      .filter(link => !this.preload[link.nodeId])\n      .filter((link) => {\n        if (typeof this.config.preload === 'function') {\n          return this.config.preload(this.prop.currentNode, link);\n        }\n        else {\n          return true;\n        }\n      })\n      .forEach((link) => {\n        this.preload[link.nodeId] = this.datasource.loadNode(link.nodeId)\n          .then((linkNode) => {\n            return this.psv.textureLoader.preloadPanorama(linkNode.panorama);\n          })\n          .then(() => {\n            this.preload[link.nodeId] = true;\n          })\n          .catch(() => {\n            delete this.preload[link.nodeId];\n          });\n      });\n  }\n\n}\n"],"names":["AbstractDatasource","plugin","nodes","destroy","loadNode","nodeId","PSVError","checkNode","node","isGps","id","panorama","position","length","checkLink","link","utils","isExtendedPosition","setMeshColor","mesh","color","material","set","distance","p1","p2","greatArcDistance","bearing","λ1","φ1","λ2","φ2","y","Math","sin","cos","x","atan2","ClientSideDatasource","Promise","resolve","reject","setNodes","rawNodes","linkedNodes","forEach","links","logWarn","name","MODE_CLIENT","MODE_SERVER","MODE_MANUAL","MODE_GPS","MODE_MARKERS","MODE_3D","EVENTS","NODE_CHANGED","LINK_DATA","DEFAULT_MARKER","html","arrowIconSvg","width","height","scale","anchor","className","style","DEFAULT_ARROW","hoverColor","outlineColor","loader","ObjectLoader","geometries","parseGeometries","arrowGeometryJson","arrowOutlineGeometryJson","arrow","uuid","arrowOutline","rot","PI","rotateX","ARROW_GEOM","ARROW_OUTLINE_GEOM","ServerSideDatasource","config","getNode","nodeResolver","then","VirtualTourPlugin","psv","options","prop","currentNode","currentTooltip","loadingNode","stopObserver","preload","dataMode","positionMode","renderMode","rotateSpeed","transition","CONSTANTS","DEFAULT_TRANSITION","markerLatOffset","arrowPosition","linksOnCompass","markerStyle","arrowStyle","markers","compass","gallery","datasource","arrowsGroup","is3D","Group","localLight","PointLight","add","init","getPlugin","isServerSide","once","READY","__positionArrows","renderer","scene","ambientLight","AmbientLight","needsUpdate","on","POSITION_UPDATED","ZOOM_UPDATED","CLICK","observeObjects","startNodeId","setCurrentNode","off","remove","handleEvent","e","type","args","data","objects","find","o","userData","OBJECT_EVENTS","ENTER_OBJECT","__onEnterObject","detail","object","viewerPoint","HOVER_OBJECT","__onHoverObject","LEAVE_OBJECT","__onLeaveObject","setItems","map","thumbnail","caption","panoData","sphereCorrection","description","hide","fromLink","hideError","fromNode","fromLinkPosition","__getLinkPosition","all","getAbortError","speed","animate","show","children","filter","clearMarkers","clearHotspots","setPanorama","completed","setMarkers","__renderLinks","__preload","trigger","catch","err","isAbortError","showError","lang","loadError","navbar","setCaption","positions","push","Mesh","MeshLambertMaterial","longitude","rotation","order","rotateY","dataHelper","sphericalCoordsToVector3","latitude","multiplyScalar","SPHERE_RADIUS","outlineMesh","MeshBasicMaterial","side","BackSide","copy","addMarker","tooltip","visible","hideList","content","renderMarkers","setHotspots","MathUtils","degToRad","h1","undefined","h2","atan","cleanPosition","create","left","top","move","direction","s","f","getZoomLevel","linkNode","textureLoader","preloadPanorama","AbstractPlugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAEA;EACA;EACA;EACA;;EACA,IAAaA,kBAAb,gBAAA,YAAA;EAEE;EACF;EACA;;EAGE;EACF;EACA;EACE,EAAA,SAAA,kBAAA,CAAYC,MAAZ,EAAoB;MAAA,IALpBC,CAAAA,KAKoB,GALZ,EAKY,CAAA;MAClB,IAAKD,CAAAA,MAAL,GAAcA,MAAd,CAAA;EACD,GAAA;;EAZH,EAAA,IAAA,MAAA,GAAA,kBAAA,CAAA,SAAA,CAAA;;IAAA,MAcEE,CAAAA,OAdF,GAcE,SAAU,OAAA,GAAA;EACR,IAAA,OAAO,KAAKF,MAAZ,CAAA;EACD,GAAA;EAED;EACF;EACA;EACA;EACA;EAtBA,GAAA;;EAAA,EAAA,MAAA,CAuBEG,QAvBF,GAuBE,SAASC,QAAAA,CAAAA,MAAT,EAAiB;EAAE;EACjB,IAAA,MAAM,IAAIC,0BAAJ,CAAa,0BAAb,CAAN,CAAA;KAxBJ,CAAA;;EAAA,EAAA,OAAA,kBAAA,CAAA;EAAA,CAAA,EAAA;;ECJA;EACA;EACA;EACA;EACA;EACA;;EACO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgC;EAAA,EAAA,IAAA,cAAA,CAAA;;EACrC,EAAA,IAAI,CAACD,IAAI,CAACE,EAAV,EAAc;EACZ,IAAA,MAAM,IAAIJ,0BAAJ,CAAa,sBAAb,CAAN,CAAA;EACD,GAAA;;EACD,EAAA,IAAI,CAACE,IAAI,CAACG,QAAV,EAAoB;EAClB,IAAA,MAAM,IAAIL,0BAAJ,CAAA,gCAAA,GAA8CE,IAAI,CAACE,EAAnD,CAAN,CAAA;EACD,GAAA;;EACD,EAAA,IAAID,KAAK,IAAI,EAAE,CAAA,CAAA,cAAA,GAAAD,IAAI,CAACI,QAAL,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,cAAA,CAAeC,MAAf,KAAyB,CAA3B,CAAb,EAA4C;EAC1C,IAAA,MAAM,IAAIP,0BAAJ,CAAA,gCAAA,GAA8CE,IAAI,CAACE,EAAnD,CAAN,CAAA;EACD,GAAA;EACF,CAAA;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;EACO,SAASI,SAAT,CAAmBN,IAAnB,EAAyBO,IAAzB,EAA+BN,KAA/B,EAAsC;EAC3C,EAAA,IAAI,CAACM,IAAI,CAACV,MAAV,EAAkB;EAChB,IAAA,MAAM,IAAIC,0BAAJ,CAAA,eAAA,GAA6BE,IAAI,CAACE,EAAlC,GAAN,mBAAA,CAAA,CAAA;EACD,GAAA;;IACD,IAAI,CAACD,KAAD,IAAU,CAACO,uBAAK,CAACC,kBAAN,CAAyBF,IAAzB,CAAf,EAA+C;MAC7C,MAAM,IAAIT,0BAAJ,CAAA,gCAAA,GAA8CS,IAAI,CAACV,MAAnD,GAAqEG,WAAAA,GAAAA,IAAI,CAACE,EAA1E,CAAN,CAAA;EACD,GAAA;;EACD,EAAA,IAAID,KAAK,IAAI,CAACM,IAAI,CAACH,QAAnB,EAA6B;MAC3B,MAAM,IAAIN,0BAAJ,CAAA,oCAAA,GAAkDS,IAAI,CAACV,MAAvD,GAAyEG,WAAAA,GAAAA,IAAI,CAACE,EAA9E,CAAN,CAAA;EACD,GAAA;EACF,CAAA;EAED;EACA;EACA;EACA;EACA;EACA;;EACO,SAASQ,YAAT,CAAsBC,IAAtB,EAA4BC,KAA5B,EAAmC;EACxCD,EAAAA,IAAI,CAACE,QAAL,CAAcD,KAAd,CAAoBE,GAApB,CAAwBF,KAAxB,CAAA,CAAA;EACD,CAAA;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;EACO,SAASG,QAAT,CAAkBC,EAAlB,EAAsBC,EAAtB,EAA0B;IAC/B,OAAOT,uBAAK,CAACU,gBAAN,CAAuBF,EAAvB,EAA2BC,EAA3B,IAAiC,MAAxC,CAAA;EACD,CAAA;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACO,SAASE,OAAT,CAAiBH,EAAjB,EAAqBC,EAArB,EAAyB;IAC9B,IAAOG,EAAP,GAAiBJ,EAAjB,CAAA,CAAA,CAAA;QAAWK,EAAX,GAAiBL,EAAjB,CAAA,CAAA,CAAA,CAAA;IACA,IAAOM,EAAP,GAAiBL,EAAjB,CAAA,CAAA,CAAA;QAAWM,EAAX,GAAiBN,EAAjB,CAAA,CAAA,CAAA,CAAA;EAEA,EAAA,IAAMO,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASJ,EAAE,GAAGF,EAAd,IAAoBK,IAAI,CAACE,GAAL,CAASJ,EAAT,CAA9B,CAAA;EACA,EAAA,IAAMK,CAAC,GAAGH,IAAI,CAACE,GAAL,CAASN,EAAT,CAAeI,GAAAA,IAAI,CAACC,GAAL,CAASH,EAAT,CAAf,GAA8BE,IAAI,CAACC,GAAL,CAASL,EAAT,CAAeI,GAAAA,IAAI,CAACE,GAAL,CAASJ,EAAT,CAAf,GAA8BE,IAAI,CAACE,GAAL,CAASL,EAAE,GAAGF,EAAd,CAAtE,CAAA;EACA,EAAA,OAAOK,IAAI,CAACI,KAAL,CAAWL,CAAX,EAAcI,CAAd,CAAP,CAAA;EACD;;ECvED;EACA;EACA;EACA;;EACA,IAAaE,oBAAb,gBAAA,UAAA,mBAAA,EAAA;EAAA,EAAA,cAAA,CAAA,oBAAA,EAAA,mBAAA,CAAA,CAAA;;EAAA,EAAA,SAAA,oBAAA,GAAA;EAAA,IAAA,OAAA,mBAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAAA;EAAA,GAAA;;EAAA,EAAA,IAAA,MAAA,GAAA,oBAAA,CAAA,SAAA,CAAA;;EAAA,EAAA,MAAA,CAEElC,QAFF,GAEE,SAASC,QAAAA,CAAAA,MAAT,EAAiB;EACf,IAAA,IAAI,IAAKH,CAAAA,KAAL,CAAWG,MAAX,CAAJ,EAAwB;QACtB,OAAOkC,OAAO,CAACC,OAAR,CAAgB,KAAKtC,KAAL,CAAWG,MAAX,CAAhB,CAAP,CAAA;EACD,KAFD,MAGK;QACH,OAAOkC,OAAO,CAACE,MAAR,CAAe,IAAInC,0BAAJ,CAAA,OAAA,GAAqBD,MAArB,GAAA,YAAA,CAAf,CAAP,CAAA;EACD,KAAA;KARL,CAAA;;EAAA,EAAA,MAAA,CAWEqC,QAXF,GAWE,SAASC,QAAAA,CAAAA,QAAT,EAAmB;EAAA,IAAA,IAAA,KAAA,GAAA,IAAA,CAAA;;EACjB,IAAA,IAAI,EAACA,QAAD,IAAA,IAAA,IAACA,QAAQ,CAAE9B,MAAX,CAAJ,EAAuB;EACrB,MAAA,MAAM,IAAIP,0BAAJ,CAAa,mBAAb,CAAN,CAAA;EACD,KAAA;;MAED,IAAMJ,KAAK,GAAG,EAAd,CAAA;MACA,IAAM0C,WAAW,GAAG,EAApB,CAAA;EAEAD,IAAAA,QAAQ,CAACE,OAAT,CAAiB,UAACrC,IAAD,EAAU;QACzBD,SAAS,CAACC,IAAD,EAAO,KAAI,CAACP,MAAL,CAAYQ,KAAZ,EAAP,CAAT,CAAA;;EAEA,MAAA,IAAIP,KAAK,CAACM,IAAI,CAACE,EAAN,CAAT,EAAoB;EAClB,QAAA,MAAM,IAAIJ,0BAAJ,CAAA,iBAAA,GAA+BE,IAAI,CAACE,EAApC,CAAN,CAAA;EACD,OAAA;;EACD,MAAA,IAAI,CAACF,IAAI,CAACsC,KAAV,EAAiB;EACf9B,QAAAA,uBAAK,CAAC+B,OAAN,CAAsBvC,OAAAA,GAAAA,IAAI,CAACE,EAA3B,GAAA,eAAA,CAAA,CAAA;UACAF,IAAI,CAACsC,KAAL,GAAa,EAAb,CAAA;EACD,OAAA;;EAED5C,MAAAA,KAAK,CAACM,IAAI,CAACE,EAAN,CAAL,GAAiBF,IAAjB,CAAA;OAXF,CAAA,CAAA;EAcAmC,IAAAA,QAAQ,CAACE,OAAT,CAAiB,UAACrC,IAAD,EAAU;EACzBA,MAAAA,IAAI,CAACsC,KAAL,CAAWD,OAAX,CAAmB,UAAC9B,IAAD,EAAU;EAC3B,QAAA,IAAI,CAACb,KAAK,CAACa,IAAI,CAACV,MAAN,CAAV,EAAyB;YACvB,MAAM,IAAIC,0BAAJ,CAAA,cAAA,GAA4BS,IAAI,CAACV,MAAjC,GAAmDG,WAAAA,GAAAA,IAAI,CAACE,EAAxD,GAAN,kBAAA,CAAA,CAAA;EACD,SAH0B;;;EAM3BK,QAAAA,IAAI,CAACH,QAAL,GAAgBG,IAAI,CAACH,QAAL,IAAiBV,KAAK,CAACa,IAAI,CAACV,MAAN,CAAL,CAAmBO,QAApD,CAAA;EACAG,QAAAA,IAAI,CAACiC,IAAL,GAAYjC,IAAI,CAACiC,IAAL,IAAa9C,KAAK,CAACa,IAAI,CAACV,MAAN,CAAL,CAAmB2C,IAA5C,CAAA;UAEAlC,SAAS,CAACN,IAAD,EAAOO,IAAP,EAAa,KAAI,CAACd,MAAL,CAAYQ,KAAZ,EAAb,CAAT,CAAA;EAEAmC,QAAAA,WAAW,CAAC7B,IAAI,CAACV,MAAN,CAAX,GAA2B,IAA3B,CAAA;SAXF,CAAA,CAAA;OADF,CAAA,CAAA;EAgBAsC,IAAAA,QAAQ,CAACE,OAAT,CAAiB,UAACrC,IAAD,EAAU;EACzB,MAAA,IAAI,CAACoC,WAAW,CAACpC,IAAI,CAACE,EAAN,CAAhB,EAA2B;EACzBM,QAAAA,uBAAK,CAAC+B,OAAN,CAAsBvC,OAAAA,GAAAA,IAAI,CAACE,EAA3B,GAAA,qBAAA,CAAA,CAAA;EACD,OAAA;OAHH,CAAA,CAAA;MAMA,IAAKR,CAAAA,KAAL,GAAaA,KAAb,CAAA;KAvDJ,CAAA;;EAAA,EAAA,OAAA,oBAAA,CAAA;EAAA,CAAA,CAA0CF,kBAA1C,CAAA;;;;;;;;ECHA;EACA;EACA;EACA;EACA;EACA;;AACO,MAAMiD,WAAW,GAAG,SAApB;EAEP;EACA;EACA;EACA;EACA;EACA;;AACO,MAAMC,WAAW,GAAG,SAApB;EAEP;EACA;EACA;EACA;EACA;EACA;;AACO,MAAMC,WAAW,GAAG,SAApB;EAEP;EACA;EACA;EACA;EACA;EACA;;AACO,MAAMC,QAAQ,GAAG,MAAjB;EAEP;EACA;EACA;EACA;EACA;EACA;;AACO,MAAMC,YAAY,GAAG,UAArB;EAEP;EACA;EACA;EACA;EACA;EACA;;AACO,MAAMC,OAAO,GAAG,KAAhB;EAEP;EACA;EACA;EACA;EACA;EACA;;AACO,MAAMC,MAAM,GAAG;EACpB;EACF;EACA;EACA;EACA;EACA;EACEC,EAAAA,YAAY,EAAO,cAAA;EAPC,EAAf;EAUP;EACA;EACA;EACA;EACA;EACA;;EACO,IAAMC,SAAS,GAAG,UAAlB,CAAA;EAEP;EACA;EACA;EACA;EACA;EACA;;EACO,IAAMC,cAAc,GAAG;EAC5BC,EAAAA,IAAI,EAAOC,YADiB;EAE5BC,EAAAA,KAAK,EAAM,EAFiB;EAG5BC,EAAAA,MAAM,EAAK,EAHiB;EAI5BC,EAAAA,KAAK,EAAM,CAAC,GAAD,EAAM,CAAN,CAJiB;EAK5BC,EAAAA,MAAM,EAAK,YALiB;EAM5BC,EAAAA,SAAS,EAAE,0BANiB;EAO5BC,EAAAA,KAAK,EAAM;EACT9C,IAAAA,KAAK,EAAE,wBAAA;EADE,GAAA;EAPiB,CAAvB,CAAA;EAYP;EACA;EACA;EACA;EACA;EACA;;EACO,IAAM+C,aAAa,GAAG;EAC3B/C,EAAAA,KAAK,EAAS,QADa;EAE3BgD,EAAAA,UAAU,EAAI,QAFa;EAG3BC,EAAAA,YAAY,EAAE,QAHa;EAI3BN,EAAAA,KAAK,EAAS,CAAC,GAAD,EAAM,CAAN,CAAA;EAJa,CAAtB,CAAA;EAOP;EACA;EACA;EACA;EACA;;EACO,IAAA,IAAA,GAA4C,YAAM;EACvD,EAAA,IAAMO,MAAM,GAAG,IAAIC,kBAAJ,EAAf,CAAA;IACA,IAAMC,UAAU,GAAGF,MAAM,CAACG,eAAP,CAAuB,CAACC,iBAAD,EAAoBC,wBAApB,CAAvB,CAAnB,CAAA;EACA,EAAA,IAAMC,KAAK,GAAGJ,UAAU,CAACE,iBAAiB,CAACG,IAAnB,CAAxB,CAAA;EACA,EAAA,IAAMC,YAAY,GAAGN,UAAU,CAACG,wBAAwB,CAACE,IAA1B,CAA/B,CAAA;IACA,IAAMd,KAAK,GAAG,KAAd,CAAA;EACA,EAAA,IAAMgB,GAAG,GAAG9C,IAAI,CAAC+C,EAAL,GAAU,CAAtB,CAAA;EACAJ,EAAAA,KAAK,CAACb,KAAN,CAAYA,KAAZ,EAAmBA,KAAnB,EAA0BA,KAA1B,CAAA,CAAA;IACAa,KAAK,CAACK,OAAN,CAAcF,GAAd,CAAA,CAAA;EACAD,EAAAA,YAAY,CAACf,KAAb,CAAmBA,KAAnB,EAA0BA,KAA1B,EAAiCA,KAAjC,CAAA,CAAA;IACAe,YAAY,CAACG,OAAb,CAAqBF,GAArB,CAAA,CAAA;IACA,OAAO;EAAEG,IAAAA,UAAU,EAAEN,KAAd;EAAqBO,IAAAA,kBAAkB,EAAEL,YAAAA;KAAhD,CAAA;EACD,CAZiD,EAA3C;EAAA,IAAQI,UAAR,QAAQA,UAAR;EAAA,IAAoBC,kBAApB,QAAoBA,kBAApB;;EC7GP;EACA;EACA;EACA;;EACA,IAAaC,oBAAb,gBAAA,UAAA,mBAAA,EAAA;EAAA,EAAA,cAAA,CAAA,oBAAA,EAAA,mBAAA,CAAA,CAAA;;EAEE,EAAA,SAAA,oBAAA,CAAYnF,MAAZ,EAAoB;EAAA,IAAA,IAAA,KAAA,CAAA;;EAClB,IAAA,KAAA,GAAA,mBAAA,CAAA,IAAA,CAAA,IAAA,EAAMA,MAAN,CAAA,IAAA,IAAA,CAAA;;EAEA,IAAA,IAAI,CAACA,MAAM,CAACoF,MAAP,CAAcC,OAAnB,EAA4B;EAC1B,MAAA,MAAM,IAAIhF,0BAAJ,CAAa,2BAAb,CAAN,CAAA;EACD,KAAA;;EAED,IAAA,KAAA,CAAKiF,YAAL,GAAoBtF,MAAM,CAACoF,MAAP,CAAcC,OAAlC,CAAA;EAPkB,IAAA,OAAA,KAAA,CAAA;EAQnB,GAAA;;EAVH,EAAA,IAAA,MAAA,GAAA,oBAAA,CAAA,SAAA,CAAA;;EAAA,EAAA,MAAA,CAYElF,QAZF,GAYE,SAASC,QAAAA,CAAAA,MAAT,EAAiB;EAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;;EACf,IAAA,IAAI,IAAKH,CAAAA,KAAL,CAAWG,MAAX,CAAJ,EAAwB;QACtB,OAAOkC,OAAO,CAACC,OAAR,CAAgB,KAAKtC,KAAL,CAAWG,MAAX,CAAhB,CAAP,CAAA;EACD,KAFD,MAGK;EACH,MAAA,OAAOkC,OAAO,CAACC,OAAR,CAAgB,KAAK+C,YAAL,CAAkBlF,MAAlB,CAAhB,CACJmF,CAAAA,IADI,CACC,UAAChF,IAAD,EAAU;UACdD,SAAS,CAACC,IAAD,EAAO,MAAI,CAACP,MAAL,CAAYQ,KAAZ,EAAP,CAAT,CAAA;;EACA,QAAA,IAAI,CAACD,IAAI,CAACsC,KAAV,EAAiB;EACf9B,UAAAA,uBAAK,CAAC+B,OAAN,CAAsBvC,OAAAA,GAAAA,IAAI,CAACE,EAA3B,GAAA,eAAA,CAAA,CAAA;YACAF,IAAI,CAACsC,KAAL,GAAa,EAAb,CAAA;EACD,SAAA;;EAEDtC,QAAAA,IAAI,CAACsC,KAAL,CAAWD,OAAX,CAAmB,UAAC9B,IAAD,EAAU;EAC3B;YACA,IAAI,MAAI,CAACb,KAAL,CAAWa,IAAI,CAACV,MAAhB,CAAJ,EAA6B;EAC3BU,YAAAA,IAAI,CAACH,QAAL,GAAgBG,IAAI,CAACH,QAAL,IAAiB,MAAI,CAACV,KAAL,CAAWa,IAAI,CAACV,MAAhB,EAAwBO,QAAzD,CAAA;EACAG,YAAAA,IAAI,CAACiC,IAAL,GAAYjC,IAAI,CAACiC,IAAL,IAAa,MAAI,CAAC9C,KAAL,CAAWa,IAAI,CAACV,MAAhB,EAAwB2C,IAAjD,CAAA;EACD,WAAA;;YAEDlC,SAAS,CAACN,IAAD,EAAOO,IAAP,EAAa,MAAI,CAACd,MAAL,CAAYQ,KAAZ,EAAb,CAAT,CAAA;WAPF,CAAA,CAAA;EAUA,QAAA,MAAI,CAACP,KAAL,CAAWG,MAAX,IAAqBG,IAArB,CAAA;EACA,QAAA,OAAOA,IAAP,CAAA;EACD,OApBI,CAAP,CAAA;EAqBD,KAAA;KAtCL,CAAA;;EAAA,EAAA,OAAA,oBAAA,CAAA;EAAA,CAAA,CAA0CR,kBAA1C,CAAA;;ECyGA;EACA;EACA;EACA;EACA;;AACA,MAAayF,iBAAb,gBAAA,UAAA,eAAA,EAAA;EAAA,EAAA,cAAA,CAAA,iBAAA,EAAA,eAAA,CAAA,CAAA;;EAYE;EACF;EACA;EACA;IACE,SAAYC,iBAAAA,CAAAA,GAAZ,EAAiBC,OAAjB,EAA0B;EAAA,IAAA,IAAA,KAAA,CAAA;;EACxB,IAAA,KAAA,GAAA,eAAA,CAAA,IAAA,CAAA,IAAA,EAAMD,GAAN,CAAA,IAAA,IAAA,CAAA;EAEA;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;;EACI,IAAA,KAAA,CAAKE,IAAL,GAAY;EACVC,MAAAA,WAAW,EAAK,IADN;EAEVC,MAAAA,cAAc,EAAE,IAFN;EAGVC,MAAAA,WAAW,EAAK,IAHN;EAIVC,MAAAA,YAAY,EAAI,IAAA;OAJlB,CAAA;EAOA;EACJ;EACA;EACA;;MACI,KAAKC,CAAAA,OAAL,GAAe,EAAf,CAAA;EAEA;EACJ;EACA;EACA;;EACI,IAAA,KAAA,CAAKZ,MAAL,GAAA,QAAA,CAAA;EACEa,MAAAA,QAAQ,EAASjD,WADnB;EAEEkD,MAAAA,YAAY,EAAKhD,WAFnB;EAGEiD,MAAAA,UAAU,EAAO9C,OAHnB;EAIE2C,MAAAA,OAAO,EAAU,KAJnB;EAKEI,MAAAA,WAAW,EAAM,OALnB;QAMEC,UAAU,EAAOC,2BAAS,CAACC,kBAN7B;QAOEC,eAAe,EAAE,CAAC,GAPpB;EAQEC,MAAAA,aAAa,EAAI,QARnB;QASEC,cAAc,EAAG,CAAAhB,OAAO,IAAA,IAAP,YAAAA,OAAO,CAAES,UAAT,MAAwB/C,YAAAA;EAT3C,KAAA,EAUKsC,OAVL,EAAA;QAWEiB,WAAW,EAAA,QAAA,CAAA,EAAA,EACNlD,cADM,EAENiC,OAFM,oBAENA,OAAO,CAAEiB,WAFH,CAXb;EAeEC,MAAAA,UAAU,eACL1C,aADK,EAELwB,OAFK,IAELA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAEkB,UAFJ,CAAA;EAfZ,KAAA,CAAA,CAAA;EAqBA;EACJ;EACA;EACA;;MACI,KAAKC,CAAAA,OAAL,GAAe,IAAf,CAAA;EAEA;EACJ;EACA;EACA;;MACI,KAAKC,CAAAA,OAAL,GAAe,IAAf,CAAA;EAEA;EACJ;EACA;EACA;;MACI,KAAKC,CAAAA,OAAL,GAAe,IAAf,CAAA;EAEA;EACJ;EACA;;MACI,KAAKC,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EAEA;EACJ;EACA;EACA;;MACI,KAAKC,CAAAA,WAAL,GAAmB,IAAnB,CAAA;;MAEA,IAAI,KAAA,CAAKC,IAAL,EAAJ,EAAiB;EACf,MAAA,KAAA,CAAKD,WAAL,GAAmB,IAAIE,WAAJ,EAAnB,CAAA;QAEA,IAAMC,UAAU,GAAG,IAAIC,gBAAJ,CAAe,QAAf,EAAyB,CAAzB,EAA4B,CAA5B,CAAnB,CAAA;EACAD,MAAAA,UAAU,CAACzG,QAAX,CAAoBU,GAApB,CAAwB,CAAxB,EAA2B,KAAK+D,CAAAA,MAAL,CAAYqB,aAAZ,KAA8B,QAA9B,GAAyC,CAAzC,GAA6C,CAAC,CAAzE,EAA4E,CAA5E,CAAA,CAAA;;EACA,MAAA,KAAA,CAAKQ,WAAL,CAAiBK,GAAjB,CAAqBF,UAArB,CAAA,CAAA;EACD,KAAA;;EApFuB,IAAA,OAAA,KAAA,CAAA;EAqFzB,GAAA;EAED;EACF;EACA;;;EAzGA,EAAA,IAAA,MAAA,GAAA,iBAAA,CAAA,SAAA,CAAA;;IAAA,MA0GEG,CAAAA,IA1GF,GA0GE,SAAO,IAAA,GAAA;EAAA,IAAA,IAAA,aAAA;EAAA,QAAA,MAAA,GAAA,IAAA,CAAA;;EACL,IAAA,eAAA,CAAA,SAAA,CAAMA,IAAN,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;;MAEA,IAAKV,CAAAA,OAAL,GAAe,IAAKpB,CAAAA,GAAL,CAAS+B,SAAT,CAAmB,SAAnB,CAAf,CAAA;MACA,IAAKV,CAAAA,OAAL,GAAe,IAAKrB,CAAAA,GAAL,CAAS+B,SAAT,CAAmB,SAAnB,CAAf,CAAA;MACA,IAAKT,CAAAA,OAAL,GAAe,IAAKtB,CAAAA,GAAL,CAAS+B,SAAT,CAAmB,SAAnB,CAAf,CAAA;;MAEA,IAAI,CAAC,KAAKN,IAAL,EAAD,IAAgB,CAAC,IAAA,CAAKL,OAA1B,EAAmC;EACjC,MAAA,MAAM,IAAIxG,0BAAJ,CAAa,iEAAb,CAAN,CAAA;EACD,KAAA;;EAED,IAAA,IAAA,CAAA,aAAA,GAAI,KAAKwG,OAAT,KAAA,IAAA,IAAI,cAAczB,MAAd,CAAqByB,OAAzB,EAAkC;EAChC9F,MAAAA,uBAAK,CAAC+B,OAAN,CAAc,wFAAA,GACV,gDADJ,CAAA,CAAA;EAEA,MAAA,OAAO,IAAK+D,CAAAA,OAAL,CAAazB,MAAb,CAAoByB,OAA3B,CAAA;EACD,KAAA;;EAED,IAAA,IAAA,CAAKG,UAAL,GAAkB,IAAKS,CAAAA,YAAL,KAAsB,IAAItC,oBAAJ,CAAyB,IAAzB,CAAtB,GAAuD,IAAI9C,oBAAJ,CAAyB,IAAzB,CAAzE,CAAA;;MAEA,IAAI,IAAA,CAAK6E,IAAL,EAAJ,EAAiB;QACf,IAAKzB,CAAAA,GAAL,CAASiC,IAAT,CAAcpB,2BAAS,CAAChD,MAAV,CAAiBqE,KAA/B,EAAsC,YAAM;EAC1C,QAAA,MAAI,CAACC,gBAAL,EAAA,CAAA;;UACA,MAAI,CAACnC,GAAL,CAASoC,QAAT,CAAkBC,KAAlB,CAAwBR,GAAxB,CAA4B,MAAI,CAACL,WAAjC,CAAA,CAAA;;UAEA,IAAMc,YAAY,GAAG,IAAIC,kBAAJ,CAAiB,QAAjB,EAA2B,CAA3B,CAArB,CAAA;;UACA,MAAI,CAACvC,GAAL,CAASoC,QAAT,CAAkBC,KAAlB,CAAwBR,GAAxB,CAA4BS,YAA5B,CAAA,CAAA;;UAEA,MAAI,CAACtC,GAAL,CAASwC,WAAT,EAAA,CAAA;SAPF,CAAA,CAAA;QAUA,IAAKxC,CAAAA,GAAL,CAASyC,EAAT,CAAY5B,2BAAS,CAAChD,MAAV,CAAiB6E,gBAA7B,EAA+C,IAA/C,CAAA,CAAA;QACA,IAAK1C,CAAAA,GAAL,CAASyC,EAAT,CAAY5B,2BAAS,CAAChD,MAAV,CAAiB8E,YAA7B,EAA2C,IAA3C,CAAA,CAAA;QACA,IAAK3C,CAAAA,GAAL,CAASyC,EAAT,CAAY5B,2BAAS,CAAChD,MAAV,CAAiB+E,KAA7B,EAAoC,IAApC,CAAA,CAAA;EACA,MAAA,IAAA,CAAK1C,IAAL,CAAUI,YAAV,GAAyB,IAAKN,CAAAA,GAAL,CAAS6C,cAAT,CAAwB9E,SAAxB,EAAmC,IAAnC,CAAzB,CAAA;EACD,KAfD,MAgBK;EACH,MAAA,IAAA,CAAKqD,OAAL,CAAaqB,EAAb,CAAgB,eAAhB,EAAiC,IAAjC,CAAA,CAAA;EACD,KAAA;;MAED,IAAI,IAAA,CAAKT,YAAL,EAAJ,EAAyB;EACvB,MAAA,IAAI,IAAKrC,CAAAA,MAAL,CAAYmD,WAAhB,EAA6B;EAC3B,QAAA,IAAA,CAAKC,cAAL,CAAoB,IAAKpD,CAAAA,MAAL,CAAYmD,WAAhC,CAAA,CAAA;EACD,OAAA;EACF,KAJD,MAKK,IAAI,IAAA,CAAKnD,MAAL,CAAYnF,KAAhB,EAAuB;QAC1B,IAAKwC,CAAAA,QAAL,CAAc,IAAA,CAAK2C,MAAL,CAAYnF,KAA1B,EAAiC,IAAA,CAAKmF,MAAL,CAAYmD,WAA7C,CAAA,CAAA;QACA,OAAO,IAAA,CAAKnD,MAAL,CAAYnF,KAAnB,CAAA;EACD,KAAA;EACF,GAAA;EAED;EACF;EACA;EA9JA,GAAA;;IAAA,MA+JEC,CAAAA,OA/JF,GA+JE,SAAU,OAAA,GAAA;EAAA,IAAA,IAAA,qBAAA,EAAA,UAAA,CAAA;;MACR,IAAI,IAAA,CAAK2G,OAAT,EAAkB;EAChB,MAAA,IAAA,CAAKA,OAAL,CAAa4B,GAAb,CAAiB,eAAjB,EAAkC,IAAlC,CAAA,CAAA;EACD,KAAA;;MACD,IAAI,IAAA,CAAKxB,WAAT,EAAsB;QACpB,IAAKxB,CAAAA,GAAL,CAASoC,QAAT,CAAkBC,KAAlB,CAAwBY,MAAxB,CAA+B,IAAA,CAAKzB,WAApC,CAAA,CAAA;EACD,KAAA;;MAED,IAAKxB,CAAAA,GAAL,CAASgD,GAAT,CAAanC,2BAAS,CAAChD,MAAV,CAAiB6E,gBAA9B,EAAgD,IAAhD,CAAA,CAAA;MACA,IAAK1C,CAAAA,GAAL,CAASgD,GAAT,CAAanC,2BAAS,CAAChD,MAAV,CAAiB8E,YAA9B,EAA4C,IAA5C,CAAA,CAAA;MACA,IAAK3C,CAAAA,GAAL,CAASgD,GAAT,CAAanC,2BAAS,CAAChD,MAAV,CAAiB+E,KAA9B,EAAqC,IAArC,CAAA,CAAA;MACA,CAAK1C,qBAAAA,GAAAA,CAAAA,UAAAA,GAAAA,IAAAA,CAAAA,IAAL,EAAUI,YAAV,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA,IAAA,CAAA,UAAA,CAAA,CAAA;MAEA,IAAKiB,CAAAA,UAAL,CAAgB9G,OAAhB,EAAA,CAAA;EAEA,IAAA,OAAO,KAAK8F,OAAZ,CAAA;EACA,IAAA,OAAO,KAAKgB,UAAZ,CAAA;EACA,IAAA,OAAO,KAAKH,OAAZ,CAAA;EACA,IAAA,OAAO,KAAKC,OAAZ,CAAA;EACA,IAAA,OAAO,KAAKC,OAAZ,CAAA;EACA,IAAA,OAAO,KAAKE,WAAZ,CAAA;;EAEA,IAAA,eAAA,CAAA,SAAA,CAAM/G,OAAN,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;KArLJ,CAAA;;EAAA,EAAA,MAAA,CAwLEyI,WAxLF,GAwLE,SAAYC,WAAAA,CAAAA,CAAZ,EAAe;EAAA,IAAA,IAAA,cAAA,EAAA,qBAAA,CAAA;;EACb,IAAA,IAAI9H,IAAJ,CAAA;;MACA,QAAQ8H,CAAC,CAACC,IAAV;EACE,MAAA,KAAK,eAAL;UACE/H,IAAI,GAAA,CAAA,cAAA,GAAG8H,CAAC,CAACE,IAAF,CAAO,CAAP,CAAA,CAAUC,IAAb,KAAA,IAAA,GAAA,KAAA,CAAA,GAAG,cAAiBvF,CAAAA,SAAjB,CAAP,CAAA;;EACA,QAAA,IAAI1C,IAAJ,EAAU;EACR,UAAA,IAAA,CAAK0H,cAAL,CAAoB1H,IAAI,CAACV,MAAzB,EAAiCU,IAAjC,CAAA,CAAA;EACD,SAAA;;EACD,QAAA,MAAA;;EAEF,MAAA,KAAKwF,2BAAS,CAAChD,MAAV,CAAiB6E,gBAAtB,CAAA;EACA,MAAA,KAAK7B,2BAAS,CAAChD,MAAV,CAAiB8E,YAAtB;UACE,IAAI,IAAA,CAAKnB,WAAT,EAAsB;EACpB,UAAA,IAAA,CAAKW,gBAAL,EAAA,CAAA;EACD,SAAA;;EACD,QAAA,MAAA;;EAEF,MAAA,KAAKtB,2BAAS,CAAChD,MAAV,CAAiB+E,KAAtB;EACEvH,QAAAA,IAAI,GAAG8H,CAAAA,qBAAAA,GAAAA,CAAC,CAACE,IAAF,CAAO,CAAP,CAAUE,CAAAA,OAAV,CAAkBC,IAAlB,CAAuB,UAAAC,CAAC,EAAA;EAAA,UAAA,OAAIA,CAAC,CAACC,QAAF,CAAW3F,SAAX,CAAJ,CAAA;EAAA,SAAxB,CAAH,KAAG,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAoD2F,QAApD,CAA6D3F,SAA7D,CAAP,CAAA;;EACA,QAAA,IAAI1C,IAAJ,EAAU;EACR,UAAA,IAAA,CAAK0H,cAAL,CAAoB1H,IAAI,CAACV,MAAzB,EAAiCU,IAAjC,CAAA,CAAA;EACD,SAAA;;EACD,QAAA,MAAA;;EAEF,MAAA,KAAKwF,2BAAS,CAAC8C,aAAV,CAAwBC,YAA7B;EACE,QAAA,IAAA,CAAKC,eAAL,CAAqBV,CAAC,CAACW,MAAF,CAASC,MAA9B,EAAsCZ,CAAC,CAACW,MAAF,CAASE,WAA/C,CAAA,CAAA;;EACA,QAAA,MAAA;;EACF,MAAA,KAAKnD,2BAAS,CAAC8C,aAAV,CAAwBM,YAA7B;EACE,QAAA,IAAA,CAAKC,eAAL,CAAqBf,CAAC,CAACW,MAAF,CAASC,MAA9B,EAAsCZ,CAAC,CAACW,MAAF,CAASE,WAA/C,CAAA,CAAA;;EACA,QAAA,MAAA;;EACF,MAAA,KAAKnD,2BAAS,CAAC8C,aAAV,CAAwBQ,YAA7B;EACE,QAAA,IAAA,CAAKC,eAAL,CAAqBjB,CAAC,CAACW,MAAF,CAASC,MAA9B,CAAA,CAAA;;EACA,QAAA,MAAA;EA9BJ,KAAA;EAkCD,GAAA;EAED;EACF;EACA;EACA;EAjOA,GAAA;;IAAA,MAkOE/B,CAAAA,YAlOF,GAkOE,SAAe,YAAA,GAAA;EACb,IAAA,OAAO,IAAKrC,CAAAA,MAAL,CAAYa,QAAZ,KAAyBhD,WAAhC,CAAA;EACD,GAAA;EAED;EACF;EACA;EACA;EAzOA,GAAA;;IAAA,MA0OEzC,CAAAA,KA1OF,GA0OE,SAAQ,KAAA,GAAA;EACN,IAAA,OAAO,IAAK4E,CAAAA,MAAL,CAAYc,YAAZ,KAA6B/C,QAApC,CAAA;EACD,GAAA;EAED;EACF;EACA;EACA;EAjPA,GAAA;;IAAA,MAkPE+D,CAAAA,IAlPF,GAkPE,SAAO,IAAA,GAAA;EACL,IAAA,OAAO,IAAK9B,CAAAA,MAAL,CAAYe,UAAZ,KAA2B9C,OAAlC,CAAA;EACD,GAAA;EAED;EACF;EACA;EACA;EACA;EACA;EA3PA,GAAA;;EAAA,EAAA,MAAA,CA4PEZ,QA5PF,GA4PE,SAAA,QAAA,CAASxC,KAAT,EAAgBsI,WAAhB,EAA6B;EAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;;MAC3B,IAAI,IAAA,CAAKd,YAAL,EAAJ,EAAyB;EACvB,MAAA,MAAM,IAAIpH,0BAAJ,CAAa,sCAAb,CAAN,CAAA;EACD,KAAA;;EAED,IAAA,IAAA,CAAK2G,UAAL,CAAgBvE,QAAhB,CAAyBxC,KAAzB,CAAA,CAAA;;MAEA,IAAI,CAACsI,WAAL,EAAkB;EAChBA,MAAAA,WAAW,GAAGtI,KAAK,CAAC,CAAD,CAAL,CAASQ,EAAvB,CAAA;OADF,MAGK,IAAI,CAAC,IAAKuG,CAAAA,UAAL,CAAgB/G,KAAhB,CAAsBsI,WAAtB,CAAL,EAAyC;EAC5CA,MAAAA,WAAW,GAAGtI,KAAK,CAAC,CAAD,CAAL,CAASQ,EAAvB,CAAA;QACAM,uBAAK,CAAC+B,OAAN,CAAA,uDAAA,GAAsEyF,WAAtE,CAAA,CAAA;EACD,KAAA;;MAED,IAAKC,CAAAA,cAAL,CAAoBD,WAApB,CAAA,CAAA;;MAEA,IAAI,IAAA,CAAKxB,OAAT,EAAkB;QAChB,IAAKA,CAAAA,OAAL,CAAa+C,QAAb,CACE7J,KAAK,CAAC8J,GAAN,CAAU,UAAAxJ,IAAI,EAAA;UAAA,OAAK;YACjBE,EAAE,EAASF,IAAI,CAACE,EADC;YAEjBC,QAAQ,EAAGH,IAAI,CAACG,QAFC;YAGjBqC,IAAI,EAAOxC,IAAI,CAACwC,IAHC;YAIjBiH,SAAS,EAAEzJ,IAAI,CAACyJ,SAJC;EAKjBtE,UAAAA,OAAO,EAAI;cACTuE,OAAO,EAAW1J,IAAI,CAAC0J,OADd;cAETC,QAAQ,EAAU3J,IAAI,CAAC2J,QAFd;cAGTC,gBAAgB,EAAE5J,IAAI,CAAC4J,gBAHd;cAITC,WAAW,EAAO7J,IAAI,CAAC6J,WAAAA;EAJd,WAAA;WALC,CAAA;EAAA,OAAd,CADF,EAaE,UAAC3J,EAAD,EAAQ;UACN,MAAI,CAAC+H,cAAL,CAAoB/H,EAApB,CAAA,CAAA;;UACA,MAAI,CAACsG,OAAL,CAAasD,IAAb,EAAA,CAAA;SAfJ,CAAA,CAAA;EAkBD,KAAA;EACF,GAAA;EAED;EACF;EACA;EACA;EACA;EACA;EAxSA,GAAA;;EAAA,EAAA,MAAA,CAySE7B,cAzSF,GAySE,SAAA,cAAA,CAAepI,MAAf,EAAuBkK,QAAvB,EAAwC;EAAA,IAAA,IAAA,qBAAA;EAAA,QAAA,MAAA,GAAA,IAAA,CAAA;;EAAA,IAAA,IAAjBA,QAAiB,KAAA,KAAA,CAAA,EAAA;EAAjBA,MAAAA,QAAiB,GAAN,IAAM,CAAA;EAAA,KAAA;;MACtC,IAAIlK,MAAM,MAAK,CAAA,qBAAA,GAAA,IAAA,CAAKuF,IAAL,CAAUC,WAAf,KAAK,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAuBnF,EAA5B,CAAV,EAA0C;EACxC,MAAA,OAAO6B,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP,CAAA;EACD,KAAA;;MAED,IAAKkD,CAAAA,GAAL,CAAS8E,SAAT,EAAA,CAAA;EAEA,IAAA,IAAA,CAAK5E,IAAL,CAAUG,WAAV,GAAwB1F,MAAxB,CAAA;EAEA,IAAA,IAAMoK,QAAQ,GAAG,IAAK7E,CAAAA,IAAL,CAAUC,WAA3B,CAAA;EACA,IAAA,IAAM6E,gBAAgB,GAAGD,QAAQ,IAAIF,QAAZ,GAAuB,IAAA,CAAKI,iBAAL,CAAuBF,QAAvB,EAAiCF,QAAjC,CAAvB,GAAoE,IAA7F,CAAA;EAEA,IAAA,OAAOhI,OAAO,CAACqI,GAAR,CAAY;MAEjBrI,OAAO,CAACC,OAAR,CAAgB,IAAKyD,CAAAA,OAAL,CAAa5F,MAAb,CAAhB,CAAA,CACGmF,IADH,CACQ,YAAM;EACV,MAAA,IAAI,MAAI,CAACI,IAAL,CAAUG,WAAV,KAA0B1F,MAA9B,EAAsC;UACpC,MAAMW,uBAAK,CAAC6J,aAAN,EAAN,CAAA;EACD,OAAA;;EAED,MAAA,OAAO,MAAI,CAAC5D,UAAL,CAAgB7G,QAAhB,CAAyBC,MAAzB,CAAP,CAAA;EACD,KAPH,CAFiB,EAUjBkC,OAAO,CAACC,OAAR,CAAgBkI,gBAAgB,GAAG,IAAA,CAAKrF,MAAL,CAAYgB,WAAf,GAA6B,KAA7D,CAAA,CACGb,IADH,CACQ,UAACsF,KAAD,EAAW;EAAE;EACjB,MAAA,IAAIA,KAAJ,EAAW;EACT,QAAA,OAAO,MAAI,CAACpF,GAAL,CAASqF,OAAT,cAAsBL,gBAAtB,EAAA;EAAwCI,UAAAA,KAAK,EAALA,KAAAA;WAA/C,CAAA,CAAA,CAAA;EACD,OAAA;OAJL,CAAA,CAMGtF,IANH,CAMQ,YAAM;EACV,MAAA,MAAI,CAACE,GAAL,CAASpB,MAAT,CAAgB0G,IAAhB,EAAA,CAAA;EACD,KARH,CAViB,CAAZ,CAoBJxF,CAAAA,IApBI,CAoBC,UAAY,IAAA,EAAA;EAAA,MAAA,IAAA,cAAA,EAAA,cAAA,CAAA;;EAAA,MAAA,IAAVhF,IAAU,GAAA,IAAA,CAAA,CAAA,CAAA,CAAA;;EAChB,MAAA,IAAI,MAAI,CAACoF,IAAL,CAAUG,WAAV,KAA0B1F,MAA9B,EAAsC;UACpC,MAAMW,uBAAK,CAAC6J,aAAN,EAAN,CAAA;EACD,OAAA;;EAED,MAAA,MAAI,CAACjF,IAAL,CAAUC,WAAV,GAAwBrF,IAAxB,CAAA;;EAEA,MAAA,IAAI,MAAI,CAACoF,IAAL,CAAUE,cAAd,EAA8B;EAC5B,QAAA,MAAI,CAACF,IAAL,CAAUE,cAAV,CAAyBwE,IAAzB,EAAA,CAAA;;EACA,QAAA,MAAI,CAAC1E,IAAL,CAAUE,cAAV,GAA2B,IAA3B,CAAA;EACD,OAAA;;EAED,MAAA,IAAI,MAAI,CAACqB,IAAL,EAAJ,EAAiB;EAAA,QAAA,IAAA,kBAAA,CAAA;;EACf,QAAA,CAAA,kBAAA,GAAA,MAAI,CAACD,WAAL,EAAiByB,MAAjB,2BAA2B,MAAI,CAACzB,WAAL,CAAiB+D,QAAjB,CAA0BC,MAA1B,CAAiC,UAAA/B,CAAC,EAAA;EAAA,UAAA,OAAIA,CAAC,CAACL,IAAF,KAAW,MAAf,CAAA;EAAA,SAAlC,CAA3B,CAAA,CAAA;EACD,OAAA;;QAED,CAAI,cAAA,GAAA,MAAA,CAAChC,OAAL,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,cAAA,CAAcqE,YAAd,EAAA,CAAA;QACA,CAAI,cAAA,GAAA,MAAA,CAACpE,OAAL,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,cAAA,CAAcqE,aAAd,EAAA,CAAA;QAEA,OAAO,MAAI,CAAC1F,GAAL,CAAS2F,WAAT,CAAqB7K,IAAI,CAACG,QAA1B,EAAoC;EACzC2F,QAAAA,UAAU,EAAQ,MAAI,CAACjB,MAAL,CAAYiB,UADW;UAEzC4D,OAAO,EAAW1J,IAAI,CAAC0J,OAFkB;UAGzCG,WAAW,EAAO7J,IAAI,CAAC6J,WAHkB;UAIzCF,QAAQ,EAAU3J,IAAI,CAAC2J,QAJkB;UAKzCC,gBAAgB,EAAE5J,IAAI,CAAC4J,gBAAAA;EALkB,OAApC,CAOJ5E,CAAAA,IAPI,CAOC,UAAC8F,SAAD,EAAe;UACnB,IAAI,CAACA,SAAL,EAAgB;YACd,MAAMtK,uBAAK,CAAC6J,aAAN,EAAN,CAAA;EACD,SAAA;EACF,OAXI,CAAP,CAAA;OAvCG,CAAA,CAoDJrF,IApDI,CAoDC,YAAM;EACV,MAAA,IAAI,MAAI,CAACI,IAAL,CAAUG,WAAV,KAA0B1F,MAA9B,EAAsC;UACpC,MAAMW,uBAAK,CAAC6J,aAAN,EAAN,CAAA;EACD,OAAA;;EAED,MAAA,IAAMrK,IAAI,GAAG,MAAI,CAACoF,IAAL,CAAUC,WAAvB,CAAA;;QAEA,IAAIrF,IAAI,CAACsG,OAAT,EAAkB;UAChB,IAAI,MAAI,CAACA,OAAT,EAAkB;EAChB,UAAA,MAAI,CAACA,OAAL,CAAayE,UAAb,CAAwB/K,IAAI,CAACsG,OAA7B,CAAA,CAAA;EACD,SAFD,MAGK;EACH9F,UAAAA,uBAAK,CAAC+B,OAAN,CAAsBvC,OAAAA,GAAAA,IAAI,CAACE,EAA3B,GAAA,oDAAA,CAAA,CAAA;EACD,SAAA;EACF,OAAA;;QAED,MAAI,CAAC8K,aAAL,CAAmBhL,IAAnB,CAAA,CAAA;;QACA,MAAI,CAACiL,SAAL,CAAejL,IAAf,CAAA,CAAA;EAEA;EACR;EACA;EACA;EACA;EACA;EACA;;;QACQ,MAAI,CAACkL,OAAL,CAAanI,MAAM,CAACC,YAApB,EAAkCnD,MAAlC,EAA0C;EACxCoK,QAAAA,QAAQ,EAARA,QADwC;EAExCF,QAAAA,QAAQ,EAARA,QAFwC;EAGxCG,QAAAA,gBAAgB,EAAhBA,gBAAAA;SAHF,CAAA,CAAA;;EAMA,MAAA,MAAI,CAAC9E,IAAL,CAAUG,WAAV,GAAwB,IAAxB,CAAA;EAEA,MAAA,OAAO,IAAP,CAAA;EACD,KAvFI,CAwFJ4F,CAAAA,KAxFI,CAwFE,UAACC,GAAD,EAAS;EACd,MAAA,IAAI5K,uBAAK,CAAC6K,YAAN,CAAmBD,GAAnB,CAAJ,EAA6B;EAC3B,QAAA,OAAO,KAAP,CAAA;EACD,OAAA;;EAED,MAAA,MAAI,CAAClG,GAAL,CAASoG,SAAT,CAAmB,MAAI,CAACpG,GAAL,CAASL,MAAT,CAAgB0G,IAAhB,CAAqBC,SAAxC,CAAA,CAAA;;EAEA,MAAA,MAAI,CAACtG,GAAL,CAASpB,MAAT,CAAgBgG,IAAhB,EAAA,CAAA;;EACA,MAAA,MAAI,CAAC5E,GAAL,CAASuG,MAAT,CAAgBC,UAAhB,CAA2B,EAA3B,CAAA,CAAA;;EAEA,MAAA,MAAI,CAACtG,IAAL,CAAUG,WAAV,GAAwB,IAAxB,CAAA;EAEA,MAAA,MAAM6F,GAAN,CAAA;EACD,KArGI,CAAP,CAAA;EAsGD,GAAA;EAED;EACF;EACA;EACA;EACA;EAjaA,GAAA;;EAAA,EAAA,MAAA,CAkaEJ,aAlaF,GAkaE,SAAchL,aAAAA,CAAAA,IAAd,EAAoB;EAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;;MAClB,IAAM2L,SAAS,GAAG,EAAlB,CAAA;EAEA3L,IAAAA,IAAI,CAACsC,KAAL,CAAWD,OAAX,CAAmB,UAAC9B,IAAD,EAAU;QAC3B,IAAMH,QAAQ,GAAG,MAAI,CAAC+J,iBAAL,CAAuBnK,IAAvB,EAA6BO,IAA7B,CAAjB,CAAA;;QACAoL,SAAS,CAACC,IAAV,CAAexL,QAAf,CAAA,CAAA;;EAEA,MAAA,IAAI,MAAI,CAACuG,IAAL,EAAJ,EAAiB;EAAA,QAAA,IAAA,cAAA,EAAA,gBAAA,EAAA,iBAAA,CAAA;;UACf,IAAMhG,IAAI,GAAG,IAAIkL,UAAJ,CAASnH,UAAT,EAAqB,IAAIoH,yBAAJ,EAArB,CAAb,CAAA;UACAnL,IAAI,CAACiI,QAAL,IAAA,cAAA,GAAA,EAAA,EAAA,cAAA,CAAmB3F,SAAnB,CAAA,GAA+B1C,IAA/B,EAAA,cAAA,CAAqCwL,SAArC,GAAgD3L,QAAQ,CAAC2L,SAAzD,EAAA,cAAA,CAAA,CAAA;EACApL,QAAAA,IAAI,CAACqL,QAAL,CAAcC,KAAd,GAAsB,KAAtB,CAAA;EACAtL,QAAAA,IAAI,CAACuL,OAAL,CAAa,CAAC9L,QAAQ,CAAC2L,SAAvB,CAAA,CAAA;;EACA,QAAA,MAAI,CAAC7G,GAAL,CAASiH,UAAT,CACGC,wBADH,CAC4B;YAAEL,SAAS,EAAE3L,QAAQ,CAAC2L,SAAtB;EAAiCM,UAAAA,QAAQ,EAAE,CAAA;WADvE,EAC4E1L,IAAI,CAACP,QADjF,CAAA,CAEGkM,cAFH,CAEkB,CAAA,GAAIvG,2BAAS,CAACwG,aAFhC,CAAA,CAAA;;UAIA,IAAMC,WAAW,GAAG,IAAIX,UAAJ,CAASlH,kBAAT,EAA6B,IAAI8H,uBAAJ,CAAsB;EAAEC,UAAAA,IAAI,EAAEC,cAAAA;EAAR,SAAtB,CAA7B,CAApB,CAAA;EACAH,QAAAA,WAAW,CAACpM,QAAZ,CAAqBwM,IAArB,CAA0BjM,IAAI,CAACP,QAA/B,CAAA,CAAA;EACAoM,QAAAA,WAAW,CAACR,QAAZ,CAAqBY,IAArB,CAA0BjM,IAAI,CAACqL,QAA/B,CAAA,CAAA;EAEAtL,QAAAA,YAAY,CAACC,IAAD,EAAO,CAAAJ,CAAAA,gBAAAA,GAAAA,IAAI,CAAC8F,UAAL,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,gBAAA,CAAiBzF,KAAjB,KAA0B,MAAI,CAACiE,MAAL,CAAYwB,UAAZ,CAAuBzF,KAAxD,CAAZ,CAAA;EACAF,QAAAA,YAAY,CAAC8L,WAAD,EAAc,CAAAjM,CAAAA,iBAAAA,GAAAA,IAAI,CAAC8F,UAAL,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,iBAAA,CAAiBxC,YAAjB,KAAiC,MAAI,CAACgB,MAAL,CAAYwB,UAAZ,CAAuBxC,YAAtE,CAAZ,CAAA;;EAEA,QAAA,MAAI,CAAC6C,WAAL,CAAiBK,GAAjB,CAAqBpG,IAArB,CAAA,CAAA;;EACA,QAAA,MAAI,CAAC+F,WAAL,CAAiBK,GAAjB,CAAqByF,WAArB,CAAA,CAAA;EACD,OAlBD,MAmBK;EAAA,QAAA,IAAA,KAAA,CAAA;;EACH,QAAA,IAAI,MAAI,CAACvM,KAAL,EAAJ,EAAkB;EAChBG,UAAAA,QAAQ,CAACiM,QAAT,IAAqB,MAAI,CAACxH,MAAL,CAAYoB,eAAjC,CAAA;EACD,SAAA;;EAED,QAAA,MAAI,CAACK,OAAL,CAAauG,SAAb,CACK,QAAA,CAAA,EAAA,EAAA,MAAI,CAAChI,MAAL,CAAYuB,WADjB,EAEK7F,IAAI,CAAC6F,WAFV,EAAA;YAGElG,EAAE,EAAA,YAAA,GAAqBK,IAAI,CAACV,MAH9B;YAIEiN,OAAO,EAAGvM,IAAI,CAACiC,IAJjB;EAKEuK,UAAAA,OAAO,EAAG,IALZ;EAMEC,UAAAA,QAAQ,EAAE,IANZ;EAOEC,UAAAA,OAAO,EAAG,IAPZ;YAQEzE,IAAI,GAAA,KAAA,GAAA,EAAA,EAAA,KAAA,CAASvF,SAAT,CAAA,GAAqB1C,IAArB,EAAA,KAAA,CAAA;WACDH,EAAAA,QATL,GAUG,KAVH,CAAA,CAAA;EAWD,OAAA;OAvCH,CAAA,CAAA;;MA0CA,IAAI,IAAA,CAAKuG,IAAL,EAAJ,EAAiB;EACf,MAAA,IAAA,CAAKU,gBAAL,EAAA,CAAA;EACD,KAFD,MAGK;QACH,IAAKf,CAAAA,OAAL,CAAa4G,aAAb,EAAA,CAAA;EACD,KAAA;;EAED,IAAA,IAAI,KAAKrI,MAAL,CAAYsB,cAAZ,IAA8B,IAAA,CAAKI,OAAvC,EAAgD;EAC9C,MAAA,IAAA,CAAKA,OAAL,CAAa4G,WAAb,CAAyBxB,SAAzB,CAAA,CAAA;EACD,KAAA;EACF,GAAA;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EAjeA,GAAA;;EAAA,EAAA,MAAA,CAkeExB,iBAleF,GAkeE,SAAA,iBAAA,CAAkBnK,IAAlB,EAAwBO,IAAxB,EAA8B;MAC5B,IAAI,IAAA,CAAKN,KAAL,EAAJ,EAAkB;QAChB,IAAMe,EAAE,GAAG,CAACoM,eAAS,CAACC,QAAV,CAAmBrN,IAAI,CAACI,QAAL,CAAc,CAAd,CAAnB,CAAD,EAAuCgN,eAAS,CAACC,QAAV,CAAmBrN,IAAI,CAACI,QAAL,CAAc,CAAd,CAAnB,CAAvC,CAAX,CAAA;QACA,IAAMa,EAAE,GAAG,CAACmM,eAAS,CAACC,QAAV,CAAmB9M,IAAI,CAACH,QAAL,CAAc,CAAd,CAAnB,CAAD,EAAuCgN,eAAS,CAACC,QAAV,CAAmB9M,IAAI,CAACH,QAAL,CAAc,CAAd,CAAnB,CAAvC,CAAX,CAAA;QACA,IAAMkN,EAAE,GAAGtN,IAAI,CAACI,QAAL,CAAc,CAAd,CAAqBmN,KAAAA,SAArB,GAAiCvN,IAAI,CAACI,QAAL,CAAc,CAAd,CAAjC,GAAoDG,IAAI,CAACH,QAAL,CAAc,CAAd,CAAA,IAAoB,CAAnF,CAAA;QACA,IAAMoN,EAAE,GAAGjN,IAAI,CAACH,QAAL,CAAc,CAAd,CAAqBmN,KAAAA,SAArB,GAAiChN,IAAI,CAACH,QAAL,CAAc,CAAd,CAAjC,GAAoDJ,IAAI,CAACI,QAAL,CAAc,CAAd,CAAA,IAAoB,CAAnF,CAAA;QAEA,IAAIiM,QAAQ,GAAG,CAAf,CAAA;;QACA,IAAIiB,EAAE,KAAKE,EAAX,EAAe;EACbnB,QAAAA,QAAQ,GAAG5K,IAAI,CAACgM,IAAL,CAAU,CAACD,EAAE,GAAGF,EAAN,IAAYvM,QAAQ,CAACC,EAAD,EAAKC,EAAL,CAA9B,CAAX,CAAA;EACD,OAAA;;EAED,MAAA,IAAM8K,SAAS,GAAG5K,OAAO,CAACH,EAAD,EAAKC,EAAL,CAAzB,CAAA;QAEA,OAAO;EAAE8K,QAAAA,SAAS,EAATA,SAAF;EAAaM,QAAAA,QAAQ,EAARA,QAAAA;SAApB,CAAA;EACD,KAdD,MAeK;QACH,OAAO,IAAA,CAAKnH,GAAL,CAASiH,UAAT,CAAoBuB,aAApB,CAAkCnN,IAAlC,CAAP,CAAA;EACD,KAAA;EACF,GAAA;EAED;EACF;EACA;EAzfA,GAAA;;EAAA,EAAA,MAAA,CA0fEwI,eA1fF,GA0fE,SAAA,eAAA,CAAgBpI,IAAhB,EAAsBuI,WAAtB,EAAmC;EAAA,IAAA,IAAA,iBAAA,CAAA;;EACjC,IAAA,IAAM3I,IAAI,GAAGI,IAAI,CAACiI,QAAL,CAAc3F,SAAd,CAAb,CAAA;EAEAvC,IAAAA,YAAY,CAACC,IAAD,EAAO,CAAAJ,CAAAA,iBAAAA,GAAAA,IAAI,CAAC8F,UAAL,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,iBAAA,CAAiBzC,UAAjB,KAA+B,KAAKiB,MAAL,CAAYwB,UAAZ,CAAuBzC,UAA7D,CAAZ,CAAA;;MAEA,IAAIrD,IAAI,CAACiC,IAAT,EAAe;QACb,IAAK4C,CAAAA,IAAL,CAAUE,cAAV,GAA2B,IAAA,CAAKJ,GAAL,CAAS4H,OAAT,CAAiBa,MAAjB,CAAwB;UACjDC,IAAI,EAAK1E,WAAW,CAACtH,CAD4B;UAEjDiM,GAAG,EAAM3E,WAAW,CAAC1H,CAF4B;UAGjDyL,OAAO,EAAE1M,IAAI,CAACiC,IAAAA;EAHmC,OAAxB,CAA3B,CAAA;EAKD,KAAA;;MAED,IAAK0C,CAAAA,GAAL,CAASwC,WAAT,EAAA,CAAA;EACD,GAAA;EAGD;EACF;EACA;EA7gBA,GAAA;;EAAA,EAAA,MAAA,CA8gBE0B,eA9gBF,GA8gBE,SAAA,eAAA,CAAgBzI,IAAhB,EAAsBuI,WAAtB,EAAmC;EACjC,IAAA,IAAI,IAAK9D,CAAAA,IAAL,CAAUE,cAAd,EAA8B;EAC5B,MAAA,IAAA,CAAKF,IAAL,CAAUE,cAAV,CAAyBwI,IAAzB,CAA8B;UAC5BF,IAAI,EAAE1E,WAAW,CAACtH,CADU;UAE5BiM,GAAG,EAAG3E,WAAW,CAAC1H,CAAAA;SAFpB,CAAA,CAAA;EAID,KAAA;EACF,GAAA;EAGD;EACF;EACA;EA1hBA,GAAA;;EAAA,EAAA,MAAA,CA2hBE8H,eA3hBF,GA2hBE,SAAgB3I,eAAAA,CAAAA,IAAhB,EAAsB;EAAA,IAAA,IAAA,iBAAA,CAAA;;EACpB,IAAA,IAAMJ,IAAI,GAAGI,IAAI,CAACiI,QAAL,CAAc3F,SAAd,CAAb,CAAA;EAEAvC,IAAAA,YAAY,CAACC,IAAD,EAAO,CAAAJ,CAAAA,iBAAAA,GAAAA,IAAI,CAAC8F,UAAL,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,iBAAA,CAAiBzF,KAAjB,KAA0B,KAAKiE,MAAL,CAAYwB,UAAZ,CAAuBzF,KAAxD,CAAZ,CAAA;;EAEA,IAAA,IAAI,IAAKwE,CAAAA,IAAL,CAAUE,cAAd,EAA8B;EAC5B,MAAA,IAAA,CAAKF,IAAL,CAAUE,cAAV,CAAyBwE,IAAzB,EAAA,CAAA;EACA,MAAA,IAAA,CAAK1E,IAAL,CAAUE,cAAV,GAA2B,IAA3B,CAAA;EACD,KAAA;;MAED,IAAKJ,CAAAA,GAAL,CAASwC,WAAT,EAAA,CAAA;EACD,GAAA;EAED;EACF;EACA;EACA;EA3iBA,GAAA;;IAAA,MA4iBEL,CAAAA,gBA5iBF,GA4iBE,SAAmB,gBAAA,GAAA;EACjB,IAAA,IAAA,CAAKX,WAAL,CAAiBtG,QAAjB,CAA0BwM,IAA1B,CAA+B,IAAA,CAAK1H,GAAL,CAASE,IAAT,CAAc2I,SAA7C,CAAwDzB,CAAAA,cAAxD,CAAuE,GAAvE,CAAA,CAAA;EACA,IAAA,IAAM0B,CAAC,GAAG,IAAA,CAAKnJ,MAAL,CAAYwB,UAAZ,CAAuB9C,KAAjC,CAAA;MACA,IAAM0K,CAAC,GAAGD,CAAC,CAAC,CAAD,CAAD,GAAO,CAACA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAT,KAAiB,IAAA,CAAK9I,GAAL,CAASgJ,YAAT,EAA0B,GAAA,GAA3C,CAAjB,CAAA;MACA,IAAM1M,CAAC,GAAG,GAAA,GAAO,IAAK0D,CAAAA,GAAL,CAASgJ,YAAT,EAAA,GAA0B,GAA3B,GAAkC,GAAlD,CAAA;EACA,IAAA,IAAA,CAAKxH,WAAL,CAAiBtG,QAAjB,CAA0BoB,CAA1B,IAA+B,IAAKqD,CAAAA,MAAL,CAAYqB,aAAZ,KAA8B,QAA9B,GAAyC,CAAC1E,CAA1C,GAA8CA,CAA7E,CAAA;MACA,IAAKkF,CAAAA,WAAL,CAAiBnD,KAAjB,CAAuBzC,GAAvB,CAA2BmN,CAA3B,EAA8BA,CAA9B,EAAiCA,CAAjC,CAAA,CAAA;EACD,GAAA;EAED;EACF;EACA;EACA;EACA;EAzjBA,GAAA;;EAAA,EAAA,MAAA,CA0jBEhD,SA1jBF,GA0jBE,SAAUjL,SAAAA,CAAAA,IAAV,EAAgB;EAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;;EACd,IAAA,IAAI,CAAC,IAAA,CAAK6E,MAAL,CAAYY,OAAjB,EAA0B;EACxB,MAAA,OAAA;EACD,KAAA;;EAED,IAAA,IAAA,CAAKA,OAAL,CAAazF,IAAI,CAACE,EAAlB,IAAwB,IAAxB,CAAA;MAEA,IAAKkF,CAAAA,IAAL,CAAUC,WAAV,CAAsB/C,KAAtB,CACGoI,MADH,CACU,UAAAnK,IAAI,EAAA;QAAA,OAAI,CAAC,MAAI,CAACkF,OAAL,CAAalF,IAAI,CAACV,MAAlB,CAAL,CAAA;EAAA,KADd,CAEG6K,CAAAA,MAFH,CAEU,UAACnK,IAAD,EAAU;QAChB,IAAI,OAAO,MAAI,CAACsE,MAAL,CAAYY,OAAnB,KAA+B,UAAnC,EAA+C;EAC7C,QAAA,OAAO,MAAI,CAACZ,MAAL,CAAYY,OAAZ,CAAoB,MAAI,CAACL,IAAL,CAAUC,WAA9B,EAA2C9E,IAA3C,CAAP,CAAA;EACD,OAFD,MAGK;EACH,QAAA,OAAO,IAAP,CAAA;EACD,OAAA;EACF,KATH,CAUG8B,CAAAA,OAVH,CAUW,UAAC9B,IAAD,EAAU;QACjB,MAAI,CAACkF,OAAL,CAAalF,IAAI,CAACV,MAAlB,CAAA,GAA4B,MAAI,CAAC4G,UAAL,CAAgB7G,QAAhB,CAAyBW,IAAI,CAACV,MAA9B,EACzBmF,IADyB,CACpB,UAACmJ,QAAD,EAAc;UAClB,OAAO,MAAI,CAACjJ,GAAL,CAASkJ,aAAT,CAAuBC,eAAvB,CAAuCF,QAAQ,CAAChO,QAAhD,CAAP,CAAA;SAFwB,CAAA,CAIzB6E,IAJyB,CAIpB,YAAM;EACV,QAAA,MAAI,CAACS,OAAL,CAAalF,IAAI,CAACV,MAAlB,IAA4B,IAA5B,CAAA;SALwB,CAAA,CAOzBsL,KAPyB,CAOnB,YAAM;EACX,QAAA,OAAO,MAAI,CAAC1F,OAAL,CAAalF,IAAI,CAACV,MAAlB,CAAP,CAAA;EACD,OATyB,CAA5B,CAAA;OAXJ,CAAA,CAAA;KAjkBJ,CAAA;;EAAA,EAAA,OAAA,iBAAA,CAAA;EAAA,CAAA,CAAuCyO,gCAAvC,EAAA;EAAarJ,kBAEJ/E,KAAK;EAFD+E,kBAIJlC,SAASA;EAJLkC,kBAKJxC,cAAcA;EALVwC,kBAMJvC,cAAcA;EANVuC,kBAOJnC,UAAUA;EAPNmC,kBAQJpC,eAAeA;EARXoC,kBASJtC,cAAcA;EATVsC,kBAUJrC,WAAWA;;;;;;;;;;;;;;;;;"}