{"version":3,"file":"moveable.cjs.js","sources":["../src/react-moveable/ables/AbleManager.ts","../src/react-moveable/consts.ts","../src/react-moveable/gesto/CustomGesto.ts","../src/react-moveable/gesto/GestoUtils.ts","../src/react-moveable/gesto/GestoData.ts","../src/react-moveable/utils.tsx","../src/react-moveable/ables/Pinchable.ts","../src/react-moveable/groupUtils.ts","../src/react-moveable/ables/snappable/utils.ts","../src/react-moveable/ables/snappable/snap.ts","../src/react-moveable/ables/snappable/innerBounds.ts","../src/react-moveable/ables/snappable/bounds.ts","../src/react-moveable/ables/snappable/render.tsx","../src/react-moveable/ables/snappable/snapBounds.ts","../src/react-moveable/ables/snappable/getTotalGuidelines.ts","../src/react-moveable/ables/Snappable.tsx","../src/react-moveable/renderDirections.tsx","../src/react-moveable/ables/Draggable.tsx","../src/react-moveable/ables/Resizable.ts","../src/react-moveable/ables/Rotatable.tsx","../src/react-moveable/ables/Scalable.ts","../src/react-moveable/ables/Warpable.tsx","../src/react-moveable/classNames.ts","../src/react-moveable/ables/DragArea.tsx","../src/react-moveable/ables/Origin.tsx","../src/react-moveable/ables/Scrollable.ts","../src/react-moveable/ables/Default.ts","../src/react-moveable/ables/Padding.tsx","../src/react-moveable/ables/roundable/borderRadius.tsx","../src/react-moveable/ables/clippable/utils.tsx","../src/react-moveable/ables/Clippable.tsx","../src/react-moveable/ables/OriginDraggable.tsx","../src/react-moveable/ables/Roundable.tsx","../src/react-moveable/ables/BeforeRenderable.ts","../src/react-moveable/ables/Renderable.ts","../src/react-moveable/gesto/getAbleGesto.ts","../src/react-moveable/EventManager.ts","../src/react-moveable/utils/getMatrixStackInfo.ts","../src/react-moveable/utils/calculateMatrixStack.ts","../src/react-moveable/utils/getElementInfo.ts","../src/react-moveable/utils/getMoveableTargetInfo.ts","../src/react-moveable/utils/persist.ts","../src/react-moveable/MoveableManager.tsx","../src/react-moveable/ables/Groupable.tsx","../src/react-moveable/ables/Clickable.ts","../src/react-moveable/ables/edgeDraggable.tsx","../src/react-moveable/ables/IndividualGroupable.tsx","../src/react-moveable/ables/consts.ts","../src/react-moveable/Snappable/utils.ts","../src/react-moveable/MoveableGroup.tsx","../src/react-moveable/MoveableIndividualGroup.tsx","../src/react-moveable/InitialMoveable.tsx","../src/react-moveable/Moveable.tsx","../src/react-moveable/makeMoveable.ts","../src/react-moveable/index.umd.ts"],"sourcesContent":["import { Able, DefaultProps } from \"../types\";\n\nexport function makeAble<\n    Name extends string,\n    AbleObject extends Partial<Able<any, any>>,\n    Props extends DefaultProps<Name, AbleObject>,\n>(name: Name, able: AbleObject) {\n    return {\n        events: {} as const,\n        props: {\n            [name]: Boolean,\n        } as Props,\n        name,\n        ...able,\n    } as const;\n}\n","import getAgent from \"@egjs/agent\";\nimport { IObject } from \"@daybrush/utils\";\nimport { MoveableInterface } from \"./types\";\n\nfunction getSVGCursor(scale: number, degree: number) {\n    return `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${32 * scale}px\" height=\"${32 * scale}px\" viewBox=\"0 0 32 32\" ><path d=\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\" stroke-linejoin=\"round\" stroke-width=\"1.2\" fill=\"black\" stroke=\"white\" style=\"transform:rotate(${degree}deg);transform-origin: 16px 16px\"></path></svg>`;\n}\nfunction getCursorCSS(degree: number) {\n    const x1 = getSVGCursor(1, degree);\n    // const x2 = getSVGCursor(2, degree);\n    const degree45 = (Math.round(degree / 45) * 45) % 180;\n    let defaultCursor = \"ns-resize\";\n\n    if (degree45 === 135) {\n        defaultCursor = \"nwse-resize\";\n    } else if (degree45 === 45) {\n        defaultCursor = \"nesw-resize\";\n    } else if (degree45 === 90) {\n        defaultCursor = \"ew-resize\";\n    }\n\n    // tslint:disable-next-line: max-line-length\n    return `cursor:${defaultCursor};cursor: url('${x1}') 16 16, ${defaultCursor};`;\n}\n\nexport const agent = getAgent();\nexport const IS_WEBKIT = agent.browser.webkit;\nexport const IS_WEBKIT605 = IS_WEBKIT && (() => {\n    const navi = typeof window === \"undefined\" ? { userAgent: \"\" } : window.navigator;\n    const res = /applewebkit\\/([^\\s]+)/g.exec(navi.userAgent.toLowerCase());\n\n    return res ? parseFloat(res[1]) < 605 : false;\n})();\n\nexport const IS_FIREFOX = agent.browser.name === \"firefox\";\nexport const IS_SAFARI_ABOVE15\n    = parseInt(agent.browser.webkitVersion, 10) >= 612\n    || parseInt(agent.browser.version, 10) >= 15;\n\nexport const PREFIX = \"moveable-\";\nexport const MOVEABLE_CSS = `\n{\n\tposition: absolute;\n\twidth: 1px;\n\theight: 1px;\n\tleft: 0;\n\ttop: 0;\n    z-index: 3000;\n    --moveable-color: #4af;\n    --zoom: 1;\n    --zoompx: 1px;\n    will-change: transform;\n    outline: 1px solid transparent;\n}\n.control-box {\n    z-index: 0;\n}\n.line, .control {\n    position: absolute;\n\tleft: 0;\n    top: 0;\n    will-change: transform;\n}\n.control {\n\twidth: 14px;\n\theight: 14px;\n\tborder-radius: 50%;\n\tborder: 2px solid #fff;\n\tbox-sizing: border-box;\n    background: #4af;\n    background: var(--moveable-color);\n\tmargin-top: -7px;\n    margin-left: -7px;\n    border: 2px solid #fff;\n    z-index: 10;\n}\n.padding {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100px;\n    height: 100px;\n    transform-origin: 0 0;\n}\n.line {\n\twidth: 1px;\n    height: 1px;\n    background: #4af;\n    background: var(--moveable-color);\n\ttransform-origin: 0px 50%;\n}\n.line.edge {\n    z-index: 1;\n    background: transparent;\n}\n.line.dashed {\n    box-sizing: border-box;\n    background: transparent;\n}\n.line.dashed.horizontal {\n    border-top: 1px dashed #4af;\n    border-top-color: #4af;\n    border-top-color: var(--moveable-color);\n}\n.line.dashed.vertical {\n    border-left: 1px dashed #4af;\n    border-left-color: #4af;\n    border-left-color: var(--moveable-color);\n}\n.line.vertical {\n    transform: translateX(-50%);\n}\n.line.horizontal {\n    transform: translateY(-50%);\n}\n.line.vertical.bold {\n    width: 2px;\n}\n.line.horizontal.bold {\n    height: 2px;\n}\n\n.control.origin {\n\tborder-color: #f55;\n\tbackground: #fff;\n\twidth: 12px;\n\theight: 12px;\n\tmargin-top: -6px;\n    margin-left: -6px;\n\tpointer-events: none;\n}\n${[0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(degree => `\n.direction[data-rotation=\"${degree}\"], :global .view-control-rotation${degree} {\n\t${getCursorCSS(degree)}\n}\n`).join(\"\\n\")}\n.group {\n    z-index: -1;\n}\n.area {\n    position: absolute;\n}\n.area-pieces {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n}\n.area.avoid, .area.pass {\n    pointer-events: none;\n}\n.area.avoid+.area-pieces {\n    display: block;\n}\n.area-piece {\n    position: absolute;\n}\n\n${IS_WEBKIT605 ? `:global svg *:before {\n\tcontent:\"\";\n\ttransform-origin: inherit;\n}` : \"\"}\n`;\nexport const DRAGGER_EVENTS = [\"dragstart\", \"drag\", \"dragend\", \"pinchstart\", \"pinch\", \"pinchend\"];\n\nexport const NEARBY_POS = [\n    [0, 1, 2],\n    [1, 0, 3],\n    [2, 0, 3],\n    [3, 1, 2],\n];\n\nexport const FLOAT_POINT_NUM = 0.0001;\nexport const TINY_NUM = 0.0000001;\nexport const MIN_SCALE = 0.000000001;\nexport const MAX_NUM = Math.pow(10, 10);\nexport const MIN_NUM = -MAX_NUM;\n\n\nexport const DIRECTIONS4 = [\"n\", \"w\", \"s\", \"e\"];\nexport const DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\n\nexport const DIRECTION_REGION_TO_DIRECTION: Record<string, number[]> = {\n    n: [0, -1],\n    e: [1, 0],\n    s: [0, 1],\n    w: [-1, 0],\n    nw: [-1, -1],\n    ne: [1, -1],\n    sw: [-1, 1],\n    se: [1, 1],\n};\n\nexport const DIRECTION_INDEXES: IObject<number[]> = {\n    n: [0, 1],\n    e: [1, 3],\n    s: [3, 2],\n    w: [2, 0],\n    nw: [0],\n    ne: [1],\n    sw: [2],\n    se: [3],\n};\nexport const DIRECTION_ROTATIONS: IObject<number> = {\n    n: 0,\n    s: 180,\n    w: 270,\n    e: 90,\n    nw: 315,\n    ne: 45,\n    sw: 225,\n    se: 135,\n};\n\nexport const MOVEABLE_METHODS: Array<keyof MoveableInterface> = [\n    \"isMoveableElement\",\n    \"updateRect\",\n    \"updateTarget\",\n    \"destroy\",\n    \"dragStart\",\n    \"isInside\",\n    \"hitTest\",\n    \"setState\",\n    \"getRect\",\n    \"request\",\n    \"isDragging\",\n    \"getManager\",\n    \"forceUpdate\",\n    \"waitToChangeTarget\",\n    \"updateSelectors\",\n    \"getTargets\",\n    \"stopDrag\",\n];\n","import { MoveableManagerState, OnCustomDrag } from \"../types\";\nimport { convertDragDist } from \"../utils\";\n\nexport function setCustomDrag(\n    e: any,\n    state: MoveableManagerState<any>,\n    delta: number[],\n    isPinch: boolean,\n    isConvert: boolean,\n    ableName = \"draggable\",\n) {\n    const result = state.gestos[ableName]?.move(delta, e.inputEvent) ?? {};\n    const datas = result.originalDatas || result.datas;\n    const ableDatas = datas[ableName] || (datas[ableName] = {});\n\n    return {\n        ...(isConvert ? convertDragDist(state, result) : result),\n        isPinch: !!isPinch,\n        parentEvent: true,\n        datas: ableDatas,\n        originalDatas: e.originalDatas,\n    };\n}\n\nexport default class CustomGesto {\n    private prevX = 0;\n    private prevY = 0;\n    private startX = 0;\n    private startY = 0;\n    private isDrag = false;\n    private isFlag = false;\n    private datas: any = {\n        draggable: {},\n    };\n    constructor(private ableName = \"draggable\") {\n        this.datas = {\n            [ableName]: {},\n        };\n    }\n\n    public dragStart(client: number[], e: any) {\n        this.isDrag = false;\n        this.isFlag = false;\n        const originalDatas = e.originalDatas;\n\n        this.datas = originalDatas;\n        if (!originalDatas[this.ableName]) {\n            originalDatas[this.ableName] = {};\n        }\n        return {\n            ...this.move(client, e.inputEvent),\n            type: \"dragstart\",\n        };\n    }\n    public drag(client: number[], inputEvent: any) {\n        return this.move([\n            client[0] - this.prevX,\n            client[1] - this.prevY,\n        ], inputEvent);\n    }\n    public move(delta: number[], inputEvent: any): OnCustomDrag {\n        let clientX!: number;\n        let clientY!: number;\n        let isFirstDrag = false;\n\n        if (!this.isFlag) {\n            this.prevX = delta[0];\n            this.prevY = delta[1];\n            this.startX = delta[0];\n            this.startY = delta[1];\n\n            clientX = delta[0];\n            clientY = delta[1];\n\n            this.isFlag = true;\n        } else {\n            const isPrevDrag = this.isDrag;\n\n            clientX = this.prevX + delta[0];\n            clientY = this.prevY + delta[1];\n\n            if (delta[0] || delta[1]) {\n                this.isDrag = true;\n            }\n\n            if (!isPrevDrag && this.isDrag) {\n                isFirstDrag = true;\n            }\n        }\n\n        this.prevX = clientX;\n        this.prevY = clientY;\n\n        return {\n            type: \"drag\",\n            clientX,\n            clientY,\n            inputEvent,\n            isFirstDrag,\n            isDrag: this.isDrag,\n            distX: clientX - this.startX,\n            distY: clientY - this.startY,\n            deltaX: delta[0],\n            deltaY: delta[1],\n            datas: this.datas[this.ableName],\n            originalDatas: this.datas,\n            parentEvent: true,\n            parentGesto: this,\n        };\n    }\n}\n","\nimport {\n    invert, calculate, minus, plus,\n    convertPositionMatrix,\n    createScaleMatrix, multiply, fromTranslation, convertDimension,\n} from \"@scena/matrix\";\nimport {\n    calculatePoses, getAbsoluteMatrix, getAbsolutePosesByState,\n    calculatePosition, calculateInversePosition, calculateMoveablePosition, convertTransformInfo, fillCSSObject,\n} from \"../utils\";\nimport { splitUnit, isArray, splitSpace, findIndex, dot, find } from \"@daybrush/utils\";\nimport {\n    MoveableManagerState, ResizableProps, MoveableManagerInterface,\n    OnTransformEvent, OnTransformStartEvent, DraggableProps, OnDrag,\n} from \"../types\";\nimport { setCustomDrag } from \"./CustomGesto\";\nimport { parse, parseMat } from \"css-to-mat\";\nimport { Draggable } from \"../index.esm\";\n\nexport function calculatePointerDist(moveable: MoveableManagerInterface, e: any) {\n    const { clientX, clientY, datas } = e;\n    const {\n        moveableClientRect,\n        rootMatrix,\n        is3d,\n        pos1,\n    } = moveable.state;\n    const { left, top } = moveableClientRect;\n    const n = is3d ? 4 : 3;\n    const [posX, posY] = minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1);\n    const [distX, distY] = getDragDist({ datas, distX: posX, distY: posY });\n\n    return [distX, distY];\n}\n\nexport function setDragStart(moveable: MoveableManagerInterface<any>, { datas }: any) {\n    const {\n        allMatrix,\n        beforeMatrix,\n        is3d,\n        left,\n        top,\n        origin,\n        offsetMatrix,\n        targetMatrix,\n        transformOrigin,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n\n    datas.is3d = is3d;\n    datas.matrix = allMatrix;\n    datas.targetMatrix = targetMatrix;\n    datas.beforeMatrix = beforeMatrix;\n    datas.offsetMatrix = offsetMatrix;\n    datas.transformOrigin = transformOrigin;\n    datas.inverseMatrix = invert(allMatrix, n);\n    datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n    datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n    datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n    datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nexport function getTransformDirection(e: any) {\n    return calculateMoveablePosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\n}\nexport function resolveTransformEvent(event: any, functionName: string) {\n    const {\n        datas,\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = event;\n\n    const index = datas.transformIndex;\n\n\n    const nextTransforms = originalDatas.nextTransforms as string[];\n    const length = nextTransforms.length;\n    const nextTransformAppendedIndexes: any[] = originalDatas.nextTransformAppendedIndexes;\n    let nextIndex = 0;\n\n    if (index === -1) {\n        // translate => rotate => scale\n        if (functionName === \"translate\") {\n            nextIndex = 0;\n        } else if (functionName === \"rotate\") {\n            nextIndex = findIndex(nextTransforms, text => text.match(/scale\\(/g,));\n        }\n        if (nextIndex === -1) {\n            nextIndex = nextTransforms.length;\n        }\n        datas.transformIndex = nextIndex;\n    } else if (find(nextTransformAppendedIndexes, info => info.index === index && info.functionName === functionName)) {\n        nextIndex = index;\n    } else {\n        nextIndex = index + nextTransformAppendedIndexes.filter(info => info.index < index).length;\n    }\n\n    const result = convertTransformInfo(nextTransforms, nextIndex);\n    const targetFunction = result.targetFunction;\n    const matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n\n    datas.beforeFunctionTexts = result.beforeFunctionTexts;\n    datas.afterFunctionTexts = result.afterFunctionTexts;\n    datas.beforeTransform = result.beforeFunctionMatrix;\n    datas.beforeTransform2 = result.beforeFunctionMatrix2;\n    datas.targetTansform = result.targetFunctionMatrix;\n    datas.afterTransform = result.afterFunctionMatrix;\n    datas.afterTransform2 = result.afterFunctionMatrix2;\n    datas.targetAllTransform = result.allFunctionMatrix;\n\n    if (targetFunction.functionName === matFunctionName) {\n        datas.afterFunctionTexts.splice(0, 1);\n        datas.isAppendTransform = false;\n    } else if (length > nextIndex) {\n        datas.isAppendTransform = true;\n\n        originalDatas.nextTransformAppendedIndexes = [...nextTransformAppendedIndexes, {\n            functionName,\n            index: nextIndex,\n            isAppend: true,\n        }];\n    }\n}\n\nexport function convertTransformFormat(datas: any, value: any, dist: any) {\n    return `${datas.beforeFunctionTexts.join(\" \")} ${datas.isAppendTransform ? dist : value} ${datas.afterFunctionTexts.join(\" \")}`;\n}\nexport function getTransformDist({ datas, distX, distY }: any) {\n    const [bx, by] = getBeforeDragDist({ datas, distX, distY });\n    // B * [tx, ty] * A = [bx, by] * targetMatrix;\n    // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n\n    const res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n\n    return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nexport function getTransfromMatrix(datas: any, targetMatrix: number[], isAfter?: boolean) {\n    const {\n        beforeTransform,\n        afterTransform,\n        beforeTransform2,\n        afterTransform2,\n        targetAllTransform,\n    } = datas;\n\n    // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n    // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n    // nextTargetMatrix = (targetMatrix * targetAllTransform)\n    const nextTargetMatrix\n        = isAfter\n            ? multiply(targetAllTransform, targetMatrix, 4)\n            : multiply(targetMatrix, targetAllTransform, 4);\n\n    // res1 = B-1 * nextTargetMatrix\n    const res1 = multiply(invert(isAfter ? beforeTransform2 : beforeTransform, 4), nextTargetMatrix, 4);\n\n    // res3 = res2 * A-1\n    const afterTargetMatrix = multiply(res1, invert(isAfter ? afterTransform2 : afterTransform, 4), 4);\n\n    return afterTargetMatrix;\n}\nexport function getBeforeDragDist({ datas, distX, distY }: any) {\n    // TT = BT\n    const {\n        inverseBeforeMatrix,\n        is3d,\n        startDragBeforeDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n    // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n    return minus(\n        calculate(\n            inverseBeforeMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        startDragBeforeDist,\n    );\n}\nexport function getDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        inverseBeforeMatrix,\n        inverseMatrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? inverseBeforeMatrix : inverseMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        isBefore ? startDragBeforeDist : startDragDist,\n    );\n}\nexport function getInverseDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        beforeMatrix,\n        matrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? beforeMatrix : matrix,\n            plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]),\n            n,\n        ),\n        absoluteOrigin,\n    );\n}\n\nexport function calculateTransformOrigin(\n    transformOrigin: string[],\n    width: number,\n    height: number,\n    prevWidth: number = width,\n    prevHeight: number = height,\n    prevOrigin: number[] = [0, 0],\n) {\n\n    if (!transformOrigin) {\n        return prevOrigin;\n    }\n    return transformOrigin.map((pos, i) => {\n        const { value, unit } = splitUnit(pos);\n\n        const prevSize = (i ? prevHeight : prevWidth);\n        const size = (i ? height : width);\n        if (pos === \"%\" || isNaN(value)) {\n            // no value but %\n\n            const measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n\n            return size * measureRatio;\n        } else if (unit !== \"%\") {\n            return value;\n        }\n        return size * value / 100;\n    });\n}\nexport function getPosIndexesByDirection(direction: number[]) {\n    const indexes: number[] = [];\n\n    if (direction[1] >= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(3);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(2);\n        }\n    }\n    if (direction[1] <= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(1);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(0);\n        }\n    }\n    return indexes;\n}\nexport function getPosesByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    return getPosIndexesByDirection(direction).map(index => poses[index]);\n}\nexport function getPosByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    const xRatio = (direction[0] + 1) / 2;\n    const yRatio = (direction[1] + 1) / 2;\n\n    const top = [\n        dot(poses[0][0], poses[1][0], xRatio, 1 - xRatio),\n        dot(poses[0][1], poses[1][1], xRatio, 1 - xRatio),\n    ];\n    const bottom = [\n        dot(poses[2][0], poses[3][0], xRatio, 1 - xRatio),\n        dot(poses[2][1], poses[3][1], xRatio, 1 - xRatio),\n    ];\n    return [\n        dot(top[0], bottom[0], yRatio, 1 - yRatio),\n        dot(top[1], bottom[1], yRatio, 1 - yRatio),\n    ];\n}\n\nfunction getDist(\n    startPos: number[],\n    matrix: number[],\n    width: number,\n    height: number,\n    n: number,\n    fixedDirection: number[],\n) {\n    const poses = calculatePoses(matrix, width, height, n);\n    const fixedPos = getPosByDirection(poses, fixedDirection);\n    const distX = startPos[0] - fixedPos[0];\n    const distY = startPos[1] - fixedPos[1];\n\n    return [distX, distY];\n}\nexport function getNextMatrix(\n    offsetMatrix: number[],\n    targetMatrix: number[],\n    origin: number[],\n    n: number,\n) {\n    return multiply(\n        offsetMatrix,\n        getAbsoluteMatrix(targetMatrix, n, origin),\n        n,\n    );\n}\nexport function getNextTransformMatrix(\n    state: MoveableManagerState<any>,\n    datas: any,\n    transform: string,\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n    } = state;\n    const {\n        beforeTransform,\n        afterTransform,\n    } = datas;\n    const n = is3d ? 4 : 3;\n    const targetTransform = parseMat([transform]);\n\n    return getNextMatrix(\n        offsetMatrix,\n        convertDimension(multiply(multiply(beforeTransform, targetTransform as any, 4), afterTransform, 4), 4, n),\n        transformOrigin,\n        n,\n    );\n}\nexport function scaleMatrix(\n    state: MoveableManagerState<any>,\n    scale: number[],\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n        targetMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    return getNextMatrix(\n        offsetMatrix,\n        multiply(targetMatrix, createScaleMatrix(scale, n), n),\n        transformOrigin,\n        n,\n    );\n}\n\nexport function fillTransformStartEvent(e: any): OnTransformStartEvent {\n    const originalDatas = getBeforeRenderableDatas(e);\n    return {\n        setTransform: (transform: string | string[], index = -1) => {\n            originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            setTransformIndex(e, index);\n        },\n        setTransformIndex: (index: number) => {\n            setTransformIndex(e, index);\n        },\n    };\n}\nexport function setDefaultTransformIndex(e: any, property: string) {\n    const originalDatas = getBeforeRenderableDatas(e);\n    const startTransforms = originalDatas.startTransforms;\n\n    setTransformIndex(e, findIndex<string>(startTransforms, func => func.indexOf(`${property}(`) === 0));\n}\nexport function setTransformIndex(e: any, index: number) {\n    const originalDatas = getBeforeRenderableDatas(e);\n    const datas = e.datas;\n\n    datas.transformIndex = index;\n    if (index === -1) {\n        return;\n    }\n    const transform = originalDatas.startTransforms[index];\n\n    if (!transform) {\n        return;\n    }\n    const info = parse([transform]);\n\n    datas.startValue = info[0].functionValue;\n}\nexport function fillOriginalTransform(\n    e: any,\n    transform: string,\n) {\n    const originalDatas = getBeforeRenderableDatas(e);\n\n    originalDatas.nextTransforms = splitSpace(transform);\n    // originalDatas.nextTargetMatrix = parseMat(transform);\n}\nexport function getBeforeRenderableDatas(e: any) {\n    return e.originalDatas.beforeRenderable;\n}\nexport function getNextTransforms(e: any) {\n    const {\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = e;\n\n    return originalDatas.nextTransforms;\n}\nexport function getNextTransformText(e: any) {\n    return getNextTransforms(e).join(\" \");\n}\n\nexport function getNextStyle(e: any) {\n    return getBeforeRenderableDatas(e).nextStyle;\n}\n\nexport function fillTransformEvent(\n    moveable: MoveableManagerInterface<DraggableProps>,\n    nextTransform: string,\n    delta: number[],\n    isPinch: boolean,\n    e: any,\n): OnTransformEvent {\n    fillOriginalTransform(e, nextTransform);\n\n    const drag = Draggable.drag!(\n        moveable,\n        setCustomDrag(e, moveable.state, delta, isPinch, false),\n    ) as OnDrag;\n    const afterTransform = drag ? drag.transform : nextTransform;\n    return {\n        transform: nextTransform,\n        drag: drag as OnDrag,\n        ...fillCSSObject({\n            transform: afterTransform,\n        }, e),\n        afterTransform,\n    };\n}\nexport function getTranslateDist(\n    moveable: MoveableManagerInterface<any>,\n    transform: string,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const state = moveable.state;\n    const {\n        left,\n        top,\n    } = state;\n\n    const groupable = moveable.props.groupable;\n    const nextMatrix = getNextTransformMatrix(moveable.state, datas, transform);\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextFixedPosition = getDirectionOffset(moveable, fixedDirection, nextMatrix);\n    const dist = minus(fixedPosition, nextFixedPosition);\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getScaleDist(\n    moveable: MoveableManagerInterface<any>,\n    scaleDist: number[],\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const dist = getTranslateDist(\n        moveable,\n        `scale(${scaleDist.join(\", \")})`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n\n    return dist;\n}\nexport function getOriginDirection(moveable: MoveableManagerInterface<any>) {\n    const {\n        width,\n        height,\n        transformOrigin,\n    } = moveable.state;\n    return [\n        -1 + transformOrigin[0] / (width / 2),\n        -1 + transformOrigin[1] / (height / 2),\n    ];\n}\nexport function getDirectionByPos(\n    pos: number[],\n    width: number,\n    height: number,\n) {\n    return [\n        -1 + pos[0] / (width / 2),\n        -1 + pos[1] / (height / 2),\n    ];\n}\nexport function getDirectionOffset(\n    moveable: MoveableManagerInterface, direction: number[],\n    nextMatrix: number[] = moveable.state.allMatrix,\n) {\n    const {\n        width,\n        height,\n        is3d,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n    const nextFixedOffset = [\n        width / 2 * (1 + direction[0]),\n        height / 2 * (1 + direction[1]),\n    ];\n    return calculatePosition(nextMatrix, nextFixedOffset, n);\n}\nexport function getRotateDist(\n    moveable: MoveableManagerInterface<any>,\n    rotateDist: number,\n    datas: any,\n) {\n    const fixedDirection = datas.fixedDirection;\n    const fixedPosition = datas.fixedPosition;\n\n    return getTranslateDist(\n        moveable,\n        `rotate(${rotateDist}deg)`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n}\nexport function getResizeDist(\n    moveable: MoveableManagerInterface<any>,\n    width: number,\n    height: number,\n    fixedPosition: number[],\n    transformOrigin: string[],\n    datas: any,\n) {\n    const {\n        groupable,\n    } = moveable.props;\n    const state = moveable.state;\n    const {\n        transformOrigin: prevOrigin,\n        offsetMatrix,\n        is3d,\n        width: prevWidth,\n        height: prevHeight,\n        left,\n        top,\n    } = state;\n    const fixedDirection = datas.fixedDirection;\n    const targetMatrix = datas.nextTargetMatrix || state.targetMatrix;\n    const n = is3d ? 4 : 3;\n    const nextOrigin = calculateTransformOrigin(\n        transformOrigin!,\n        width,\n        height,\n        prevWidth,\n        prevHeight,\n        prevOrigin,\n    );\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getAbsolutePosition(\n    moveable: MoveableManagerInterface<ResizableProps>,\n    direction: number[],\n) {\n    return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\n}\n","import { MoveableManagerInterface } from \"../types\";\n\nexport function getGestoData(moveable: MoveableManagerInterface, ableName: string) {\n    const targetGesto = moveable.targetGesto;\n    const controlGesto = moveable.controlGesto;\n    let data!: Record<string, any>;\n\n    if (targetGesto?.isFlag()) {\n        data = targetGesto.getEventData()[ableName];\n    }\n\n    if (!data && controlGesto?.isFlag()) {\n        data = controlGesto.getEventData()[ableName];\n    }\n\n    return data || {};\n}\n","import { PREFIX, IS_WEBKIT605, TINY_NUM } from \"./consts\";\nimport { prefixNames, InvertObject } from \"framework-utils\";\nimport {\n    isUndefined, isObject, splitUnit,\n    IObject, hasClass, isArray, isString, getRad,\n    getShapeDirection, isFunction, convertUnitSize, between, getKeys, decamelize,\n} from \"@daybrush/utils\";\nimport {\n    multiply, invert,\n    convertDimension, createIdentityMatrix,\n    createOriginMatrix, convertPositionMatrix, calculate,\n    multiplies,\n    minus,\n    createScaleMatrix,\n    plus,\n    convertMatrixtoCSS,\n    rotate,\n} from \"@scena/matrix\";\nimport {\n    MoveableManagerState, Able, MoveableClientRect,\n    MoveableProps, ArrayFormat, MoveableRefType,\n    MatrixInfo, ExcludeEndParams, ExcludeParams,\n    ElementSizes, MoveablePosition, TransformObject,\n    MoveableRefTargetsResultType, MoveableRefTargetType, MoveableManagerInterface,\n} from \"./types\";\nimport { parse, toMat, calculateMatrixDist, parseMat } from \"css-to-mat\";\nimport { getBeforeRenderableDatas, getDragDist } from \"./gesto/GestoUtils\";\nimport { getGestoData } from \"./gesto/GestoData\";\n\nexport function round(num: number) {\n    return Math.round(num);\n}\nexport function multiply2(pos1: number[], pos2: number[]) {\n    return [\n        pos1[0] * pos2[0],\n        pos1[1] * pos2[1],\n    ];\n}\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\n\nexport function defaultSync(fn: () => void) {\n    fn();\n}\n\nexport function createIdentityMatrix3() {\n    return createIdentityMatrix(3);\n}\n\nexport function getTransformMatrix(transform: string | number[]) {\n    if (!transform || transform === \"none\") {\n        return [1, 0, 0, 1, 0, 0];\n\n    }\n    if (isObject(transform)) {\n        return transform;\n    }\n    return parseMat(transform);\n}\nexport function getAbsoluteMatrix(matrix: number[], n: number, origin: number[]) {\n    return multiplies(\n        n,\n        createOriginMatrix(origin, n),\n        matrix,\n        createOriginMatrix(origin.map(a => -a), n),\n    );\n}\nexport function measureSVGSize(el: SVGElement, unit: string, isHorizontal: boolean) {\n    if (unit === \"%\") {\n        const viewBox = getSVGViewBox(el.ownerSVGElement!);\n\n        return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n    }\n    return 1;\n}\nexport function getBeforeTransformOrigin(el: SVGElement) {\n    const relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\n\n    return relativeOrigin.map((o, i) => {\n        const { value, unit } = splitUnit(o);\n\n        return value * measureSVGSize(el, unit, i === 0);\n    });\n}\nexport function getTransformOrigin(style: CSSStyleDeclaration) {\n    const transformOrigin = style.transformOrigin;\n\n    return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nexport function getElementTransform(\n    target: HTMLElement | SVGElement,\n    computedStyle = getComputedStyle(target),\n) {\n    const computedTransform = computedStyle.transform;\n\n    if (computedTransform && computedTransform !== \"none\") {\n        return computedStyle.transform;\n    }\n    if (\"transform\" in target) {\n        const list = (target as any).transform as SVGAnimatedTransformList;\n        const baseVal = list.baseVal;\n\n        if (!baseVal) {\n            return \"\";\n        }\n        const length = baseVal.length;\n\n        if (!length) {\n            return \"\";\n        }\n\n        const matrixes: string[] = [];\n\n        for (let i = 0; i < length; ++i) {\n            const matrix = baseVal[i].matrix;\n\n            matrixes.push(`matrix(${([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"] as const).map(chr => matrix[chr]).join(\", \")})`);\n        }\n        return matrixes.join(\" \");\n\n    }\n    return \"\";\n}\n\nexport function getOffsetInfo(\n    el: SVGElement | HTMLElement | null | undefined,\n    lastParent: SVGElement | HTMLElement | null | undefined,\n    isParent?: boolean,\n    checkZoom?: boolean,\n    targetStyle?: CSSStyleDeclaration,\n) {\n    const documentElement = document.documentElement || document.body;\n    let hasSlot = false;\n    let target: HTMLElement | SVGElement | null | undefined;\n    let parentSlotElement: HTMLElement | null | undefined;\n\n    if (!el || isParent) {\n        target = el;\n    } else {\n        const assignedSlotParentElement = el?.assignedSlot?.parentElement;\n        const parentElement = el.parentElement;\n\n        if (assignedSlotParentElement) {\n            hasSlot = true;\n            parentSlotElement = parentElement;\n            target = assignedSlotParentElement;\n        } else {\n            target = parentElement;\n        }\n    }\n\n    let isCustomElement = false;\n    let isEnd = el === lastParent || target === lastParent;\n    let position = \"relative\";\n    let offsetZoom = 1;\n\n\n    const targetZoom = parseFloat((targetStyle as any)?.zoom) || 1;\n    const targetPosition = targetStyle?.position;\n\n\n\n    while (target && target !== documentElement) {\n        if (lastParent === target) {\n            isEnd = true;\n        }\n        const style = getComputedStyle(target);\n        const tagName = target.tagName.toLowerCase();\n        const transform = getElementTransform(target as SVGElement, style);\n        const willChange = style.willChange;\n        const zoom = parseFloat((style as any).zoom) || 1;\n        position = style.position!;\n\n        if (checkZoom && zoom !== 1) {\n            offsetZoom = zoom;\n            break;\n        }\n        if (\n            // offsetParent is the parentElement if the target's zoom is not 1 and not absolute.\n            !isParent && checkZoom && targetZoom !== 1 && targetPosition && targetPosition !== \"absolute\"\n            || tagName === \"svg\"\n            || position !== \"static\"\n            || (transform && transform !== \"none\")\n            || willChange === \"transform\"\n        ) {\n            break;\n        }\n        const slotParentNode = el?.assignedSlot?.parentNode;\n        const targetParentNode = target.parentNode;\n\n        if (slotParentNode) {\n            hasSlot = true;\n            parentSlotElement = targetParentNode as HTMLElement;\n        }\n        const parentNode = slotParentNode || targetParentNode;\n\n\n        if (parentNode && parentNode.nodeType === 11) {\n            // Shadow Root\n            target = (parentNode as ShadowRoot).host as HTMLElement;\n            isCustomElement = true;\n\n            break;\n        }\n        target = parentNode as HTMLElement | SVGElement;\n        position = \"relative\";\n    }\n    return {\n        offsetZoom,\n        hasSlot,\n        parentSlotElement,\n        isCustomElement,\n        isStatic: position === \"static\",\n        isEnd: isEnd || !target || target === documentElement,\n        offsetParent: target as HTMLElement || documentElement,\n    };\n\n}\nexport function getOffsetPosInfo(\n    el: HTMLElement | SVGElement,\n    target: HTMLElement | SVGElement,\n    style: CSSStyleDeclaration,\n) {\n    const tagName = el.tagName.toLowerCase();\n    let offsetLeft = (el as HTMLElement).offsetLeft;\n    let offsetTop = (el as HTMLElement).offsetTop;\n\n    // svg\n    const isSVG = isUndefined(offsetLeft);\n    let hasOffset = !isSVG;\n    let origin: number[];\n    let targetOrigin: number[];\n    // inner svg element\n    if (!hasOffset && tagName !== \"svg\") {\n        origin = IS_WEBKIT605\n            ? getBeforeTransformOrigin(el as SVGElement)\n            : getTransformOrigin(style).map(pos => parseFloat(pos));\n\n        targetOrigin = origin.slice();\n        hasOffset = true;\n\n        [\n            offsetLeft, offsetTop, origin[0], origin[1],\n        ] = getSVGGraphicsOffset(\n            el as SVGGraphicsElement,\n            origin,\n            el === target && target.tagName.toLowerCase() === \"g\",\n        );\n    } else {\n        origin = getTransformOrigin(style).map(pos => parseFloat(pos));\n        targetOrigin = origin.slice();\n    }\n    return {\n        tagName,\n        isSVG,\n        hasOffset,\n        offset: [offsetLeft || 0, offsetTop || 0],\n        origin,\n        targetOrigin,\n    };\n}\nexport function getBodyOffset(\n    el: HTMLElement | SVGElement,\n    isSVG: boolean,\n    style: CSSStyleDeclaration = getComputedStyle(el),\n) {\n    const bodyStyle = getComputedStyle(document.body);\n    const bodyPosition = bodyStyle.position;\n    if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\n        return [0, 0];\n    }\n\n    let marginLeft = parseInt(bodyStyle.marginLeft, 10);\n    let marginTop = parseInt(bodyStyle.marginTop, 10);\n\n    if (style.position === \"absolute\") {\n        if (style.top !== \"auto\" || style.bottom !== \"auto\") {\n            marginTop = 0;\n        }\n        if (style.left !== \"auto\" || style.right !== \"auto\") {\n            marginLeft = 0;\n        }\n    }\n\n    return [marginLeft, marginTop];\n}\nexport function convert3DMatrixes(matrixes: MatrixInfo[]) {\n    matrixes.forEach(info => {\n        const matrix = info.matrix;\n\n        if (matrix) {\n            info.matrix = convertDimension(matrix, 3, 4);\n        }\n    });\n}\n\nexport function getBodyScrollPos() {\n    return [\n        document.documentElement.scrollLeft || document.body.scrollLeft,\n        document.documentElement.scrollTop || document.body.scrollTop,\n    ];\n}\n\nexport function getPositionFixedInfo(el: HTMLElement | SVGElement) {\n    let fixedContainer = el.parentElement;\n    let hasTransform = false;\n\n    while (fixedContainer) {\n        const transform = getComputedStyle(fixedContainer).transform;\n\n\n        if (transform && transform !== \"none\") {\n            hasTransform = true;\n            break;\n        }\n        if (fixedContainer === document.body) {\n            break;\n        }\n        fixedContainer = fixedContainer.parentElement;\n    }\n\n    return {\n        fixedContainer: fixedContainer || document.body,\n        hasTransform,\n    };\n}\n\nexport function makeMatrixCSS(matrix: number[], is3d: boolean = matrix.length > 9) {\n    return `${is3d ? \"matrix3d\" : \"matrix\"}(${convertMatrixtoCSS(matrix, !is3d).join(\",\")})`;\n}\nexport function getSVGViewBox(el: SVGSVGElement) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n\n    if (!el) {\n        return { x: 0, y: 0, width: 0, height: 0, clientWidth, clientHeight };\n    }\n    const viewBox = el.viewBox;\n    const baseVal = (viewBox && viewBox.baseVal) || { x: 0, y: 0, width: 0, height: 0 };\n\n    return {\n        x: baseVal.x,\n        y: baseVal.y,\n        width: baseVal.width || clientWidth,\n        height: baseVal.height || clientHeight,\n        clientWidth,\n        clientHeight,\n    };\n}\nexport function getSVGMatrix(\n    el: SVGSVGElement,\n    n: number,\n) {\n    const {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n        clientWidth,\n        clientHeight,\n    } = getSVGViewBox(el);\n    const scaleX = clientWidth / viewBoxWidth;\n    const scaleY = clientHeight / viewBoxHeight;\n\n    const preserveAspectRatio = el.preserveAspectRatio.baseVal;\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n    const align = preserveAspectRatio.align;\n    // 1 : meet 2: slice\n    const meetOrSlice = preserveAspectRatio.meetOrSlice;\n    const svgOrigin = [0, 0];\n    const scale = [scaleX, scaleY];\n    const translate = [0, 0];\n\n    if (align !== 1) {\n        const xAlign = (align - 2) % 3;\n        const yAlign = Math.floor((align - 2) / 3);\n\n        svgOrigin[0] = viewBoxWidth * xAlign / 2;\n        svgOrigin[1] = viewBoxHeight * yAlign / 2;\n\n        const scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n\n        scale[0] = scaleDimension;\n        scale[1] = scaleDimension;\n\n        translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n        translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n    }\n    const scaleMatrix = createScaleMatrix(scale, n);\n    [\n        scaleMatrix[n * (n - 1)],\n        scaleMatrix[n * (n - 1) + 1],\n    ] = translate;\n\n    return getAbsoluteMatrix(\n        scaleMatrix,\n        n,\n        svgOrigin,\n    );\n}\nexport function getSVGGraphicsOffset(\n    el: SVGGraphicsElement,\n    origin: number[],\n    isGTarget?: boolean,\n) {\n    if (!el.getBBox || !isGTarget && el.tagName.toLowerCase() === \"g\") {\n        return [0, 0, 0, 0];\n    }\n    const bbox = el.getBBox();\n    const viewBox = getSVGViewBox(el.ownerSVGElement!);\n    const left = bbox.x - viewBox.x;\n    const top = bbox.y - viewBox.y;\n\n    return [\n        left,\n        top,\n        origin[0] - left,\n        origin[1] - top,\n    ];\n}\nexport function calculatePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(matrix, convertPositionMatrix(pos, n), n);\n}\nexport function calculatePoses(matrix: number[], width: number, height: number, n: number) {\n    return [[0, 0], [width, 0], [0, height], [width, height]].map(pos => calculatePosition(matrix, pos, n));\n}\nexport function getRect(poses: number[][]) {\n    const posesX = poses.map(pos => pos[0]);\n    const posesY = poses.map(pos => pos[1]);\n    const left = Math.min(...posesX);\n    const top = Math.min(...posesY);\n    const right = Math.max(...posesX);\n    const bottom = Math.max(...posesY);\n    const rectWidth = right - left;\n    const rectHeight = bottom - top;\n\n    return {\n        left, top,\n        right, bottom,\n        width: rectWidth,\n        height: rectHeight,\n    };\n}\nexport function calculateRect(matrix: number[], width: number, height: number, n: number) {\n    const poses = calculatePoses(matrix, width, height, n);\n\n    return getRect(poses);\n}\nexport function getSVGOffset(\n    offsetInfo: MatrixInfo,\n    targetInfo: MatrixInfo,\n    container: HTMLElement | SVGElement,\n    n: number,\n    beforeMatrix: number[],\n) {\n    const target = offsetInfo.target;\n    const origin = offsetInfo.origin!;\n    const targetMatrix = targetInfo.matrix!;\n    const {\n        offsetWidth: width,\n        offsetHeight: height,\n    } = getSize(target);\n    const containerClientRect = container.getBoundingClientRect();\n    let margin = [0, 0];\n\n    if (container === document.body) {\n        margin = getBodyOffset(target, true);\n    }\n\n    const rect = target.getBoundingClientRect();\n    const rectLeft\n        = rect.left - containerClientRect.left + container.scrollLeft\n        - (container.clientLeft || 0) + margin[0];\n    const rectTop\n        = rect.top - containerClientRect.top + container.scrollTop\n        - (container.clientTop || 0) + margin[1];\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n\n    const mat = multiplies(\n        n,\n        beforeMatrix,\n        targetMatrix,\n    );\n    const {\n        left: prevLeft,\n        top: prevTop,\n        width: prevWidth,\n        height: prevHeight,\n    } = calculateRect(mat, width, height, n);\n    const posOrigin = calculatePosition(mat, origin, n);\n    const prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n    const rectOrigin = [\n        rectLeft + prevOrigin[0] * rectWidth / prevWidth,\n        rectTop + prevOrigin[1] * rectHeight / prevHeight,\n    ];\n    const offset = [0, 0];\n    let count = 0;\n\n    while (++count < 10) {\n        const inverseBeforeMatrix = invert(beforeMatrix, n);\n        [offset[0], offset[1]] = minus(\n            calculatePosition(inverseBeforeMatrix, rectOrigin, n),\n            calculatePosition(inverseBeforeMatrix, posOrigin, n),\n        );\n        const mat2 = multiplies(\n            n,\n            beforeMatrix,\n            createOriginMatrix(offset, n),\n            targetMatrix,\n        );\n        const {\n            left: nextLeft,\n            top: nextTop,\n        } = calculateRect(mat2, width, height, n);\n        const distLeft = nextLeft - rectLeft;\n        const distTop = nextTop - rectTop;\n\n        if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n            break;\n        }\n        rectOrigin[0] -= distLeft;\n        rectOrigin[1] -= distTop;\n    }\n    return offset.map(p => Math.round(p));\n}\n\nexport function calculateMoveableClientPositions(\n    rootMatrix: number[],\n    poses: number[][],\n    rootClientRect: MoveableClientRect,\n) {\n    const is3d = rootMatrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const rootPoses = poses.map(pos => calculatePosition(rootMatrix, pos, n));\n    const { left, top } = rootClientRect;\n\n    return rootPoses.map(pos => {\n        return [pos[0] + left, pos[1] + top];\n    });\n\n}\nexport function calculateMoveablePosition(\n    matrix: number[],\n    origin: number[],\n    width: number,\n    height: number,\n): MoveablePosition {\n    const is3d = matrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const poses = calculatePoses(matrix, width, height, n);\n    let [\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n    ] = poses;\n    let [originX, originY] = calculatePosition(matrix, origin, n);\n\n    const left = Math.min(x1, x2, x3, x4);\n    const top = Math.min(y1, y2, y3, y4);\n    const right = Math.max(x1, x2, x3, x4);\n    const bottom = Math.max(y1, y2, y3, y4);\n\n    x1 = (x1 - left) || 0;\n    x2 = (x2 - left) || 0;\n    x3 = (x3 - left) || 0;\n    x4 = (x4 - left) || 0;\n\n    y1 = (y1 - top) || 0;\n    y2 = (y2 - top) || 0;\n    y3 = (y3 - top) || 0;\n    y4 = (y4 - top) || 0;\n\n    originX = (originX - left) || 0;\n    originY = (originY - top) || 0;\n\n    const direction = getShapeDirection(calculatePoses(matrix, 100, 100, n));\n    return {\n        left,\n        top,\n        right,\n        bottom,\n        origin: [originX, originY],\n        pos1: [x1, y1],\n        pos2: [x2, y2],\n        pos3: [x3, y3],\n        pos4: [x4, y4],\n        direction,\n    };\n}\nexport function getDistSize(vec: number[]) {\n    return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nexport function getDiagonalSize(pos1: number[], pos2: number[]) {\n    return getDistSize([\n        pos2[0] - pos1[0],\n        pos2[1] - pos1[1],\n    ]);\n}\nexport function getLineStyle(pos1: number[], pos2: number[], zoom = 1, rad: number = getRad(pos1, pos2)) {\n    const width = getDiagonalSize(pos1, pos2);\n\n    return {\n        transform: `translateY(-50%) translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        width: `${width}px`,\n    };\n}\nexport function getControlTransform(rotation: number, zoom: number, ...poses: number[][]) {\n    const length = poses.length;\n\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\n    return {\n        transform: `translateZ(0px) translate(${x}px, ${y}px) rotate(${rotation}rad) scale(${zoom})`,\n    };\n}\nexport function getCSSSize(target: SVGElement | HTMLElement) {\n    const style = getComputedStyle(target);\n\n    return [\n        parseFloat(style.width!),\n        parseFloat(style.height!),\n    ];\n}\n\nexport function getProps<Props>(props: Props, ableName: keyof Props): Props {\n    const self = props[ableName];\n\n    if (isObject(self)) {\n        return {\n            ...props,\n            ...self,\n        };\n    }\n    return props;\n}\n\nexport function getSize(\n    target?: SVGElement | HTMLElement | null,\n    style: CSSStyleDeclaration | null = target ? getComputedStyle(target) : null,\n): ElementSizes {\n    const hasOffset = target && !isUndefined((target as any).offsetWidth);\n\n    let offsetWidth = 0;\n    let offsetHeight = 0;\n    let clientWidth = 0;\n    let clientHeight = 0;\n    let cssWidth = 0;\n    let cssHeight = 0;\n    let contentWidth = 0;\n    let contentHeight = 0;\n\n    let minWidth = 0;\n    let minHeight = 0;\n    let minOffsetWidth = 0;\n    let minOffsetHeight = 0;\n\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n    let maxOffsetWidth = Infinity;\n    let maxOffsetHeight = Infinity;\n    let svg = false;\n\n    if (target) {\n        if (!hasOffset && target!.tagName.toLowerCase() !== \"svg\") {\n            const bbox = (target as SVGGraphicsElement).getBBox();\n\n            svg = true;\n            offsetWidth = bbox.width;\n            offsetHeight = bbox.height;\n            cssWidth = offsetWidth;\n            cssHeight = offsetHeight;\n            contentWidth = offsetWidth;\n            contentHeight = offsetHeight;\n            clientWidth = offsetWidth;\n            clientHeight = offsetHeight;\n        } else {\n            const targetStyle = target.style;\n            const boxSizing = style!.boxSizing === \"border-box\";\n            const borderLeft = parseFloat(style!.borderLeftWidth!) || 0;\n            const borderRight = parseFloat(style!.borderRightWidth!) || 0;\n            const borderTop = parseFloat(style!.borderTopWidth!) || 0;\n            const borderBottom = parseFloat(style!.borderBottomWidth!) || 0;\n            const paddingLeft = parseFloat(style!.paddingLeft!) || 0;\n            const paddingRight = parseFloat(style!.paddingRight!) || 0;\n            const paddingTop = parseFloat(style!.paddingTop!) || 0;\n            const paddingBottom = parseFloat(style!.paddingBottom!) || 0;\n\n            const horizontalPadding = paddingLeft + paddingRight;\n            const verticalPadding = paddingTop + paddingBottom;\n            const horizontalBorder = borderLeft + borderRight;\n            const verticalBorder = borderTop + borderBottom;\n            const horizontalOffset = horizontalPadding + horizontalBorder;\n            const verticalOffset = verticalPadding + verticalBorder;\n            const position = style!.position;\n\n            let containerWidth = 0;\n            let containerHeight = 0;\n\n            // SVGSVGElement, HTMLElement\n            if (\"clientLeft\" in target) {\n                let parentElement: HTMLElement | null = null;\n\n                if (position === \"absolute\") {\n                    const offsetInfo = getOffsetInfo(target, document.body);\n                    parentElement = offsetInfo.offsetParent;\n\n                } else {\n                    parentElement = target.parentElement;\n                }\n                if (parentElement) {\n                    const parentStyle = getComputedStyle(parentElement);\n\n                    containerWidth = parseFloat(parentStyle.width);\n                    containerHeight = parseFloat(parentStyle.height);\n                }\n            }\n            minWidth = Math.max(\n                horizontalPadding,\n                convertUnitSize(style!.minWidth, containerWidth) || 0,\n            );\n            minHeight = Math.max(\n                verticalPadding,\n                convertUnitSize(style!.minHeight, containerHeight) || 0,\n            );\n            maxWidth = convertUnitSize(style!.maxWidth, containerWidth);\n            maxHeight = convertUnitSize(style!.maxHeight, containerHeight);\n\n            if (isNaN(maxWidth)) {\n                maxWidth = Infinity;\n            }\n            if (isNaN(maxHeight)) {\n                maxHeight = Infinity;\n            }\n            const inlineCSSWidth = convertUnitSize(targetStyle.width, 0) || 0;\n            const inlineCSSHeight = convertUnitSize(targetStyle.height, 0) || 0;\n            const computedWidth = parseFloat(style!.width) || 0;\n            const computedHeight = parseFloat(style!.height) || 0;\n\n            cssWidth = parseFloat(style!.width);\n            cssHeight = parseFloat(style!.height);\n\n            contentWidth = Math.abs(computedWidth - inlineCSSWidth) < 1\n                ? between(minWidth, inlineCSSWidth || cssWidth, maxWidth)\n                : computedWidth;\n            contentHeight = Math.abs(computedHeight - inlineCSSHeight) < 1\n                ? between(minHeight, inlineCSSHeight || cssHeight, maxHeight)\n                : computedHeight;\n\n            offsetWidth = contentWidth;\n            offsetHeight = contentHeight;\n            clientWidth = contentWidth;\n            clientHeight = contentHeight;\n\n            if (boxSizing) {\n                maxOffsetWidth = maxWidth;\n                maxOffsetHeight = maxHeight;\n                minOffsetWidth = minWidth;\n                minOffsetHeight = minHeight;\n                contentWidth = offsetWidth - horizontalOffset;\n                contentHeight = offsetHeight - verticalOffset;\n            } else {\n                maxOffsetWidth = maxWidth + horizontalOffset;\n                maxOffsetHeight = maxHeight + verticalOffset;\n                minOffsetWidth = minWidth + horizontalOffset;\n                minOffsetHeight = minHeight + verticalOffset;\n                offsetWidth = contentWidth + horizontalOffset;\n                offsetHeight = contentHeight + verticalOffset;\n            }\n            clientWidth = contentWidth + horizontalPadding;\n            clientHeight = contentHeight + verticalPadding;\n        }\n    }\n\n    return {\n        svg,\n        offsetWidth,\n        offsetHeight,\n        clientWidth,\n        clientHeight,\n        contentWidth,\n        contentHeight,\n        cssWidth,\n        cssHeight,\n        minWidth,\n        minHeight,\n        maxWidth,\n        maxHeight,\n        minOffsetWidth,\n        minOffsetHeight,\n        maxOffsetWidth,\n        maxOffsetHeight,\n    };\n}\nexport function getRotationRad(\n    poses: number[][],\n    direction: number,\n) {\n    return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\n\nexport function resetClientRect(): MoveableClientRect {\n    return {\n        left: 0, top: 0,\n        width: 0, height: 0,\n        right: 0,\n        bottom: 0,\n        clientLeft: 0, clientTop: 0,\n        clientWidth: 0, clientHeight: 0,\n        scrollWidth: 0, scrollHeight: 0,\n    };\n}\n\nexport function getExtendsRect(el: HTMLElement | SVGElement, rect: MoveableClientRect): MoveableClientRect {\n    const isRoot = el === document.body || el === document.documentElement;\n\n\n    const extendsRect =  {\n        clientLeft: el.clientLeft,\n        clientTop: el.clientTop,\n        clientWidth: el.clientWidth,\n        clientHeight: el.clientHeight,\n        scrollWidth: el.scrollWidth,\n        scrollHeight: el.scrollHeight,\n        overflow: false,\n    };\n\n    if (isRoot) {\n        extendsRect.clientHeight = Math.max(rect.height, extendsRect.clientHeight);\n        extendsRect.scrollHeight = Math.max(rect.height, extendsRect.scrollHeight);\n    }\n    extendsRect.overflow = getComputedStyle(el).overflow !== \"visible\";\n\n    return {\n        ...rect,\n        ...extendsRect,\n    };\n}\n\nexport function getClientRectByPosition(\n    position: { left: number, right: number, top: number, bottom: number },\n    base: MoveableClientRect,\n    el?: HTMLElement | SVGElement, isExtends?: boolean,\n) {\n    const {\n        left,\n        right,\n        top,\n        bottom,\n    } = position;\n    const baseTop = base.top;\n    const baseLeft = base.left;\n\n    const rect: MoveableClientRect = {\n        left: baseLeft + left,\n        top: baseTop + top,\n        right: baseLeft + right,\n        bottom: baseTop + bottom,\n        width: right - left,\n        height: bottom - top,\n    };\n\n\n    if (el && isExtends) {\n        return getExtendsRect(el, rect);\n    }\n    return rect;\n}\nexport function getClientRect(el: HTMLElement | SVGElement, isExtends?: boolean) {\n    let left = 0;\n    let top = 0;\n    let width = 0;\n    let height = 0;\n    // let isRoot = false;\n\n    if (el) {\n        // isRoot = el === document.body || el === document.documentElement;\n        // if (isRoot) {\n        //     width = window.innerWidth;\n        //     height = window.innerHeight;\n        //     const scrollPos = getBodyScrollPos();\n\n        //     [left, top] = [-scrollPos[0], -scrollPos[1]];\n        // } else {\n        const clientRect = el.getBoundingClientRect();\n\n        left = clientRect.left;\n        top = clientRect.top;\n        width = clientRect.width;\n        height = clientRect.height;\n        // }\n    }\n\n    const rect: MoveableClientRect = {\n        left,\n        top,\n        width,\n        height,\n        right: left + width,\n        bottom: top + height,\n    };\n\n    if (el && isExtends) {\n        return getExtendsRect(el, rect);\n    }\n    return rect;\n}\nexport function getTotalDirection(\n    parentDirection: number[],\n    isPinch: boolean,\n    inputEvent: any,\n    datas: any,\n) {\n    let direction: number[] | undefined;\n\n    if (parentDirection) {\n        direction = parentDirection;\n    } else if (isPinch) {\n        direction = [0, 0];\n    } else {\n        const target = inputEvent.target;\n\n        direction = getDirection(target, datas);\n    }\n    return direction;\n}\nexport function getDirection(target: SVGElement | HTMLElement, datas: any) {\n    if (!target) {\n        return;\n    }\n    const deg = target.getAttribute(\"data-rotation\") || \"\";\n    const direciton = target.getAttribute(\"data-direction\")!;\n\n    datas.deg = deg;\n\n    if (!direciton) {\n        return;\n    }\n    const dir = [0, 0];\n\n    (direciton.indexOf(\"w\") > -1) && (dir[0] = -1);\n    (direciton.indexOf(\"e\") > -1) && (dir[0] = 1);\n    (direciton.indexOf(\"n\") > -1) && (dir[1] = -1);\n    (direciton.indexOf(\"s\") > -1) && (dir[1] = 1);\n\n    return dir;\n}\nexport function getAbsolutePoses(poses: number[][], dist: number[]) {\n    return [\n        plus(dist, poses[0]),\n        plus(dist, poses[1]),\n        plus(dist, poses[2]),\n        plus(dist, poses[3]),\n    ];\n}\nexport function getAbsolutePosesByState({\n    left,\n    top,\n    pos1,\n    pos2,\n    pos3,\n    pos4,\n}: {\n    left: number,\n    top: number,\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n}) {\n    return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\n\nexport function roundSign(num: number) {\n    return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\n\nexport function unset(self: any, name: string) {\n    self[name]?.unset();\n    self[name] = null;\n}\n\nexport function fillCSSObject(style: Record<string, any>, resolvedEvent?: any) {\n    if (resolvedEvent) {\n        const originalDatas = getBeforeRenderableDatas(resolvedEvent);\n\n        originalDatas.nextStyle = {\n            ...originalDatas.nextStyle,\n            ...style,\n        };\n    }\n    return {\n        style,\n        cssText: getKeys(style).map(name => `${decamelize(name, \"-\")}: ${style[name]};`).join(\"\"),\n    };\n}\n\nexport function fillAfterTransform(\n    prevEvent: { style: Record<string, string>, transform: string },\n    nextEvent: { style: Record<string, string>, transform: string, afterTransform?: string },\n    resolvedEvent?: any\n): TransformObject {\n    const afterTransform = nextEvent.afterTransform || nextEvent.transform;\n\n    return {\n        ...fillCSSObject({\n            ...prevEvent.style,\n            ...nextEvent.style,\n            transform: afterTransform,\n        }, resolvedEvent),\n        afterTransform,\n        transform: prevEvent.transform,\n    };\n}\n\nexport function fillParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeParams<T>,\n    isBeforeEvent?: boolean,\n): T {\n    const datas = e.datas;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n    const nextParams = {\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        moveable,\n        datas: datas.datas,\n        isFirstDrag: !!e.isFirstDrag,\n        stopDrag() {\n            e.stop?.();\n        },\n    } as any;\n\n    if (!datas.isStartEvent) {\n        datas.isStartEvent = true;\n    } else if (!isBeforeEvent) {\n        datas.lastEvent = nextParams;\n    }\n    return nextParams;\n}\nexport function fillEndParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeEndParams<T> & { isDrag?: boolean },\n): T {\n    const datas = e.datas;\n    const isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n\n    return {\n        isDrag,\n        ...params,\n        moveable,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        lastEvent: datas.lastEvent,\n        isDouble: e.isDouble,\n        datas: datas.datas,\n        isFirstDrag: !!e.isFirstDrag,\n    } as any;\n}\nexport function catchEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\n    moveable: any,\n    name: EventName,\n    callback: (e: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>) => void,\n): any {\n    moveable._emitter.on(name, callback);\n}\n\nexport function triggerEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\n    moveable: any,\n    name: EventName,\n    params: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>,\n    isManager?: boolean,\n): any {\n    return moveable.triggerEvent(name, params, isManager);\n}\n\nexport function getComputedStyle(el: Element, pseudoElt?: string | null) {\n    return window.getComputedStyle(el, pseudoElt);\n}\n\nexport function filterAbles(\n    ables: Able[], methods: Array<keyof Able>,\n    triggerAblesSimultaneously?: boolean,\n) {\n    const enabledAbles: IObject<boolean> = {};\n    const ableGroups: IObject<boolean> = {};\n\n    return ables.filter(able => {\n        const name = able.name;\n\n        if (enabledAbles[name] || !methods.some(method => able[method])) {\n            return false;\n        }\n        if (!triggerAblesSimultaneously && able.ableGroup) {\n            if (ableGroups[able.ableGroup]) {\n                return false;\n            }\n            ableGroups[able.ableGroup] = true;\n        }\n        enabledAbles[name] = true;\n        return true;\n    });\n}\n\nexport function equals(a1: any, a2: any) {\n    return a1 === a2 || (a1 == null && a2 == null);\n}\n\nexport function selectValue<T = any>(...values: any[]): T {\n    const length = values.length - 1;\n    for (let i = 0; i < length; ++i) {\n        const value = values[i];\n\n        if (!isUndefined(value)) {\n            return value;\n        }\n    }\n\n    return values[length];\n}\n\nexport function groupBy<T>(arr: T[], func: (el: T, index: number, arr: T[]) => any) {\n    const groups: T[][] = [];\n    const groupKeys: any[] = [];\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        const keyIndex = groupKeys.indexOf(groupKey);\n        const group = groups[keyIndex] || [];\n\n        if (keyIndex === -1) {\n            groupKeys.push(groupKey);\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function groupByMap<T>(arr: T[], func: (el: T, index: number, arr: T[]) => string | number) {\n    const groups: T[][] = [];\n    const groupKeys: IObject<T[]> = {};\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        let group = groupKeys[groupKey];\n\n        if (!group) {\n            group = [];\n            groupKeys[groupKey] = group;\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function flat<T>(arr: T[][]): T[] {\n    return arr.reduce((prev, cur) => {\n        return prev.concat(cur);\n    }, []);\n}\n\nexport function equalSign(a: number, b: number) {\n    return (a >= 0 && b >= 0) || (a < 0 && b < 0);\n}\n\nexport function maxOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(b) - Math.abs(a));\n\n    return args[0];\n}\nexport function minOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(a) - Math.abs(b));\n\n    return args[0];\n}\n\nexport function calculateInversePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(\n        invert(matrix, n),\n        convertPositionMatrix(pos, n),\n        n,\n    );\n}\nexport function convertDragDist(state: MoveableManagerState, e: any) {\n    const {\n        is3d,\n        rootMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n    [\n        e.distX, e.distY,\n    ] = calculateInversePosition(rootMatrix, [e.distX, e.distY], n);\n\n    return e;\n}\n\nexport function calculatePadding(\n    matrix: number[],\n    pos: number[],\n    transformOrigin: number[],\n    origin: number[],\n    n: number,\n) {\n    return minus(calculatePosition(matrix, plus(transformOrigin, pos), n), origin);\n}\n\nexport function convertCSSSize(value: number, size: number, isRelative?: boolean) {\n    return isRelative ? `${value / size * 100}%` : `${value}px`;\n}\n\nexport function getTinyDist(v: number) {\n    return Math.abs(v) <= TINY_NUM ? 0 : v;\n}\n\nexport function viewDraggingPrefix(ableName: string) {\n    return prefix(`${ableName}-view-dragging`);\n}\nexport function getDirectionViewClassName(ableName: string) {\n    return (moveable: MoveableManagerInterface) => {\n        if (!moveable.isDragging(ableName)) {\n            return \"\";\n        }\n        const data = getGestoData(moveable, ableName);\n        const deg = data.deg;\n        if (!deg) {\n            return \"\";\n        }\n        return prefix(`view-control-rotation${deg}`);\n    };\n}\nexport function getDirectionCondition(ableName: string, checkAbles: string[] = [ableName]) {\n    return (moveable: any, e: any) => {\n        if (e.isRequest) {\n            if (checkAbles.some(name => e.requestAble === name)) {\n                return e.parentDirection!;\n            } else {\n                return false;\n            }\n        }\n        const target = e.inputEvent.target;\n\n        return hasClass(target, prefix(\"direction\")) && (!ableName || hasClass(target, prefix(ableName)));\n    };\n}\n\nexport function invertObject<T extends IObject<any>>(obj: T): InvertObject<T> {\n    const nextObj: IObject<any> = {};\n\n    for (const name in obj) {\n        nextObj[obj[name]] = name;\n    }\n    return nextObj as any;\n}\n\nexport function convertTransformInfo(transforms: string[], index: number) {\n    const beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n    const beforeFunctionTexts2 = transforms.slice(0, index < 0 ? undefined : index + 1);\n    const targetFunctionText = transforms[index] || \"\";\n    const afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n    const afterFunctionTexts2 = index < 0 ? [] : transforms.slice(index + 1);\n\n    const beforeFunctions = parse(beforeFunctionTexts);\n    const beforeFunctions2 = parse(beforeFunctionTexts2);\n    const targetFunctions = parse([targetFunctionText]);\n    const afterFunctions = parse(afterFunctionTexts);\n    const afterFunctions2 = parse(afterFunctionTexts2);\n\n\n    const beforeFunctionMatrix = toMat(beforeFunctions);\n    const beforeFunctionMatrix2 = toMat(beforeFunctions2);\n    const afterFunctionMatrix = toMat(afterFunctions);\n    const afterFunctionMatrix2 = toMat(afterFunctions2);\n    const allFunctionMatrix = multiply(\n        beforeFunctionMatrix,\n        afterFunctionMatrix,\n        4,\n    );\n    return {\n        transforms,\n        beforeFunctionMatrix,\n        beforeFunctionMatrix2,\n        targetFunctionMatrix: toMat(targetFunctions),\n        afterFunctionMatrix,\n        afterFunctionMatrix2,\n        allFunctionMatrix,\n        beforeFunctions,\n        beforeFunctions2,\n        targetFunction: targetFunctions[0],\n        afterFunctions,\n        afterFunctions2,\n        beforeFunctionTexts,\n        beforeFunctionTexts2,\n        targetFunctionText,\n        afterFunctionTexts,\n        afterFunctionTexts2,\n    };\n}\n\nexport function isArrayFormat<T = any>(arr: any): arr is ArrayFormat<T> {\n    if (!arr || !isObject(arr)) {\n        return false;\n    }\n    if (arr instanceof Element) {\n        return false;\n    }\n    return isArray(arr) || \"length\" in arr;\n}\n\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector: true): T | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector?: boolean): T | string | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>,\n    isSelector?: boolean,\n): any {\n    if (!target) {\n        return null;\n    }\n    if (target instanceof Element) {\n        return target;\n    }\n    if (isString(target)) {\n        if (isSelector) {\n            return document.querySelector(target);\n        }\n        return target;\n    }\n    if (isFunction(target)) {\n        return target();\n    }\n    if (\"current\" in target) {\n        return target.current;\n    }\n    return target;\n}\n\nexport function getRefTargets(\n    targets: MoveableRefTargetType,\n    isSelector: true): Array<HTMLElement | SVGElement | null>;\nexport function getRefTargets(\n    targets: MoveableRefTargetType,\n    isSelector?: boolean): MoveableRefTargetsResultType;\nexport function getRefTargets(targets: MoveableRefTargetType, isSelector?: boolean): any[] {\n    if (!targets) {\n        return [];\n    }\n    const userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n\n    return userTargets.reduce((prev, target) => {\n        if (isString(target) && isSelector) {\n            return [...prev, ...[].slice.call(document.querySelectorAll<HTMLElement>(target))];\n        }\n        if (isArray(target)) {\n            prev.push(getRefTargets(target, isSelector));\n        } else {\n            prev.push(getRefTarget(target, isSelector));\n        }\n        return prev;\n    }, [] as MoveableRefTargetsResultType);\n}\n\nexport function minmax(...values: number[]) {\n    return [Math.min(...values), Math.max(...values)];\n}\n\n\nexport function getAbsoluteRotation(pos1: number[], pos2: number[], direction: number) {\n    let deg = getRad(pos1, pos2) / Math.PI * 180;\n\n    deg = direction >= 0 ? deg : 180 - deg;\n    deg = deg >= 0 ? deg : 360 + deg;\n\n    return deg;\n}\n\n\nexport function getDragDistByState(state: MoveableManagerState, dist: number[]) {\n    const {\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    let inverseMatrix = invert(rootMatrix, n);\n\n    if (!is3d) {\n        inverseMatrix = convertDimension(inverseMatrix, 3, 4);\n    }\n    inverseMatrix[12] = 0;\n    inverseMatrix[13] = 0;\n    inverseMatrix[14] = 0;\n\n    return calculateMatrixDist(inverseMatrix, dist);\n}\n\nexport function getSizeDistByDist(\n    startSize: number[],\n    dist: number[],\n    ratio: number,\n    direction: number[],\n    keepRatio?: boolean,\n) {\n    const [startOffsetWidth, startOffsetHeight] = startSize;\n    let distWidth = 0;\n    let distHeight = 0;\n\n    if (keepRatio && startOffsetWidth && startOffsetHeight) {\n        const rad = getRad([0, 0], dist);\n        const standardRad = getRad([0, 0], direction);\n        const size = getDistSize(dist);\n        const signSize = Math.cos(rad - standardRad) * size;\n\n        if (!direction[0]) {\n            // top, bottom\n            distHeight = signSize;\n            distWidth = distHeight * ratio;\n        } else if (!direction[1]) {\n            // left, right\n            distWidth = signSize;\n            distHeight = distWidth / ratio;\n        } else {\n            // two-way\n            const startWidthSize = direction[0] * 2 * startOffsetWidth;\n            const startHeightSize = direction[1] * 2 * startOffsetHeight;\n            const distSize = getDistSize([startWidthSize + dist[0], startHeightSize + dist[1]])\n                - getDistSize([startWidthSize, startHeightSize]);\n            const ratioRad = getRad([0, 0], [ratio, 1]);\n\n            distWidth = Math.cos(ratioRad) * distSize;\n            distHeight = Math.sin(ratioRad) * distSize;\n        }\n    } else {\n        distWidth = direction[0] * dist[0];\n        distHeight = direction[1] * dist[1];\n    }\n\n    return [distWidth, distHeight];\n}\nexport function getOffsetSizeDist(\n    sizeDirection: number[],\n    keepRatio: boolean,\n    datas: any,\n    e: any,\n) {\n    const {\n        ratio,\n        startOffsetWidth,\n        startOffsetHeight,\n    } = datas;\n    let distWidth = 0;\n    let distHeight = 0;\n    const {\n        distX,\n        distY,\n        parentDistance,\n        parentDist,\n        parentScale,\n    } = e;\n    const startFixedDirection = datas.fixedDirection;\n    const directionsDists = [0, 1].map(index => {\n        return Math.abs(sizeDirection[index] - startFixedDirection[index]);\n    });\n    const directionRatios = [0, 1].map(index => {\n        let dist = directionsDists[index];\n\n        if (dist !== 0) {\n            dist = 2 / dist;\n        }\n        return dist;\n    });\n    if (parentDist) {\n        distWidth = parentDist[0];\n        distHeight = parentDist[1];\n\n        if (keepRatio) {\n            if (!distWidth) {\n                distWidth = distHeight * ratio;\n            } else if (!distHeight) {\n                distHeight = distWidth / ratio;\n            }\n        }\n    } else if (parentScale) {\n        distWidth = (parentScale[0] - 1) * startOffsetWidth;\n        distHeight = (parentScale[1] - 1) * startOffsetHeight;\n    } else if (parentDistance) {\n        const scaleX = startOffsetWidth * directionsDists[0];\n        const scaleY = startOffsetHeight * directionsDists[1];\n        const ratioDistance = getDistSize([scaleX, scaleY]);\n\n        distWidth = parentDistance / ratioDistance * scaleX * directionRatios[0];\n        distHeight = parentDistance / ratioDistance * scaleY * directionRatios[1];\n    } else {\n        let dist = getDragDist({ datas, distX, distY });\n\n        dist = directionRatios.map((ratio, i) => {\n            return dist[i] * ratio;\n        });\n\n        [distWidth, distHeight] = getSizeDistByDist(\n            [startOffsetWidth, startOffsetHeight],\n            dist,\n            ratio,\n            sizeDirection,\n            keepRatio,\n        );\n    }\n    return {\n        // direction,\n        // sizeDirection,\n        distWidth,\n        distHeight,\n    };\n}\n\nexport function convertTransformUnit(\n    origin: string,\n    xy?: boolean,\n): { x?: string; y?: string; value?: string; } {\n    if (xy) {\n        if (origin === \"left\") {\n            return { x: \"0%\", y: \"50%\" };\n        } else if (origin === \"top\") {\n            return { x: \"50%\", y: \"50%\" };\n        } else if (origin === \"center\") {\n            return { x: \"50%\", y: \"50%\" };\n        } else if (origin === \"right\") {\n            return { x: \"100%\", y: \"50%\" };\n        } else if (origin === \"bottom\") {\n            return { x: \"50%\", y: \"100%\" };\n        }\n        const [left, right] = origin.split(\" \");\n        const leftOrigin = convertTransformUnit(left || \"\");\n        const rightOrigin = convertTransformUnit(right || \"\");\n        const originObject = {\n            ...leftOrigin,\n            ...rightOrigin,\n        };\n\n        const nextOriginObject = {\n            x: \"50%\",\n            y: \"50%\",\n        };\n        if (originObject.x) {\n            nextOriginObject.x = originObject.x;\n        }\n        if (originObject.y) {\n            nextOriginObject.y = originObject.y;\n        }\n        if (originObject.value) {\n            if (originObject.x && !originObject.y) {\n                nextOriginObject.y = originObject.value;\n            }\n            if (!originObject.x && originObject.y) {\n                nextOriginObject.x = originObject.value;\n            }\n        }\n        return nextOriginObject;\n    }\n    if (origin === \"left\") {\n        return { x: \"0%\" };\n    }\n    if (origin === \"right\") {\n        return { x: \"100%\" };\n    }\n    if (origin === \"top\") {\n        return { y: \"0%\" };\n    }\n    if (origin === \"bottom\") {\n        return { y: \"100%\" };\n    }\n    if (!origin) {\n        return {};\n    }\n    if (origin === \"center\") {\n        return { value: \"50%\" };\n    }\n    return { value: origin };\n}\nexport function convertTransformOriginArray(transformOrigin: string, width: number, height: number) {\n    const { x, y } = convertTransformUnit(transformOrigin, true);\n\n    return [\n        convertUnitSize(x!, width) || 0,\n        convertUnitSize(y!, height) || 0,\n    ];\n}\n\nexport function rotatePosesInfo(poses: number[][], origin: number[], rad: number) {\n    const prevPoses = poses.map((pos) => minus(pos, origin));\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n    return {\n        prev: prevPoses,\n        next: nextPoses,\n        result: nextPoses.map(pos => plus(pos, origin)),\n    };\n}\n","import { makeAble } from \"./AbleManager\";\nimport { triggerEvent, fillParams, fillEndParams } from \"../utils\";\nimport {\n    PinchableProps, Able, SnappableState,\n    OnPinchStart, OnPinch, OnPinchEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\n\n/**\n * @namespace Moveable.Pinchable\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n */\nexport default makeAble(\"pinchable\", {\n    events: {\n        onPinchStart: \"pinchStart\",\n        onPinch: \"pinch\",\n        onPinchEnd: \"pinchEnd\",\n        onPinchGroupStart: \"pinchGroupStart\",\n        onPinchGroup: \"pinchGroup\",\n        onPinchGroupEnd: \"pinchGroupEnd\",\n    } as const,\n    dragStart() {\n        return true;\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<PinchableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, targets, angle, originalDatas } = e;\n        const { pinchable, ables } = moveable.props;\n\n        if (!pinchable) {\n            return false;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}Start` as \"onPinchStart\";\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlStart` as \"dragControlStart\";\n\n        const pinchAbles = (pinchable === true ? moveable.controlAbles : ables!.filter(able => {\n            return pinchable.indexOf(able.name as any) > -1;\n        })).filter(able => able.canPinch && able[controlEventName]);\n\n        const params = fillParams<OnPinchStart>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const result = triggerEvent(moveable, eventName, params);\n\n        datas.isPinch = result !== false;\n        datas.ables = pinchAbles;\n\n        const isPinch = datas.isPinch;\n\n        if (!isPinch) {\n            return false;\n        }\n        pinchAbles.forEach(able => {\n            originalDatas[able.name] = originalDatas[able.name] || {};\n\n            if (!able[controlEventName]) {\n                return;\n            }\n            const ableEvent: any = {\n                ...e,\n                datas: originalDatas[able.name],\n                parentRotate: angle,\n                isPinch: true,\n            };\n            able[controlEventName]!(moveable, ableEvent);\n        });\n\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            direction: [0, 0],\n        };\n        return isPinch;\n    },\n    pinch(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const {\n            datas, scale: pinchScale, distance,\n            originalDatas,\n            inputEvent, targets,\n            angle,\n        } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const parentDistance = distance * (1 - 1 / pinchScale);\n        const params = fillParams<OnPinch>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}` as \"onPinch\";\n        triggerEvent(moveable, eventName, params);\n\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}Control` as \"dragControl\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                datas: originalDatas[able.name],\n                inputEvent,\n                parentDistance,\n                parentRotate: angle,\n                isPinch: true,\n            } as any);\n        });\n        return params;\n    },\n    pinchEnd(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, isPinch, inputEvent, targets, originalDatas } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}End` as \"onPinchEnd\";\n\n        const params = fillEndParams<OnPinchEnd>(moveable, e, { isDrag: isPinch }) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        triggerEvent(moveable, eventName, params);\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlEnd` as \"dragControlEnd\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                isDrag: isPinch,\n                datas: originalDatas[able.name],\n                inputEvent,\n                isPinch: true,\n            } as any);\n        });\n        return isPinch;\n    },\n    pinchGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        return this.pinchStart!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.pinch!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.pinchEnd!(moveable, { ...e, targets: moveable.props.targets });\n    },\n});\n\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable.Pinchable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable.Pinchable\n * @event pinchStart\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable.Pinchable\n * @event pinch\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable.Pinchable\n * @event pinchEnd\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupStart\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroup\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupEnd\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n","import { Able, MoveableGroupInterface, MoveableManagerInterface, MoveableManagerState } from \"./types\";\nimport CustomGesto, { setCustomDrag } from \"./gesto/CustomGesto\";\n\nexport function fillChildEvents(\n    moveable: MoveableGroupInterface<any, any>,\n    name: string,\n    e: any,\n): any[] {\n    const datas = e.originalDatas;\n\n    datas.groupable = datas.groupable || {};\n\n    const groupableDatas = datas.groupable;\n\n    groupableDatas.childDatas = groupableDatas.childDatas || [];\n\n    const childDatas = groupableDatas.childDatas;\n\n    return moveable.moveables.map((_, i) => {\n        childDatas[i] = childDatas[i] || {};\n        childDatas[i][name] = childDatas[i][name] || {};\n\n        return {\n            ...e,\n            datas: childDatas[i][name],\n            originalDatas: childDatas[i],\n        };\n    });\n}\nexport function triggerChildGesto(\n    moveable: MoveableGroupInterface<any, any>,\n    able: Able,\n    type: string,\n    delta: number[],\n    e: any,\n    isConvert: boolean,\n    ableName: string,\n) {\n    const isStart = !!type.match(/Start$/g);\n    const isEnd = !!type.match(/End$/g);\n    const isPinch = e.isPinch;\n    const datas = e.datas;\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        const state = childMoveable.state as MoveableManagerState<any>;\n        const gestos = state.gestos;\n        let childEvent: any = ev;\n\n        if (isStart) {\n            childEvent = new CustomGesto(ableName).dragStart(delta, ev);\n        } else {\n\n\n            if (!gestos[ableName]) {\n                gestos[ableName] = datas.childGestos[i];\n            }\n            if (!gestos[ableName]) {\n                return;\n            }\n            childEvent = setCustomDrag(ev, state, delta, isPinch, isConvert, ableName);\n        }\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        if (isEnd) {\n            gestos[ableName] = null;\n        }\n        return result;\n    });\n    if (isStart) {\n        datas.childGestos = moveables.map(child => child.state.gestos[ableName]);\n    }\n    return childs;\n}\nexport function triggerChildAbles<T extends Able>(\n    moveable: MoveableGroupInterface<any, any>,\n    able: T,\n    type: keyof T & string,\n    e: any,\n    eachEvent: (movebale: MoveableManagerInterface<any, any>, ev: any) => any = (_, ev) => ev,\n    callback?: (moveable: MoveableManagerInterface<any, any>, ev: any, result: any, index: number) => any,\n) {\n    const isEnd = !!type.match(/End$/g);\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent = ev;\n\n        childEvent = eachEvent(childMoveable, ev);\n\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        result && callback && callback(childMoveable, ev, result, i);\n\n        if (isEnd) {\n            childMoveable.state.gestos = {};\n        }\n        return result;\n    });\n\n    return childs;\n}\n","import { TINY_NUM } from \"@daybrush/utils\";\nimport { throttle } from \"@daybrush/utils\";\nimport {\n    MoveableClientRect, MoveableManagerInterface,\n    SnapDirectionPoses,\n    SnapDirections, SnappableProps,\n    SnappableState,\n} from \"../../types\";\nimport {\n    calculatePosition,\n} from \"../../utils\";\nexport const VERTICAL_NAMES = [\"left\", \"right\", \"center\"] as const;\nexport const HORIZONTAL_NAMES = [\"top\", \"bottom\", \"middle\"] as const;\nexport const VERTICAL_NAMES_MAP = {\n    start: \"left\",\n    end: \"right\",\n    center: \"center\",\n} as const;\nexport const HORIZONTAL_NAMES_MAP = {\n    start: \"top\",\n    end: \"bottom\",\n    center: \"middle\",\n} as const;\n\n\nexport function hasGuidelines(\n    moveable: MoveableManagerInterface<any, any>,\n    ableName: string\n): moveable is MoveableManagerInterface<SnappableProps, SnappableState> {\n    const {\n        props: {\n            snappable,\n            bounds,\n            innerBounds,\n            verticalGuidelines,\n            horizontalGuidelines,\n            snapGridWidth,\n            snapGridHeight,\n        },\n        state: { guidelines, enableSnap },\n    } = moveable;\n\n    if (\n        !snappable ||\n        !enableSnap ||\n        (ableName && snappable !== true && snappable.indexOf(ableName) < 0)\n    ) {\n        return false;\n    }\n    if (\n        snapGridWidth ||\n        snapGridHeight ||\n        bounds ||\n        innerBounds ||\n        (guidelines && guidelines.length) ||\n        (verticalGuidelines && verticalGuidelines.length) ||\n        (horizontalGuidelines && horizontalGuidelines.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nexport function getSnapDirections(snapDirections: SnapDirections | boolean | undefined): SnapDirections {\n    if (snapDirections === false) {\n        return {};\n    } else if (snapDirections === true || !snapDirections) {\n        return { left: true, right: true, top: true, bottom: true };\n    }\n    return snapDirections;\n}\n\nexport function mapSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapDirections = getSnapDirections(snapDirections);\n    const nextSnapPoses: SnapDirectionPoses = {};\n\n    for (const name in nextSnapDirections) {\n        if (name in snapPoses && (nextSnapDirections as any)[name]) {\n            (nextSnapPoses as any)[name] = (snapPoses as any)[name];\n        }\n    }\n    return nextSnapPoses;\n}\n\nexport function splitSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapPoses = mapSnapDirectionPoses(snapDirections, snapPoses);\n    const horizontalNames = HORIZONTAL_NAMES.filter(name => name in nextSnapPoses);\n    const verticalNames = VERTICAL_NAMES.filter(name => name in nextSnapPoses);\n\n    return {\n        horizontal: horizontalNames.map(name => nextSnapPoses[name]!),\n        vertical: verticalNames.map(name => nextSnapPoses[name]!),\n    };\n}\n\nexport function calculateContainerPos(\n    rootMatrix: number[],\n    containerRect: MoveableClientRect,\n    n: number,\n) {\n    const clientPos = calculatePosition(\n        rootMatrix, [containerRect.clientLeft!, containerRect.clientTop!], n);\n\n    return [\n        containerRect.left + clientPos[0],\n        containerRect.top + clientPos[1],\n    ];\n}\n\nexport function solveLineConstants([point1, point2]: number[][]): [number, number, number] {\n    let dx = point2[0] - point1[0];\n    let dy = point2[1] - point1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n\n    // b > 0\n    // ax + by + c = 0\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\n    if (!dx) {\n        // -x + 1 = 0\n        a = -1;\n        c = point1[0];\n    } else if (!dy) {\n        // y - 1 = 0\n        b = 1;\n        c = -point1[1];\n    } else {\n        // y = -a(x - x1) + y1\n        // ax + y + a * x1 - y1 = 0\n        a = -dy / dx;\n        b = 1;\n        c = a * point1[0] - point1[1];\n    }\n\n    return [a, b, c].map(v => throttle(v, TINY_NUM)) as [number, number, number];\n}\n","import {\n    SnapInfo, SnappableProps, SnappableState,\n    SnapGuideline, ResizableProps, ScalableProps,\n    SnapOffsetInfo, MoveableManagerInterface, SnapDirectionPoses,\n} from \"../../types\";\nimport {\n    selectValue, getTinyDist,\n} from \"../../utils\";\nimport { getPosByDirection, getPosesByDirection } from \"../../gesto/GestoUtils\";\nimport { TINY_NUM } from \"../../consts\";\nimport { minus } from \"@scena/matrix\";\nimport { splitSnapDirectionPoses } from \"./utils\";\n\n\n\nexport function checkMoveableSnapPoses(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    posesX: number[],\n    posesY: number[],\n    customSnapThreshold?: number,\n) {\n    const props = moveable.props;\n    const snapThreshold = selectValue<number>(customSnapThreshold, props.snapThreshold, 5);\n\n    return checkSnapPoses(\n        moveable.state.guidelines,\n        posesX,\n        posesY,\n        snapThreshold,\n    );\n}\n\nexport function checkSnapPoses(\n    guidelines: SnapGuideline[],\n    posesX: number[],\n    posesY: number[],\n    snapThreshold: number,\n) {\n    return {\n        vertical: checkSnap(guidelines, \"vertical\", posesX, snapThreshold),\n        horizontal: checkSnap(guidelines, \"horizontal\", posesY, snapThreshold),\n    };\n}\nexport function checkSnapKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n): { vertical: SnapOffsetInfo, horizontal: SnapOffsetInfo } {\n    const [endX, endY] = endPos;\n    const [startX, startY] = startPos;\n    let [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    dx = getTinyDist(dx);\n    dy = getTinyDist(dy);\n\n    const verticalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    }\n    const {\n        vertical: verticalSnapInfo,\n        horizontal: horizontalSnapInfo,\n    } = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []);\n\n    verticalSnapInfo.posInfos.filter(({ pos }) => {\n        return isRight ? pos >= startX : pos <= startX;\n    });\n    horizontalSnapInfo.posInfos.filter(({ pos }) => {\n        return isBottom ? pos >= startY : pos <= startY;\n    });\n    verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n    horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n\n    const {\n        isSnap: isVerticalSnap,\n        guideline: verticalGuideline,\n    } = getNearestSnapGuidelineInfo(verticalSnapInfo);\n    const {\n        isSnap: isHorizontalSnap,\n        guideline: horizontalGuideline,\n    } = getNearestSnapGuidelineInfo(horizontalSnapInfo);\n    const horizontalPos = isHorizontalSnap ? horizontalGuideline!.pos[1] : 0;\n    const verticalPos = isVerticalSnap ? verticalGuideline!.pos[0] : 0;\n\n    if (dx === 0) {\n        if (isHorizontalSnap) {\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = horizontalGuideline!.pos[1];\n            horizontalInfo.offset = endY - horizontalInfo.pos;\n        }\n    } else if (dy === 0) {\n        if (isVerticalSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = verticalPos;\n            verticalInfo.offset = endX - verticalPos;\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isSnap = false;\n\n        if (isVerticalSnap) {\n            x = verticalPos;\n            y = a * x + b;\n            isSnap = true;\n        } else if (isHorizontalSnap) {\n            y = horizontalPos;\n            x = (y - b) / a;\n            isSnap = true;\n        }\n        if (isSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\n\nexport function checkSnaps(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    rect: SnapDirectionPoses,\n    customSnapThreshold?: number,\n) {\n    const poses = splitSnapDirectionPoses(moveable.props.snapDirections, rect);\n\n    return checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n        customSnapThreshold,\n    );\n}\n\nexport function getNearestSnapGuidelineInfo(\n    snapInfo: SnapInfo,\n) {\n    const isSnap = snapInfo.isSnap;\n\n    if (!isSnap) {\n        return {\n            isSnap: false,\n            offset: 0,\n            dist: -1,\n            pos: 0,\n            guideline: null,\n        };\n    }\n    const posInfo = snapInfo.posInfos[0];\n    const guidelineInfo = posInfo!.guidelineInfos[0];\n    const offset = guidelineInfo!.offset;\n    const dist = guidelineInfo!.dist;\n    const guideline = guidelineInfo!.guideline;\n\n    return {\n        isSnap,\n        offset,\n        dist,\n        pos: posInfo!.pos,\n        guideline,\n    };\n}\n\nfunction checkSnap(\n    guidelines: SnapGuideline[],\n    targetType: \"horizontal\" | \"vertical\",\n    targetPoses: number[],\n    snapThreshold: number,\n): SnapInfo {\n    if (!guidelines || !guidelines.length) {\n        return {\n            isSnap: false,\n            index: -1,\n            posInfos: [],\n        };\n    }\n    const isVertical = targetType === \"vertical\";\n    const posType = isVertical ? 0 : 1;\n\n    const snapPosInfos = targetPoses.map((targetPos, index) => {\n        const guidelineInfos = guidelines.map(guideline => {\n            const { pos } = guideline;\n            const offset = targetPos - pos[posType];\n\n            return {\n                offset,\n                dist: Math.abs(offset),\n                guideline,\n            };\n        }).filter(({ guideline, dist }) => {\n            const { type } = guideline;\n            if (\n                type !== targetType\n                || dist > snapThreshold\n            ) {\n                return false;\n            }\n            return true;\n        }).sort(\n            (a, b) => a.dist - b.dist,\n        );\n\n\n        return {\n            pos: targetPos,\n            index,\n            guidelineInfos,\n        };\n    }).filter(snapPosInfo => {\n        return snapPosInfo.guidelineInfos.length > 0;\n    }).sort((a, b) => {\n        return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n    });\n\n    const isSnap = snapPosInfos.length > 0;\n    return {\n        isSnap,\n        index: isSnap ? snapPosInfos[0].index : -1,\n        posInfos: snapPosInfos,\n    };\n}\n\nexport function getSnapInfosByDirection(\n    moveable: MoveableManagerInterface<SnappableProps & (ResizableProps | ScalableProps), SnappableState>,\n    poses: number[][],\n    snapDirection: number[],\n    snapThreshold = 1,\n) {\n    let nextPoses: number[][] = [];\n    if (snapDirection[0] && snapDirection[1]) {\n        nextPoses = [\n            snapDirection,\n            [-snapDirection[0], snapDirection[1]],\n            [snapDirection[0], -snapDirection[1]],\n        ].map(direction => getPosByDirection(poses, direction));\n    } else if (!snapDirection[0] && !snapDirection[1]) {\n        const alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n\n        for (let i = 0; i < 4; ++i) {\n            nextPoses.push(alignPoses[i]);\n            nextPoses.push([\n                (alignPoses[i][0] + alignPoses[i + 1][0]) / 2,\n                (alignPoses[i][1] + alignPoses[i + 1][1]) / 2,\n            ]);\n        }\n    } else {\n        if (moveable.props.keepRatio) {\n            nextPoses = [\n                [-1, -1],\n                [-1, 1],\n                [1, -1],\n                [1, 1],\n                snapDirection,\n            ].map(dir => getPosByDirection(poses, dir));\n        } else {\n            nextPoses = getPosesByDirection(poses, snapDirection);\n\n            if (nextPoses.length > 1) {\n                nextPoses.push([\n                    (nextPoses[0][0] + nextPoses[1][0]) / 2,\n                    (nextPoses[0][1] + nextPoses[1][1]) / 2,\n                ]);\n            }\n        }\n    }\n    return checkMoveableSnapPoses(moveable, nextPoses.map(pos => pos[0]), nextPoses.map(pos => pos[1]), snapThreshold);\n}\n\nexport function checkSnapBoundPriority(\n    a: { isBound: boolean, isSnap: boolean, offset: number },\n    b: { isBound: boolean, isSnap: boolean, offset: number },\n) {\n    const aDist = Math.abs(a.offset);\n    const bDist = Math.abs(b.offset);\n\n    if (a.isBound && b.isBound) {\n        return bDist - aDist;\n    } else if (a.isBound) {\n        return -1;\n    } else if (b.isBound) {\n        return 1;\n    } else if (a.isSnap && b.isSnap) {\n        return bDist - aDist;\n    } else if (a.isSnap) {\n        return -1;\n    } else if (b.isSnap) {\n        return 1;\n    } else if (aDist < TINY_NUM) {\n        return 1;\n    } else if (bDist < TINY_NUM) {\n        return -1;\n    }\n    return aDist - bDist;\n}\nexport function getNearOffsetInfo<T extends { offset: number[], isBound: boolean, isSnap: boolean, sign: number[] }>(\n    offsets: T[],\n    index: number,\n) {\n    return offsets.slice().sort((a, b) => {\n        const aSign = a.sign[index];\n        const bSign = b.sign[index];\n        const aOffset = a.offset[index];\n        const bOffset = b.offset[index];\n        // -1 The positions of a and b do not change.\n        // 1 The positions of a and b are reversed.\n        if (!aSign) {\n            return 1;\n        } else if (!bSign) {\n            return -1;\n        }\n        return checkSnapBoundPriority(\n            { isBound: a.isBound, isSnap: a.isSnap, offset: aOffset },\n            { isBound: b.isBound, isSnap: b.isSnap, offset: bOffset },\n        );\n    })[0];\n}\n\n\nexport function getCheckSnapDirections(\n    direction: number[],\n    fixedDirection: number[],\n    keepRatio: boolean\n) {\n    const directions: number[][][] = [];\n    // const fixedDirection = [-direction[0], -direction[1]];\n\n    if (keepRatio) {\n        if (Math.abs(fixedDirection[0]) !== 1 || Math.abs(fixedDirection[1]) !== 1) {\n            directions.push(\n                [fixedDirection, [-1, -1]],\n                [fixedDirection, [-1, 1]],\n                [fixedDirection, [1, -1]],\n                [fixedDirection, [1, 1]],\n            );\n        } else {\n            directions.push(\n                [fixedDirection, [direction[0], -direction[1]]],\n                [fixedDirection, [-direction[0], direction[1]]],\n            );\n        }\n        directions.push([fixedDirection, direction]);\n    } else {\n        if ((direction[0] && direction[1]) || (!direction[0] && !direction[1])) {\n            const endDirection = direction[0] ? direction : [1, 1];\n\n            [1, -1].forEach(signX => {\n                [1, -1].forEach(signY => {\n                    const nextDirection = [signX * endDirection[0], signY * endDirection[1]];\n\n                    if (\n                        fixedDirection[0] === nextDirection[0]\n                        && fixedDirection[1] === nextDirection[1]\n                    ) {\n                        return;\n                    }\n                    directions.push([fixedDirection, nextDirection]);\n                });\n            });\n        } else if (direction[0]) {\n            const signs = Math.abs(fixedDirection[0]) === 1 ? [1] : [1, -1];\n\n            signs.forEach(sign => {\n                directions.push(\n                    [\n                        [fixedDirection[0], -1],\n                        [sign * direction[0], -1],\n                    ],\n                    [\n                        [fixedDirection[0], 0],\n                        [sign * direction[0], 0],\n                    ],\n                    [\n                        [fixedDirection[0], 1],\n                        [sign * direction[0], 1],\n                    ]\n                );\n            });\n        } else if (direction[1]) {\n            const signs = Math.abs(fixedDirection[1]) === 1 ? [1] : [1, -1];\n\n            signs.forEach(sign => {\n                directions.push(\n                    [\n                        [-1, fixedDirection[1]],\n                        [-1, sign * direction[1]],\n                    ],\n                    [\n                        [0, fixedDirection[1]],\n                        [0, sign * direction[1]],\n                    ],\n                    [\n                        [1, fixedDirection[1]],\n                        [1, sign * direction[1]],\n                    ]\n                );\n            });\n        }\n    }\n    return directions;\n}\n","import { average, getRad, throttle } from \"@daybrush/utils\";\nimport { rotate } from \"@scena/matrix\";\nimport { maxOffset, getDistSize, getTinyDist, calculatePoses } from \"../../utils\";\n\nimport { SnappableProps, DraggableProps, RotatableProps, MoveableManagerInterface } from \"../../types\";\nimport { getDragDist, getPosByDirection, getInverseDragDist } from \"../../gesto/GestoUtils\";\nimport { getNearOffsetInfo } from \"./snap\";\nimport { TINY_NUM } from \"../../consts\";\nimport { solveLineConstants } from \"./utils\";\n\nfunction isStartLine(dot: number[], line: number[][]) {\n    // l    o     => true\n    // o    l    => false\n    const cx = average([line[0][0], line[1][0]]);\n    const cy = average([line[0][1], line[1][1]]);\n\n    return {\n        vertical: cx <= dot[0],\n        horizontal: cy <= dot[1],\n    };\n}\nfunction hitTestLine(\n    dot: number[],\n    [pos1, pos2]: number[][],\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    let test1: number;\n    let test2: number;\n    if (!dx) {\n        test1 = pos1[0];\n        test2 = dot[0];\n    } else if (!dy) {\n        test1 = pos1[1];\n        test2 = dot[1];\n    } else {\n        const a = dy / dx;\n\n        // y = a * (x - pos1) + pos1\n        test1 = a * (dot[0] - pos1[0]) + pos1[1];\n        test2 = dot[1];\n    }\n    return test1 - test2;\n}\nfunction isSameStartLine(dots: number[][], line: number[][], centerSign: boolean, error: number = TINY_NUM) {\n    return dots.every(dot => {\n        const value = hitTestLine(dot, line);\n        const sign = value <= 0;\n        return sign === centerSign || Math.abs(value) <= error;\n    });\n}\nfunction checkInnerBoundDot(\n    pos: number,\n    start: number,\n    end: number,\n    isStart: boolean,\n    threshold = 0,\n) {\n    if (\n        (isStart && start - threshold <= pos)\n        || (!isStart && pos <= end + threshold)\n    ) {\n        // false 402 565 602 => 37 ([0, 37])\n        // true 400 524.9712603540036 600 => 124 ([124, 0])\n        // true 400 410 600 => 10 ([10, 0])\n        return {\n            isBound: true,\n            offset: isStart ? start - pos : end - pos,\n        };\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\n\nfunction checkInnerBound(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    { line, centerSign, verticalSign, horizontalSign, lineConstants }: InnerBoundLineInfo,\n) {\n    const bounds = moveable.props.innerBounds;\n\n    if (!bounds) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    const { left, top, width, height } = bounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n\n    if (isSameStartLine([\n        [left, top],\n        [left + width, top],\n        [left, top + height],\n        [left + width, top + height],\n    ], line, centerSign)) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    // test vertical\n\n    const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, verticalSign);\n    const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, verticalSign);\n\n    // test horizontal\n    const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, horizontalSign);\n    const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, horizontalSign);\n\n    const isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n    const isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n    const isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n    const isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n    const verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n    const horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n    let offset = [0, 0];\n    let isBound = false;\n    let isAllBound = false;\n\n    if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n        offset = [verticalOffset, 0];\n        isBound = isVerticalBound;\n        isAllBound = isAllVerticalBound;\n    } else {\n        offset = [0, horizontalOffset];\n        isBound = isHorizontalBound;\n        isAllBound = isAllHorizontalBound;\n    }\n    return {\n        isAllBound,\n        isVerticalBound,\n        isHorizontalBound,\n        isBound,\n        offset,\n    };\n}\n\nfunction checkLineBoundCollision(\n    line: number[][],\n    [a, b]: [number, number, number],\n    boundLine: number[][],\n    isStart: boolean,\n    threshold?: number,\n    isRender?: boolean,\n) {\n    const dot1 = line[0];\n    // const dot2 = line[1];\n    const boundDot1 = boundLine[0];\n    const boundDot2 = boundLine[1];\n\n    // const dy1 = getTinyDist(dot2[1] - dot1[1]);\n    // const dx1 = getTinyDist(dot2[0] - dot1[0]);\n    const dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n    const dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n\n    const hasDx = b;\n    const hasDy = a;\n    const slope = - a / b;\n    // lineConstants\n    // ax + by + c = 0\n    // dx2 or dy2 is zero\n    if (!dx2) {\n        // vertical\n        // by + c = 0\n        if (isRender && !hasDy) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (hasDx) {\n            // ax + by + c = 0\n            // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n            const y = slope * (boundDot1[0] - dot1[0]) + dot1[1];\n\n            // boundDot1[1] <= y  <= boundDot2[1]\n            return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n        } else {\n            // ax + c = 0\n            const offset = boundDot1[0] - dot1[0];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    } else if (!dy2) {\n        // horizontal\n        if (isRender && !hasDx) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (hasDy) {\n            // y = a * (x - x1) + y1\n            // x = (y - y1) / a + x1\n            // const a = dy1 / dx1;\n            // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n            const x = (boundDot1[1] - dot1[1]) / slope + dot1[0];\n\n            // boundDot1[0] <= x && x <= boundDot2[0]\n            return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n        } else {\n            const offset = boundDot1[1] - dot1[1];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\nexport function getInnerBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    lineInfos: InnerBoundLineInfo[],\n    datas: any,\n) {\n    return lineInfos.map(info => {\n        const {\n            isBound,\n            offset,\n            isVerticalBound,\n            isHorizontalBound,\n        } = checkInnerBound(moveable, info);\n\n        const multiple = info.multiple;\n\n        const sizeOffset = getDragDist({\n            datas,\n            distX: offset[0],\n            distY: offset[1],\n        }).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound,\n            isVerticalBound,\n            isHorizontalBound,\n            isSnap: false,\n            offset: sizeOffset,\n        };\n    });\n}\n\nexport function getInnerBoundDragInfo(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    poses: number[][],\n    datas: any,\n) {\n    const lines = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false).map(info => {\n        return {\n            ...info,\n            multiple: info.multiple.map(dir => Math.abs(dir) * 2),\n        };\n    });\n    const innerBoundInfo = getInnerBoundInfo(moveable, lines, datas);\n    const widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n    const heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n    let verticalOffset = 0;\n    let horizontalOffset = 0;\n    const isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n    const isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n\n    if (isVerticalBound || isHorizontalBound) {\n        [verticalOffset, horizontalOffset] = getInverseDragDist({\n            datas,\n            distX: -widthOffsetInfo.offset[0],\n            distY: -heightOffsetInfo.offset[1],\n        });\n    }\n\n    return {\n        vertical: {\n            isBound: isVerticalBound,\n            offset: verticalOffset,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            offset: horizontalOffset,\n        },\n    };\n}\nexport function getCheckSnapLineDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const lineDirections: number[][][] = [];\n    const x = direction[0];\n    const y = direction[1];\n    if (x && y) {\n        lineDirections.push(\n            [[0, y * 2], direction, [-x, y]],\n            [[x * 2, 0], direction, [x, -y]],\n        );\n    } else if (x) {\n        // vertcal\n        lineDirections.push(\n            [[x * 2, 0], [x, 1], [x, -1]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[0, -1], [x, -1], [-x, -1]],\n                [[0, 1], [x, 1], [-x, 1]],\n            );\n        }\n    } else if (y) {\n        // horizontal\n        lineDirections.push(\n            [[0, y * 2], [1, y], [-1, y]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[-1, 0], [-1, y], [-1, -y]],\n                [[1, 0], [1, y], [1, -y]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        lineDirections.push(\n            [[-1, 0], [-1, -1], [-1, 1]],\n            [[1, 0], [1, -1], [1, 1]],\n            [[0, -1], [-1, -1], [1, -1]],\n            [[0, 1], [-1, 1], [1, 1]],\n        );\n    }\n\n    return lineDirections;\n}\nexport interface InnerBoundLineInfo {\n    line: number[][];\n    multiple: number[];\n    horizontalSign: boolean;\n    verticalSign: boolean;\n    centerSign: boolean;\n    lineConstants: [number, number, number];\n}\nexport function getCheckInnerBoundLineInfos(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n): InnerBoundLineInfo[] {\n    const {\n        allMatrix,\n        is3d,\n    } = moveable.state;\n    const virtualPoses = calculatePoses(allMatrix, 100, 100, is3d ? 4 : 3);\n    const center = getPosByDirection(virtualPoses, [0, 0]);\n\n    return getCheckSnapLineDirections(direction, keepRatio).map(([multiple, dir1, dir2]) => {\n        const virtualLine = [\n            getPosByDirection(virtualPoses, dir1),\n            getPosByDirection(virtualPoses, dir2),\n        ];\n        const lineConstants = solveLineConstants(virtualLine);\n        const {\n            vertical: verticalSign,\n            horizontal: horizontalSign,\n        } = isStartLine(center, virtualLine);\n        const centerSign = hitTestLine(center, virtualLine) <= 0;\n\n        return {\n            multiple,\n            centerSign,\n            verticalSign,\n            horizontalSign,\n            lineConstants,\n            line: [\n                getPosByDirection(poses, dir1),\n                getPosByDirection(poses, dir2),\n            ],\n        };\n    });\n}\n\nfunction isBoundRotate(\n    relativePoses: number[][],\n    boundDots: number[][],\n    center: number[],\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n    return [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].some(line => {\n        const centerSign = hitTestLine(center, line) <= 0;\n\n        return !isSameStartLine(boundDots, line, centerSign);\n    });\n}\nfunction getDistPointLine([pos1, pos2]: number[][]) {\n    // x = 0, y = 0\n    // d = (ax + by + c) / root(a2 + b2)\n\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return Math.abs(pos1[0]);\n    }\n    if (!dy) {\n        return Math.abs(pos1[1]);\n    }\n    // y - y1 = a(x - x1)\n    // 0 = ax -y + -a * x1 + y1\n\n    const a = dy / dx;\n\n    return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine([pos1, pos2]: number[][]) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return [pos1[0], 0];\n    }\n    if (!dy) {\n        return [0, pos1[1]];\n    }\n    const a = dy / dx;\n    // y - y1 = a (x  - x1)\n    // y = ax - a * x1 + y1\n    const b = -a * pos1[0] + pos1[1];\n    // y = ax + b = -1/a x\n    // x = -b / (a + 1 / a)\n    // y = b / (1 + 1 / a^2)\n\n    return [\n        -b / (a + 1 / a),\n        b / ((a * a) + 1),\n    ];\n}\nexport function checkRotateInnerBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.innerBounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left,\n        top,\n        width,\n        height,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = left + width - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = top + height - origin[1];\n    const dots = [\n        [relativeLeft, relativeTop],\n        [relativeRight, relativeTop],\n        [relativeLeft, relativeBottom],\n        [relativeRight, relativeBottom],\n    ];\n    const center = getPosByDirection(nextPoses, [0, 0]);\n\n    if (!isBoundRotate(nextPoses, dots, center, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    const dotInfos = dots.map(dot => [\n        getDistSize(dot),\n        getRad([0, 0], dot),\n    ]);\n    [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].forEach(line => {\n        const lineRad = getRad([0, 0], solveReverseLine(line));\n        const lineDist = getDistPointLine(line);\n\n        result.push(...dotInfos\n            .filter(([dotDist]) => {\n                return dotDist && lineDist <= dotDist;\n            })\n            .map(([dotDist, dotRad]) => {\n                const distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n                const nextRad1 = dotRad + distRad;\n                const nextRad2 = dotRad - distRad;\n\n                return [\n                    rad + nextRad1 - lineRad,\n                    rad + nextRad2 - lineRad,\n                ];\n            })\n            .reduce((prev, cur) => {\n                prev.push(...cur);\n                return prev;\n            }, [])\n            .filter(nextRad => !isBoundRotate(prevPoses, dots, center, nextRad))\n            .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n    });\n    return result;\n}\n\nexport function checkInnerBoundPoses(\n    moveable: MoveableManagerInterface<SnappableProps>,\n) {\n    const innerBounds = moveable.props.innerBounds;\n\n    if (!innerBounds) {\n        return {\n            vertical: [],\n            horizontal: [],\n        };\n    }\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = moveable.getRect();\n    const poses = [pos1, pos2, pos3, pos4];\n    const center = getPosByDirection(poses, [0, 0]);\n    const { left, top, width, height } = innerBounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n    const lineInfos = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false);\n\n    const horizontalPoses: number[] = [];\n    const verticalPoses: number[] = [];\n\n    const boundMap = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false,\n    };\n\n    lineInfos.forEach(lineInfo => {\n        const { line, lineConstants } = lineInfo;\n        const {\n            horizontal: isHorizontalStart,\n            vertical: isVerticalStart,\n        } = isStartLine(center, line);\n\n        // test vertical\n        const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, isVerticalStart, 1, true);\n        const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, isVerticalStart, 1, true);\n\n        // test horizontal\n        const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, isHorizontalStart, 1, true);\n        const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, isHorizontalStart, 1, true);\n\n        if (topBoundInfo.isBound && !boundMap.top) {\n            horizontalPoses.push(top);\n            boundMap.top = true;\n        }\n        if (bottomBoundInfo.isBound && !boundMap.bottom) {\n            horizontalPoses.push(top + height);\n            boundMap.bottom = true;\n        }\n        if (leftBoundInfo.isBound && !boundMap.left) {\n            verticalPoses.push(left);\n            boundMap.left = true;\n        }\n        if (rightBoundInfo.isBound && !boundMap.right) {\n            verticalPoses.push(left + width);\n            boundMap.right = true;\n        }\n    });\n\n    return {\n        horizontal: horizontalPoses,\n        vertical: verticalPoses,\n    };\n}\n","import { getRad, throttle } from \"@daybrush/utils\";\nimport {\n    BoundInfo, SnappableProps, BoundType,\n    RotatableProps, MoveableManagerInterface, SnappableState,\n} from \"../../types\";\nimport { rotate, minus } from \"@scena/matrix\";\nimport { getDistSize } from \"../../utils\";\nimport { TINY_NUM } from \"../../consts\";\n\nexport function checkBoundPoses(\n    bounds: BoundType | false | undefined,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n) {\n    const {\n        position = \"client\",\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds || {};\n    const nextBounds = {\n        position,\n        left,\n        top,\n        right,\n        bottom,\n    };\n\n    return {\n        vertical: checkBounds(nextBounds, verticalPoses, true),\n        horizontal: checkBounds(nextBounds, horizontalPoses, false),\n    };\n}\nexport function getBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    externalBounds?: BoundType | false | null,\n) {\n    const {\n        containerClientRect: {\n            clientHeight: containerHeight,\n            clientWidth: containerWidth,\n            clientLeft,\n            clientTop,\n        },\n        snapOffset: {\n            left: snapOffsetLeft,\n            top: snapOffsetTop,\n            right: snapOffsetRight,\n            bottom: snapOffsetBottom,\n        },\n    } = moveable.state;\n    const bounds = externalBounds || moveable.props.bounds || {} as BoundType;\n    const position = bounds.position || \"client\";\n    const isCSS = position === \"css\";\n    const {\n        left = -Infinity,\n        top = -Infinity,\n    } = bounds;\n    let {\n        right = isCSS ? -Infinity : Infinity,\n        bottom = isCSS ? -Infinity : Infinity,\n    } = bounds;\n\n    if (isCSS) {\n        right = containerWidth! + snapOffsetRight - snapOffsetLeft - right;\n        bottom = containerHeight! + snapOffsetBottom - snapOffsetTop - bottom;\n    }\n\n    return {\n        left: left + snapOffsetLeft - clientLeft!,\n        right: right + snapOffsetLeft - clientLeft!,\n        top: top + snapOffsetTop - clientTop!,\n        bottom: bottom + snapOffsetTop - clientTop!,\n    };\n}\nexport function checkBoundKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const [endX, endY] = endPos;\n    let [dx, dy] = minus(endPos, startPos);\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    } else if (dx === 0) {\n        if (isBottom) {\n            if (bottom < endY) {\n                horizontalInfo.pos = bottom;\n                horizontalInfo.offset = endY - bottom;\n            }\n        } else {\n            if (top > endY) {\n                horizontalInfo.pos = top;\n                horizontalInfo.offset = endY - top;\n            }\n        }\n    } else if (dy === 0) {\n        if (isRight) {\n            if (right < endX) {\n                verticalInfo.pos = right;\n                verticalInfo.offset = endX - right;\n            }\n        } else {\n            if (left > endX) {\n                verticalInfo.pos = left;\n                verticalInfo.offset = endX - left;\n            }\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isBound = false;\n\n        if (isRight && right <= endX) {\n            y = a * right + b;\n            x = right;\n            isBound = true;\n        } else if (!isRight && endX <= left) {\n            y = a * left + b;\n            x = left;\n            isBound = true;\n        }\n        if (isBound) {\n            if (y < top || y > bottom) {\n                isBound = false;\n            }\n        }\n        if (!isBound) {\n            if (isBottom && bottom <= endY) {\n                y = bottom;\n                x = (y - b) / a;\n                isBound = true;\n            } else if (!isBottom &&  endY <= top) {\n                y = top;\n                x = (y - b) / a;\n                isBound = true;\n            }\n        }\n        if (isBound) {\n            verticalInfo.isBound = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isBound = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\nfunction checkBounds(\n    bounds: Required<BoundType>,\n    poses: number[],\n    isVertical: boolean,\n): BoundInfo[] {\n    // 0   [100 - 200]  300\n    const startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n    const endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\n\n    // 450\n    const minPos = Math.min(...poses);\n    const maxPos = Math.max(...poses);\n    const boundInfos: BoundInfo[] = [];\n\n    if (startBoundPos + 1 > minPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: minPos - startBoundPos,\n            pos: startBoundPos,\n        });\n    }\n    if (endBoundPos - 1 < maxPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: maxPos - endBoundPos,\n            pos: endBoundPos,\n        });\n    }\n\n    if (!boundInfos.length) {\n        boundInfos.push({\n            isBound: false,\n            offset: 0,\n            pos: 0,\n        });\n    }\n\n    return boundInfos.sort((a, b) => Math.abs(b.offset) - Math.abs(a.offset));\n}\nexport function isBoundRotate(\n    relativePoses: number[][],\n    boundRect: { left: number, top: number, right: number, bottom: number },\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n\n    return nextPoses.some(pos => {\n        return (pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1)\n            || (pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1)\n            || (pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1)\n            || (pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1);\n    });\n}\nexport function boundRotate(\n    vec: number[],\n    boundPos: number,\n    index: number,\n) {\n    const r = getDistSize(vec);\n    const nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n\n    return [nextPos, -nextPos].sort((a, b) => {\n        return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n    }).map(pos => {\n        return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n    });\n}\n\nexport function checkRotateBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, SnappableState>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    if (!moveable.props.bounds) {\n        return [];\n    }\n    const rad = rotation * Math.PI / 180;\n\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = right - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = bottom - origin[1];\n    const boundRect = {\n        left: relativeLeft,\n        top: relativeTop,\n        right: relativeRight,\n        bottom: relativeBottom,\n    };\n\n    if (!isBoundRotate(nextPoses, boundRect, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    [\n        [relativeLeft, 0],\n        [relativeRight, 0],\n        [relativeTop, 1],\n        [relativeBottom, 1],\n    ].forEach(([boundPos, index]) => {\n        nextPoses.forEach(nextPos => {\n            const relativeRad1 = getRad([0, 0], nextPos);\n\n            result.push(...boundRotate(nextPos, boundPos, index)\n                .map(relativeRad2 => rad + relativeRad2 - relativeRad1)\n                .filter(nextRad => !isBoundRotate(prevPoses, boundRect, nextRad))\n                .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n        });\n    });\n\n    return result;\n}\n","import { throttle } from \"@daybrush/utils\";\nimport {\n    RenderGuidelineInfo, Renderer, RenderGuidelineInnerInfo,\n    MoveableManagerInterface, SnappableProps, SnapGuideline,\n    SnappableRenderType, SnappableState,\n    SnapDirectionPoses,\n} from \"../../types\";\nimport { prefix, groupBy } from \"../../utils\";\nimport { HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP } from \"./utils\";\n\nexport function renderGuideline(info: RenderGuidelineInfo, React: Renderer): any {\n    const { direction, classNames, size, pos, zoom, key } = info;\n    const isHorizontal = direction === \"horizontal\";\n    const scaleType = isHorizontal ? \"Y\" : \"X\";\n    // const scaleType2 = isHorizontal ? \"Y\" : \"X\";\n\n    return React.createElement(\"div\", {\n        key,\n        className: classNames.join(\" \"),\n        style: {\n            [isHorizontal ? \"width\" : \"height\"]: `${size}`,\n            transform: `translate(${pos[0]}, ${pos[1]}) translate${scaleType}(-50%) scale${scaleType}(${zoom})`,\n        },\n    });\n}\n\nexport function renderInnerGuideline(info: RenderGuidelineInnerInfo, React: Renderer): any {\n    return renderGuideline({\n        ...info,\n        classNames: [\n            prefix(\"line\", \"guideline\", info.direction),\n            ...info.classNames,\n        ].filter(className => className) as string[],\n        size: info.size || `${info.sizeValue}px`,\n        pos: info.pos || info.posValue.map(v => `${throttle(v, 0.1)}px`),\n    }, React);\n}\n\nexport function renderSnapPoses(\n    moveable: MoveableManagerInterface,\n    direction: string,\n    snapPoses: SnappableRenderType[],\n    minPos: number,\n    targetPos: number,\n    size: number,\n    index: number,\n    React: Renderer\n) {\n    const { zoom } = moveable.props;\n    return snapPoses.map(({ type, pos }, i) => {\n        const renderPos = [0, 0];\n\n        renderPos[index] = minPos;\n        renderPos[index ? 0 : 1] = -targetPos + pos;\n\n        return renderInnerGuideline(\n            {\n                key: `${direction}TargetGuideline${i}`,\n                classNames: [prefix(\"target\", \"bold\", type)],\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n                direction: direction,\n            },\n            React\n        );\n    });\n}\nexport function renderGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer\n): any[] {\n    const { zoom, isDisplayInnerSnapDigit } = moveable.props;\n\n    const mainNames = type === \"horizontal\" ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[mainNames.start]!;\n    const targetEnd = targetRect[mainNames.end]!;\n    return guidelines.filter(({ hide, elementRect }) => {\n        if (hide) {\n            return false;\n        }\n        if (isDisplayInnerSnapDigit && elementRect) {\n            // inner\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.start]! <= targetStart && targetEnd <= rect[mainNames.end]!) {\n                return false;\n            }\n        }\n        return true;\n    }).map((guideline, i) => {\n        const { pos, size, element, className } = guideline;\n\n        const renderPos = [\n            -targetPos[0] + pos[0],\n            -targetPos[1] + pos[1],\n        ];\n\n        return renderInnerGuideline(\n            {\n                key: `${type}-default-guideline-${i}`,\n                classNames: element ? [prefix(\"bold\"), className] : [prefix(\"normal\"), className],\n                direction: type,\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n            },\n            React\n        );\n    });\n}\n\nexport function renderDigitLine(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    type: \"vertical\" | \"horizontal\",\n    lineType: \"dashed\" | \"gap\",\n    index: number,\n    gap: number,\n    renderPos: number[],\n    className: string | undefined,\n    React: Renderer,\n): any {\n    const {\n        snapDigit = 0,\n        isDisplaySnapDigit = true,\n        snapDistFormat = (v: number, type: \"vertical\" | \"horizontal\") => {\n            // Type can be used render different values.\n            if (type === 'vertical') {\n                return v;\n            }\n            return v;\n        },\n        zoom,\n    } = moveable.props;\n    const scaleType = type === \"horizontal\" ? \"X\" : \"Y\";\n    const sizeName = type === \"vertical\" ? \"height\" : \"width\";\n    const absGap = Math.abs(gap!);\n    const snapSize = isDisplaySnapDigit\n        ? parseFloat(absGap.toFixed(snapDigit))\n        : 0;\n    return <div\n        key={`${type}-${lineType}-guideline-${index}`}\n        className={prefix(\"guideline-group\", type)}\n        style={{\n            left: `${renderPos[0]}px`,\n            top: `${renderPos[1]}px`,\n            [sizeName]: `${absGap}px`,\n        }}\n    >\n        {renderInnerGuideline(\n            {\n                direction: type,\n                classNames: [prefix(lineType), className],\n                size: \"100%\",\n                posValue: [0, 0],\n                sizeValue: absGap,\n                zoom: zoom!,\n            },\n            React\n        )}\n        <div\n            className={prefix(\"size-value\", \"gap\")}\n            style={{\n                transform: `translate${scaleType}(-50%) scale(${zoom})`,\n            }}\n        >\n            {snapSize > 0 ? snapDistFormat(snapSize, type) : \"\"}\n        </div>\n    </div>;\n}\n\nexport function groupByElementGuidelines(\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetRect: SnapDirectionPoses,\n    isDisplayInnerSnapDigit: boolean,\n) {\n    const index = type === \"vertical\" ? 0 : 1;\n    const otherIndex = type === \"vertical\" ? 1 : 0;\n    const names = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[names.start]!;\n    const targetEnd = targetRect[names.end]!;\n    return groupBy(guidelines, (guideline) => {\n        return guideline.pos[index];\n    }).map(nextGuidelines => {\n        const start: SnapGuideline[] = [];\n        const end: SnapGuideline[] = [];\n        const inner: SnapGuideline[] = [];\n\n        nextGuidelines.forEach(guideline => {\n            const element = guideline.element!;\n            const rect = guideline.elementRect!.rect;\n            if (rect[names.end]! < targetStart) {\n                start.push(guideline);\n            } else if (targetEnd < rect[names.start]!) {\n                end.push(guideline);\n            } else if (rect[names.start]! <= targetStart && targetEnd <= rect[names.end]! && isDisplayInnerSnapDigit) {\n                const pos = guideline.pos;\n                const elementRect1 = { element, rect: { ...rect, [names.end]: rect[names.start]! } };\n                const elementRect2 = { element, rect: { ...rect, [names.start]: rect[names.end]! } };\n                const nextPos1 = [0, 0];\n                const nextPos2 = [0, 0];\n                nextPos1[index] = pos[index];\n                nextPos1[otherIndex] = pos[otherIndex];\n\n                nextPos2[index] = pos[index];\n                nextPos2[otherIndex] = pos[otherIndex] + guideline.size;\n\n\n                start.push({\n                    type,\n                    pos: nextPos1,\n                    size: 0,\n                    elementRect: elementRect1,\n                });\n                end.push({\n                    type,\n                    pos: nextPos2,\n                    size: 0,\n                    elementRect: elementRect2,\n                });\n                // inner.push(guideline);\n            }\n        });\n\n        start.sort((a, b) => {\n            return b.pos[otherIndex] - a.pos[otherIndex];\n        });\n        end.sort((a, b) => {\n            return a.pos[otherIndex] - b.pos[otherIndex];\n        });\n        return {\n            total: nextGuidelines,\n            start,\n            end,\n            inner,\n        };\n    });\n}\nexport function renderDashedGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer,\n): any[] {\n    const {\n        isDisplayInnerSnapDigit,\n    } = moveable.props;\n    const rendered: any[] = [];\n\n    ([\"vertical\", \"horizontal\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type);\n        const index = type === \"vertical\" ? 1 : 0;\n        const otherIndex = index ? 0 : 1;\n\n        const groups = groupByElementGuidelines(type, nextGuidelines, targetRect, isDisplayInnerSnapDigit!);\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n\n        groups.forEach(({ total, start, end, inner }) => {\n            const sidePos = targetPos[otherIndex] + total[0].pos[otherIndex] - targetRect[sideNames.start]!;\n\n            let prevRect = targetRect;\n\n            start.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = prevRect[mainNames.start]! - nextRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.start]! - targetStart - size;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            prevRect = targetRect;\n            end.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = nextRect[mainNames.start]! - prevRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.end]! - targetStart;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            inner.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n\n                const size1 = targetStart - nextRect[mainNames.start]!;\n                const size2 = nextRect[mainNames.end]! - targetEnd;\n                const renderPos1 = [0, 0];\n                const renderPos2 = [0, 0];\n\n                renderPos1[index] = targetPos[index] - size1;\n                renderPos1[otherIndex] = sidePos;\n\n                renderPos2[index] = targetPos[index] + targetEnd - targetStart;\n                renderPos2[otherIndex] = sidePos;\n\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size1,\n                    renderPos1,\n                    guideline.className,\n                    React\n                ));\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size2,\n                    renderPos2,\n                    guideline.className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\nexport function renderGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: any\n): any[] {\n    const rendered: any[] = [];\n    ([\"horizontal\", \"vertical\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type).slice(0, 1);\n        const index = type === \"vertical\" ? 0 : 1;\n        const otherIndex = index ? 0 : 1;\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetSideStart = targetRect[sideNames.start]!;\n        const targetSideEnd = targetRect[sideNames.end]!;\n\n\n        nextGuidelines.forEach(({ gap, gapRects }) => {\n            const sideStartPos = Math.max(\n                targetSideStart,\n                ...gapRects!.map(({ rect }) => rect[sideNames.start]!),\n            );\n            const sideEndPos = Math.min(\n                targetSideEnd,\n                ...gapRects!.map(({ rect }) => rect[sideNames.end]!),\n            );\n            const sideCenterPos = (sideStartPos + sideEndPos) / 2;\n\n            if (sideStartPos === sideEndPos || sideCenterPos === (targetSideStart + targetSideEnd)/ 2) {\n                return;\n            }\n            gapRects!.forEach(({ rect, className }) => {\n                const renderPos = [targetPos[0], targetPos[1]];\n\n                if (rect[mainNames.end]! < targetStart) {\n                    renderPos[index] += rect[mainNames.end]! - targetStart;\n                } else if (targetEnd < rect[mainNames.start]!) {\n                    renderPos[index] += rect[mainNames.start]! - targetStart - gap!;\n                } else {\n                    return;\n                }\n\n                renderPos[otherIndex] += sideCenterPos - targetSideStart;\n                rendered.push(renderDigitLine(\n                    moveable,\n                    index ? \"vertical\" : \"horizontal\",\n                    \"gap\",\n                    rendered.length,\n                    gap!,\n                    renderPos,\n                    className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\n","import { getDist, getRad, IObject, TINY_NUM } from \"@daybrush/utils\";\nimport { minus } from \"@scena/matrix\";\nimport { getAbsolutePoses, getDistSize, getRect, maxOffset } from \"../../utils\";\nimport { getDragDist, getPosByDirection } from \"../../gesto/GestoUtils\";\nimport {\n    BoundInfo, SnapInfo, MoveableManagerInterface, SnappableProps,\n    SnappableState, SnapBoundInfo, SnapGuideline, BoundType, SnapOffsetInfo, DraggableProps,\n} from \"../../types\";\nimport { checkBoundKeepRatio, checkBoundPoses, getBounds } from \"./bounds\";\nimport { getInnerBoundDragInfo } from \"./innerBounds\";\nimport {\n    getNearestSnapGuidelineInfo, checkMoveableSnapPoses,\n    checkSnapPoses, checkSnapKeepRatio,\n} from \"./snap\";\nimport { hasGuidelines, getSnapDirections, splitSnapDirectionPoses } from \"./utils\";\n\ninterface DirectionSnapType<T> {\n    vertical: T;\n    horizontal: T;\n}\n\n\nexport function solveEquation(\n    pos1: number[],\n    pos2: number[],\n    snapOffset: number,\n    isVertical: boolean\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    if (!dx) {\n        // y = 0 * x + b\n        // only horizontal\n        if (!isVertical) {\n            return [0, snapOffset];\n        }\n        return [0, 0];\n    }\n    if (!dy) {\n        // only vertical\n        if (isVertical) {\n            return [snapOffset, 0];\n        }\n        return [0, 0];\n    }\n    // y = ax + b\n    const a = dy / dx;\n    const b = pos1[1] - a * pos1[0];\n\n    if (isVertical) {\n        // y = a * x + b\n        const y = a * (pos2[0] + snapOffset) + b;\n\n        return [snapOffset, y - pos2[1]];\n    } else {\n        // x = (y - b) / a\n        const x = (pos2[1] + snapOffset - b) / a;\n\n        return [x - pos2[0], snapOffset];\n    }\n}\n\n\nfunction solveNextOffset(\n    pos1: number[],\n    pos2: number[],\n    offset: number,\n    isVertical: boolean,\n    datas: IObject<any>\n) {\n    const sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\n\n    if (!sizeOffset) {\n        return {\n            isOutside: false,\n            offset: [0, 0],\n        };\n    }\n    const size = getDist(pos1, pos2);\n    const dist1 = getDist(sizeOffset, pos1);\n    const dist2 = getDist(sizeOffset, pos2);\n\n    const isOutside = dist1 > size || dist2 > size;\n    const [widthOffset, heightOffset] = getDragDist({\n        datas,\n        distX: sizeOffset[0],\n        distY: sizeOffset[1],\n    });\n\n    return {\n        offset: [widthOffset, heightOffset],\n        isOutside,\n    };\n}\n\nfunction getSnapBound(boundInfo: BoundInfo, snapInfo: SnapInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return getNearestSnapGuidelineInfo(snapInfo).offset;\n    }\n    return 0;\n}\n\n\nexport function checkThrottleDragRotate(\n    throttleDragRotate: number,\n    [distX, distY]: number[],\n    [isVerticalBound, isHorizontalBound]: boolean[],\n    [isVerticalSnap, isHorizontalSnap]: boolean[],\n    [verticalOffset, horizontalOffset]: number[]\n) {\n    let offsetX = -verticalOffset;\n    let offsetY = -horizontalOffset;\n\n    if (throttleDragRotate && distX && distY) {\n        offsetX = 0;\n        offsetY = 0;\n        const adjustPoses: number[][] = [];\n        if (isVerticalBound && isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalBound) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset]);\n        } else if (isVerticalSnap && isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalSnap) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset]);\n        }\n        if (adjustPoses.length) {\n            adjustPoses.sort((a, b) => {\n                return (\n                    getDistSize(minus([distX, distY], a)) -\n                    getDistSize(minus([distX, distY], b))\n                );\n            });\n            const adjustPos = adjustPoses[0];\n\n            if (adjustPos[0] && Math.abs(distX) > TINY_NUM) {\n                offsetX = -adjustPos[0];\n                offsetY =\n                    (distY * Math.abs(distX + offsetX)) / Math.abs(distX) -\n                    distY;\n            } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM) {\n                const prevDistY = distY;\n                offsetY = -adjustPos[1];\n                offsetX =\n                    (distX * Math.abs(distY + offsetY)) / Math.abs(prevDistY) -\n                    distX;\n            }\n            if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n                if (\n                    Math.abs(offsetX) > TINY_NUM &&\n                    Math.abs(offsetX) < Math.abs(verticalOffset)\n                ) {\n                    const scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else if (\n                    Math.abs(offsetY) > TINY_NUM &&\n                    Math.abs(offsetY) < Math.abs(horizontalOffset)\n                ) {\n                    const scale =\n                        Math.abs(horizontalOffset) / Math.abs(offsetY);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else {\n                    offsetX = maxOffset(-verticalOffset, offsetX);\n                    offsetY = maxOffset(-horizontalOffset, offsetY);\n                }\n            }\n        }\n    } else {\n        offsetX = distX || isVerticalBound ? -verticalOffset : 0;\n        offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\n    }\n    return [offsetX, offsetY];\n}\n\nexport function checkSnapBoundsDrag(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    distX: number,\n    distY: number,\n    throttleDragRotate: number,\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"draggable\")) {\n        return [\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n        ];\n    }\n    const poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\n    const { left, right, top, bottom } = getRect(poses);\n    const boundPoses = {\n        horizontal: poses.map((pos) => pos[1]),\n        vertical: poses.map((pos) => pos[0]),\n    };\n    const snapDirections = getSnapDirections(moveable.props.snapDirections);\n    const snapPoses = splitSnapDirectionPoses(snapDirections, {\n        left,\n        right,\n        top,\n        bottom,\n        center: (left + right) / 2,\n        middle: (top + bottom) / 2,\n    });\n    const {\n        vertical: verticalSnapBoundInfo,\n        horizontal: horizontalSnapBoundInfo,\n    } = checkMoveableSnapBounds(moveable, isRequest, snapPoses, boundPoses);\n    const {\n        vertical: verticalInnerBoundInfo,\n        horizontal: horizontalInnerBoundInfo,\n    } = getInnerBoundDragInfo(moveable, poses, datas);\n\n    const isVerticalSnap = verticalSnapBoundInfo.isSnap;\n    const isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n    const isVerticalBound =\n        verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\n    const isHorizontalBound =\n        horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\n    const verticalOffset = maxOffset(\n        verticalSnapBoundInfo.offset,\n        verticalInnerBoundInfo.offset\n    );\n    const horizontalOffset = maxOffset(\n        horizontalSnapBoundInfo.offset,\n        horizontalInnerBoundInfo.offset\n    );\n\n    const [offsetX, offsetY] = checkThrottleDragRotate(\n        throttleDragRotate,\n        [distX, distY],\n        [isVerticalBound, isHorizontalBound],\n        [isVerticalSnap, isHorizontalSnap],\n        [verticalOffset, horizontalOffset]\n    );\n\n    return [\n        {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            offset: offsetX,\n        },\n        {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            offset: offsetY,\n        },\n    ];\n}\n\nexport function checkMoveableSnapBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    isRequest: boolean,\n    poses: { vertical: number[]; horizontal: number[]; },\n    boundPoses: { vertical: number[]; horizontal: number[]; } = poses,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable),\n        boundPoses.vertical,\n        boundPoses.horizontal,\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? {\n        horizontal: { isSnap: false, index: -1 } as SnapInfo,\n        vertical: { isSnap: false, index: -1 } as SnapInfo,\n    } : checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n    );\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function checkSnapBounds(\n    guideines: SnapGuideline[],\n    bounds: BoundType | undefined | false,\n    posesX: number[],\n    posesY: number[],\n    snapThreshold: number,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(bounds, posesX, posesY);\n\n    // options.isRequest ? {\n    //     horizontal: { isSnap: false, index: -1 } as SnapInfo,\n    //     vertical: { isSnap: false, index: -1 } as SnapInfo,\n    // } :\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = checkSnapPoses(guideines, posesX, posesY, snapThreshold);\n\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\n\n\nfunction checkSnapRightLine(\n    startPos: number[],\n    endPos: number[],\n    snapBoundInfo: { vertical: SnapBoundInfo; horizontal: SnapBoundInfo },\n    keepRatio: boolean\n) {\n    const rad = (getRad(startPos, endPos) / Math.PI) * 180;\n    const {\n        vertical: {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            dist: verticalDist,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            dist: horizontalDist,\n        },\n    } = snapBoundInfo;\n\n    const rad180 = rad % 180;\n    const isHorizontalLine = rad180 < 3 || rad180 > 177;\n    const isVerticalLine = rad180 > 87 && rad180 < 93;\n\n    if (horizontalDist < verticalDist) {\n        if (\n            isVerticalBound ||\n            (isVerticalSnap &&\n                !isVerticalLine &&\n                (!keepRatio || !isHorizontalLine))\n        ) {\n            return \"vertical\";\n        }\n    }\n    if (\n        isHorizontalBound ||\n        (isHorizontalSnap &&\n            !isHorizontalLine &&\n            (!keepRatio || !isVerticalLine))\n    ) {\n        return \"horizontal\";\n    }\n    return \"\";\n}\n\n\nexport function getSnapBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    directions: number[][][],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    return directions.map(([startDirection, endDirection]) => {\n        const otherStartPos = getPosByDirection(poses, startDirection);\n        const otherEndPos = getPosByDirection(poses, endDirection);\n        const snapBoundInfo = keepRatio\n            ? checkSnapBoundsKeepRatio(\n                moveable,\n                otherStartPos,\n                otherEndPos,\n                isRequest\n            )\n            : checkMoveableSnapBounds(moveable, isRequest, {\n                vertical: [otherEndPos[0]],\n                horizontal: [otherEndPos[1]],\n            });\n\n        const {\n            horizontal: {\n                // dist: otherHorizontalDist,\n                offset: otherHorizontalOffset,\n                isBound: isOtherHorizontalBound,\n                isSnap: isOtherHorizontalSnap,\n            },\n            vertical: {\n                // dist: otherVerticalDist,\n                offset: otherVerticalOffset,\n                isBound: isOtherVerticalBound,\n                isSnap: isOtherVerticalSnap,\n            },\n        } = snapBoundInfo;\n\n        const multiple = minus(endDirection, startDirection);\n\n        if (!otherVerticalOffset && !otherHorizontalOffset) {\n            return {\n                isBound: isOtherVerticalBound || isOtherHorizontalBound,\n                isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n                sign: multiple,\n                offset: [0, 0],\n            };\n        }\n        const snapLine = checkSnapRightLine(\n            otherStartPos,\n            otherEndPos,\n            snapBoundInfo,\n            keepRatio\n        );\n\n        if (!snapLine) {\n            return {\n                sign: multiple,\n                isBound: false,\n                isSnap: false,\n                offset: [0, 0],\n            };\n        }\n\n        const isVertical = snapLine === \"vertical\";\n        let sizeOffset = [0, 0];\n\n        if (\n            !keepRatio\n            && Math.abs(endDirection[0]) === 1\n            && Math.abs(endDirection[1]) === 1\n            && startDirection[0] !== endDirection[0]\n            && startDirection[1] !== endDirection[1]\n        ) {\n            sizeOffset = getDragDist({\n                datas,\n                distX: -otherVerticalOffset,\n                distY: -otherHorizontalOffset,\n            });\n        } else {\n            sizeOffset = solveNextOffset(\n                otherStartPos,\n                otherEndPos,\n                -(isVertical ? otherVerticalOffset : otherHorizontalOffset),\n                isVertical,\n                datas,\n            ).offset;\n        }\n        sizeOffset = sizeOffset.map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n\n        return {\n            sign: multiple,\n            isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n            isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n            offset: sizeOffset,\n        };\n    });\n}\n\n\nfunction getSnapBoundOffset(boundInfo: BoundInfo, snapInfo: SnapOffsetInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return snapInfo.offset;\n    }\n    return 0;\n}\n\nexport function checkSnapBoundsKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n    isRequest: boolean\n): DirectionSnapType<SnapBoundInfo> {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundKeepRatio(moveable, startPos, endPos);\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? ({\n        horizontal: { isSnap: false },\n        vertical: { isSnap: false },\n    } as any) : checkSnapKeepRatio(moveable, startPos, endPos);\n\n    const horizontalOffset = getSnapBoundOffset(\n        horizontalBoundInfo,\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBoundOffset(\n        verticalBoundInfo,\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\n\nexport function checkMaxBounds(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    fixedPosition: number[],\n    datas: any\n) {\n    const fixedDirection = [-direction[0], -direction[1]];\n    const { width, height } = moveable.state;\n    const bounds = moveable.props.bounds;\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n\n    if (bounds) {\n        const directions = [\n            [direction[0], -direction[1]],\n            [-direction[0], direction[1]],\n        ];\n        const {\n            left = -Infinity,\n            top = -Infinity,\n            right = Infinity,\n            bottom = Infinity,\n        } = bounds;\n\n        directions.forEach((otherDirection) => {\n            const isCheckVertical = otherDirection[0] !== fixedDirection[0];\n            const isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n            const otherPos = getPosByDirection(poses, otherDirection);\n            const deg = (getRad(fixedPosition, otherPos) * 360) / Math.PI;\n\n            if (isCheckHorizontal) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 360) < 2 || Math.abs(deg - 180) < 2) {\n                    nextOtherPos[1] = fixedPosition[1];\n                }\n                const {\n                    offset: [, heightOffset],\n                    isOutside: isHeightOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[1] < otherPos[1] ? bottom : top) -\n                    otherPos[1],\n                    false,\n                    datas\n                );\n                if (!isNaN(heightOffset)) {\n                    maxHeight = height + (isHeightOutside ? 1 : -1) * Math.abs(heightOffset);\n                }\n            }\n            if (isCheckVertical) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 90) < 2 || Math.abs(deg - 270) < 2) {\n                    nextOtherPos[0] = fixedPosition[0];\n                }\n                const {\n                    offset: [widthOffset],\n                    isOutside: isWidthOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[0] < otherPos[0] ? right : left) - otherPos[0],\n                    true,\n                    datas\n                );\n                if (!isNaN(widthOffset)) {\n                    maxWidth = width + (isWidthOutside ? 1 : -1) * Math.abs(widthOffset);\n                }\n            }\n        });\n    }\n    return {\n        maxWidth,\n        maxHeight,\n    };\n}\n","import { isObject, throttle } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport { minus } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport {\n    MoveableManagerInterface, SnappableProps,\n    SnappableState, SnapGuideline, SnapDirectionPoses,\n    PosGuideline, ElementGuidelineValue,\n    SnapElementRect,\n} from \"../../types\";\nimport { getRect, getAbsolutePosesByState, getRefTarget, calculateInversePosition, roundSign } from \"../../utils\";\nimport {\n    splitSnapDirectionPoses, getSnapDirections,\n    HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP, calculateContainerPos,\n} from \"./utils\";\n\nexport function getTotalGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const state = moveable.state;\n    const {\n        containerClientRect,\n        hasFixed,\n    } = state;\n    const {\n        overflow,\n        scrollHeight: containerHeight,\n        scrollWidth: containerWidth,\n        clientHeight: containerClientHeight,\n        clientWidth: containerClientWidth,\n        clientLeft,\n        clientTop,\n    } = containerClientRect;\n    const {\n        snapGap = true,\n        verticalGuidelines,\n        horizontalGuidelines,\n        snapThreshold = 5,\n        snapGridWidth = 0,\n        snapGridHeight = 0,\n        maxSnapElementGuidelineDistance = Infinity,\n    } = moveable.props;\n    const { top, left, bottom, right } = getRect(getAbsolutePosesByState(moveable.state));\n    const targetRect = { top, left, bottom, right, center: (left + right) / 2, middle: (top + bottom) / 2 };\n    const elementGuidelines = getElementGuidelines(moveable);\n    let totalGuidelines: SnapGuideline[] = [...elementGuidelines];\n\n    if (snapGap) {\n        totalGuidelines.push(...getGapGuidelines(\n            moveable, targetRect, snapThreshold,\n        ));\n    }\n    totalGuidelines.push(...getGridGuidelines(\n        snapGridWidth,\n        snapGridHeight,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n    ));\n    const snapOffset = {\n        ...(state.snapOffset || {\n            left: 0,\n            top: 0,\n            bottom: 0,\n            right: 0,\n        }),\n    };\n\n\n    if (hasFixed) {\n        const { left, top } = containerClientRect;\n\n        snapOffset.left += left;\n        snapOffset.top += top;\n        snapOffset.right += left;\n        snapOffset.bottom += top;\n    }\n\n    totalGuidelines.push(...getDefaultGuidelines(\n        horizontalGuidelines || false,\n        verticalGuidelines || false,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n        snapOffset,\n    ));\n\n    totalGuidelines = totalGuidelines.filter(({ element, elementRect, type }) => {\n        if (!element || !elementRect) {\n            return true;\n        }\n        const rect = elementRect.rect;\n\n        return checkBetweenRects(targetRect, rect, type, maxSnapElementGuidelineDistance);\n    });\n\n    return totalGuidelines;\n}\n\nexport function getGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    targetRect: SnapDirectionPoses,\n    snapThreshold: number,\n) {\n    const {\n        maxSnapElementGuidelineDistance = Infinity,\n        maxSnapElementGapDistance = Infinity,\n    } = moveable.props;\n    const elementRects = moveable.state.elementRects;\n    const gapGuidelines: SnapGuideline[] = [];\n    [\n        [\"vertical\", VERTICAL_NAMES_MAP, HORIZONTAL_NAMES_MAP] as const,\n        [\"horizontal\", HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP] as const,\n    ].forEach(([type, mainNames, sideNames]) => {\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetCenter = targetRect[mainNames.center]!;\n        const targetStart2 = targetRect[sideNames.start]!;\n        const targetEnd2 = targetRect[sideNames.end]!;\n\n        // element : moveable\n        function getDist(elementRect: SnapElementRect) {\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.end]! < targetStart + snapThreshold) {\n                return targetStart - rect[mainNames.end]!;\n            } else if (targetEnd - snapThreshold < rect[mainNames.start]!) {\n                return rect[mainNames.start]! - targetEnd;\n            } else {\n                return -1;\n            }\n        }\n        const nextElementRects = elementRects.filter(elementRect => {\n            const rect = elementRect.rect;\n\n            if (rect[sideNames.start]! > targetEnd2 || rect[sideNames.end]! < targetStart2) {\n                return false;\n            }\n\n            return getDist(elementRect) > 0;\n        }).sort((a, b) => {\n            return getDist(a) - getDist(b);\n        });\n\n        const groups: SnapElementRect[][] = [];\n\n        nextElementRects.forEach(snapRect1 => {\n            nextElementRects.forEach(snapRect2 => {\n                if (snapRect1 === snapRect2) {\n                    return;\n                }\n                const { rect: rect1 } = snapRect1;\n                const { rect: rect2 } = snapRect2;\n\n                const rect1Start = rect1[sideNames.start]!;\n                const rect1End = rect1[sideNames.end]!;\n                const rect2Start = rect2[sideNames.start]!;\n                const rect2End = rect2[sideNames.end]!;\n\n                if (rect1Start > rect2End || rect2Start > rect1End) {\n                    return;\n                }\n\n                groups.push([snapRect1, snapRect2]);\n            });\n        });\n\n        groups.forEach(([snapRect1, snapRect2]) => {\n            const { rect: rect1 } = snapRect1;\n            const { rect: rect2 } = snapRect2;\n\n            const rect1Start = rect1[mainNames.start]!;\n            const rect1End = rect1[mainNames.end]!;\n            const rect2Start = rect2[mainNames.start]!;\n            const rect2End = rect2[mainNames.end]!;\n            let gap = 0;\n            let pos = 0;\n            let isStart = false;\n            let isCenter = false;\n            let isEnd = false;\n\n            if (rect1End <= targetStart && targetEnd <= rect2Start) {\n                // (l)element1(r) : (l)target(r) : (l)element2(r)\n                isCenter = true;\n                gap = ((rect2Start - rect1End) - (targetEnd - targetStart)) / 2;\n                pos = rect1End + gap + (targetEnd - targetStart) / 2;\n\n                if (Math.abs(pos - targetCenter) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && rect2End < targetStart + snapThreshold) {\n                // (l)element1(r) : (l)element2(r) : (l)target\n                isStart = true;\n\n                gap = rect2Start - rect1End;\n                pos = rect2End + gap;\n\n                if (Math.abs(pos - targetStart) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && targetEnd - snapThreshold < rect1Start) {\n                // target(r) : (l)element1(r) : (l)element2(r)\n\n                isEnd = true;\n                gap = rect2Start - rect1End;\n                pos = rect1Start - gap;\n\n                if (Math.abs(pos - targetEnd) > snapThreshold) {\n                    return;\n                }\n            } else {\n                return;\n            }\n            if (!gap) {\n                return;\n            }\n            if (!checkBetweenRects(targetRect, rect2, type, maxSnapElementGuidelineDistance)) {\n                return;\n            }\n            if (gap > maxSnapElementGapDistance) {\n                return;\n            }\n            gapGuidelines.push({\n                type,\n                pos: type === \"vertical\" ? [pos, 0] : [0, pos],\n                element: snapRect2.element,\n                size: 0,\n                className: snapRect2.className,\n                isStart,\n                isCenter,\n                isEnd,\n                gap,\n                hide: true,\n                gapRects: [snapRect1, snapRect2],\n            });\n        });\n    });\n    return gapGuidelines;\n}\nexport function getGridGuidelines(\n    snapGridWidth: number,\n    snapGridHeight: number,\n    containerWidth: number,\n    containerHeight: number,\n    clientLeft = 0,\n    clientTop = 0,\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n\n    if (snapGridHeight) {\n        for (let pos = 0; pos <= containerHeight; pos += snapGridHeight) {\n            guidelines.push({\n                type: \"horizontal\",\n                pos: [0, throttle(pos - clientTop, 0.1)],\n                size: containerWidth!,\n                hide: true,\n            });\n        }\n    }\n    if (snapGridWidth) {\n        for (let pos = 0; pos <= containerWidth; pos += snapGridWidth) {\n            guidelines.push({\n                type: \"vertical\",\n                pos: [throttle(pos - clientLeft, 0.1), 0],\n                size: containerHeight!,\n                hide: true,\n            });\n        }\n    }\n    return guidelines;\n}\n\nexport function checkBetweenRects(\n    rect1: SnapDirectionPoses,\n    rect2: SnapDirectionPoses,\n    type: \"horizontal\" | \"vertical\",\n    distance: number,\n) {\n    if (type === \"horizontal\") {\n        return Math.abs(rect1.right! - rect2.left!) <= distance\n            || Math.abs(rect1.left! - rect2.right!) <= distance\n            || rect1.left! <= rect2.right! && rect2.left! <= rect1.right!;\n    } else if (type === \"vertical\") {\n        return Math.abs(rect1.bottom! - rect2.top!) <= distance\n            || Math.abs(rect1.top! - rect2.bottom!) <= distance\n            || rect1.top! <= rect2.bottom! && rect2.top! <= rect1.bottom!;\n    }\n    return true;\n}\n\n\nexport function getElementGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const state = moveable.state;\n\n    const {\n        elementGuidelines = [],\n    } = moveable.props;\n\n    if (!elementGuidelines.length) {\n        state.elementRects = [];\n        return [];\n    }\n\n    const prevValues = (state.elementRects || []).filter(snapRect => !snapRect.refresh);\n    const nextElementGuidelines = elementGuidelines.map(el => {\n        if (isObject(el) && \"element\" in el) {\n            return {\n                ...el,\n                element: getRefTarget(el.element, true)!,\n            };\n        }\n        return {\n            element: getRefTarget(el, true)!,\n        };\n    }).filter(value => {\n        return value.element;\n    }) as ElementGuidelineValue[];\n\n    const {\n        maintained,\n        added,\n    } = diff(prevValues.map(v => v.element), nextElementGuidelines.map(v => v.element));\n\n\n    const nextValues: SnapElementRect[] = [];\n    maintained.forEach(([prevIndex, nextIndex]) => {\n        nextValues[nextIndex] = prevValues[prevIndex];\n    });\n\n    getSnapElementRects(moveable, added.map(index => nextElementGuidelines[index])).map((rect, i) => {\n        nextValues[added[i]] = rect;\n    });\n\n\n    state.elementRects = nextValues;\n    const elementSnapDirections = getSnapDirections(moveable.props.elementSnapDirections);\n    const nextGuidelines: SnapGuideline[] = [];\n\n    nextValues.forEach(snapRect => {\n        const {\n            element,\n            top: topValue = elementSnapDirections.top,\n            left: leftValue = elementSnapDirections.left,\n            right: rightValue = elementSnapDirections.right,\n            bottom: bottomValue = elementSnapDirections.bottom,\n            center: centerValue = elementSnapDirections.center,\n            middle: middleValue = elementSnapDirections.middle,\n            className,\n            rect,\n        } = snapRect;\n        const {\n            horizontal,\n            vertical,\n        } = splitSnapDirectionPoses({\n            top: topValue,\n            right: rightValue,\n            left: leftValue,\n            bottom: bottomValue,\n            center: centerValue,\n            middle: middleValue,\n        }, rect);\n        const rectTop = rect.top!;\n        const rectLeft = rect.left!;\n        const width = rect.right! - rectLeft;\n        const height = rect.bottom! - rectTop;\n        const sizes = [width, height];\n\n        vertical.forEach(pos => {\n            nextGuidelines.push({\n                type: \"vertical\", element, pos: [\n                    throttle(pos, 0.1),\n                    rectTop,\n                ], size: height,\n                sizes,\n                className,\n                elementRect: snapRect,\n            });\n        });\n        horizontal.forEach(pos => {\n            nextGuidelines.push({\n                type: \"horizontal\", element, pos: [\n                    rectLeft,\n                    throttle(pos, 0.1),\n                ], size: width,\n                sizes,\n                className,\n                elementRect: snapRect,\n            });\n        });\n    });\n\n    return nextGuidelines;\n}\n\n\nexport function getDefaultGuidelines(\n    horizontalGuidelines: Array<PosGuideline | number> | false,\n    verticalGuidelines: Array<PosGuideline | number> | false,\n    width: number,\n    height: number,\n    clientLeft = 0,\n    clientTop = 0,\n    snapOffset = { left: 0, top: 0, right: 0, bottom: 0 },\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n    const {\n        left: snapOffsetLeft,\n        top: snapOffsetTop,\n        bottom: snapOffsetBottom,\n        right: snapOffsetRight,\n    } = snapOffset;\n    const snapWidth = width! + snapOffsetRight - snapOffsetLeft;\n    const snapHeight = height! + snapOffsetBottom - snapOffsetTop;\n\n    horizontalGuidelines && horizontalGuidelines!.forEach(posInfo => {\n        const nextPosInfo = isObject(posInfo) ? posInfo : { pos: posInfo };\n\n        guidelines.push({\n            type: \"horizontal\",\n            pos: [\n                snapOffsetLeft,\n                throttle(nextPosInfo.pos - clientTop + snapOffsetTop, 0.1),\n            ],\n            size: snapWidth,\n            className: nextPosInfo.className,\n        });\n    });\n    verticalGuidelines && verticalGuidelines!.forEach(posInfo => {\n        const nextPosInfo = isObject(posInfo) ? posInfo : { pos: posInfo };\n\n        guidelines.push({\n            type: \"vertical\",\n            pos: [\n                throttle(nextPosInfo.pos - clientLeft + snapOffsetLeft, 0.1),\n                snapOffsetTop,\n            ],\n            size: snapHeight,\n            className: nextPosInfo.className,\n        });\n    });\n    return guidelines;\n}\n\n\n\nexport function getSnapElementRects(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    values: ElementGuidelineValue[],\n): SnapElementRect[] {\n    if (!values.length) {\n        return [];\n    }\n    const state = moveable.state;\n    const {\n        containerClientRect,\n        targetClientRect: {\n            top: clientTop,\n            left: clientLeft,\n        },\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n    const [containerLeft, containerTop] = calculateContainerPos(rootMatrix, containerClientRect, n);\n    const poses = getAbsolutePosesByState(state);\n    const {\n        minX: targetLeft,\n        minY: targetTop,\n    } = getMinMaxs(poses);\n    const [distLeft, distTop] = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [\n        clientLeft - containerLeft,\n        clientTop - containerTop,\n    ], n)).map(pos => roundSign(pos));\n\n    return values.map(value => {\n        const rect = value.element.getBoundingClientRect();\n        const left = rect.left - containerLeft;\n        const top = rect.top - containerTop;\n        const bottom = top + rect.height;\n        const right = left + rect.width;\n        const [elementLeft, elementTop] = calculateInversePosition(rootMatrix, [left, top], n);\n        const [elementRight, elementBottom] = calculateInversePosition(rootMatrix, [right, bottom], n);\n\n        return {\n            ...value,\n            rect: {\n                left: elementLeft + distLeft,\n                right: elementRight + distLeft,\n                top: elementTop + distTop,\n                bottom: elementBottom + distTop,\n                center: (elementLeft + elementRight) / 2 + distLeft,\n                middle: (elementTop + elementBottom) / 2 + distTop,\n            },\n        };\n    });\n}\n\n","import {\n    Renderer,\n    SnappableProps,\n    SnappableState,\n    SnapGuideline,\n    SnapInfo,\n    ScalableProps,\n    SnapPosInfo,\n    RotatableProps,\n    RectInfo,\n    MoveableManagerInterface,\n    SnappableRenderType,\n    BoundType,\n    MoveableGroupInterface,\n} from \"../types\";\nimport {\n    prefix,\n    calculatePoses,\n    getRect,\n    getAbsolutePosesByState,\n    getAbsolutePoses,\n    getClientRect,\n    getRefTarget,\n    getDragDistByState,\n    triggerEvent,\n    getDirectionCondition,\n} from \"../utils\";\nimport {\n    findIndex, hasClass, throttle,\n} from \"@daybrush/utils\";\nimport {\n    getDragDist,\n    scaleMatrix,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { minus, rotate, plus } from \"@scena/matrix\";\nimport { dragControlCondition as rotatableDragControlCondtion } from \"./Rotatable\";\nimport { FLOAT_POINT_NUM } from \"../consts\";\nimport {\n    getInnerBoundInfo,\n    getCheckInnerBoundLineInfos,\n    checkRotateInnerBounds,\n    checkInnerBoundPoses,\n} from \"./snappable/innerBounds\";\nimport {\n    checkBoundPoses,\n    checkRotateBounds,\n    getBounds,\n} from \"./snappable/bounds\";\nimport {\n    checkSnaps,\n    getSnapInfosByDirection,\n    getNearOffsetInfo,\n    getCheckSnapDirections,\n} from \"./snappable/snap\";\nimport {\n    renderSnapPoses,\n    renderGuidelines,\n    renderDashedGuidelines,\n    renderGapGuidelines,\n} from \"./snappable/render\";\nimport {\n    hasGuidelines,\n} from \"./snappable/utils\";\nimport {\n    checkMaxBounds,\n    checkMoveableSnapBounds,\n    getSnapBoundInfo,\n} from \"./snappable/snapBounds\";\nimport { getTotalGuidelines } from \"./snappable/getTotalGuidelines\";\n\n\nexport interface SnapPoses {\n    vertical: number[];\n    horizontal: number[];\n}\n\nexport function checkSnapInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n) {\n    const state = moveable.state;\n    const container = state.container;\n    const snapContainer = moveable.props.snapContainer || container!;\n\n    if (state.snapContainer === snapContainer && state.guidelines && state.guidelines.length) {\n        return false;\n    }\n\n    const containerClientRect = state.containerClientRect;\n    const snapOffset = {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0,\n    };\n\n    if (container !== snapContainer) {\n        const snapContainerTarget = getRefTarget(snapContainer, true);\n\n        if (snapContainerTarget) {\n            const snapContainerRect = getClientRect(snapContainerTarget);\n            const offset1 = getDragDistByState(state, [\n                snapContainerRect.left - containerClientRect.left,\n                snapContainerRect.top - containerClientRect.top,\n            ]);\n            const offset2 = getDragDistByState(state, [\n                snapContainerRect.right - containerClientRect.right,\n                snapContainerRect.bottom - containerClientRect.bottom,\n            ]);\n\n            snapOffset.left = throttle(offset1[0], 0.00001);\n            snapOffset.top = throttle(offset1[1], 0.00001);\n            snapOffset.right = throttle(offset2[0], 0.00001);\n            snapOffset.bottom = throttle(offset2[1], 0.00001);\n        }\n    }\n\n    state.snapContainer = snapContainer;\n    state.snapOffset = snapOffset;\n    state.guidelines = getTotalGuidelines(moveable);\n    state.enableSnap = true;\n    return true;\n}\n\nfunction getNextFixedPoses(\n    matrix: number[],\n    width: number,\n    height: number,\n    fixedDirection: number[],\n    fixedPos: number[],\n    is3d: boolean\n) {\n    const nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\n    const nextFixedPos = getPosByDirection(nextPoses, fixedDirection);\n\n    return getAbsolutePoses(nextPoses, minus(fixedPos, nextFixedPos));\n}\n\nexport function normalized(value: number) {\n    return value ? value / Math.abs(value) : 0;\n}\n\n\nexport function getSizeOffsetInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    const { fixedDirection } = datas;\n    const directions = getCheckSnapDirections(direction, fixedDirection, keepRatio);\n    const innerBoundLineInfos = getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio);\n    const offsets = [\n        ...getSnapBoundInfo(\n            moveable,\n            poses,\n            directions,\n            keepRatio,\n            isRequest,\n            datas\n        ),\n        ...getInnerBoundInfo(\n            moveable,\n            innerBoundLineInfos,\n            datas\n        ),\n    ];\n    const widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n    const heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n\n    return {\n        width: {\n            isBound: widthOffsetInfo.isBound,\n            offset: widthOffsetInfo.offset[0],\n        },\n        height: {\n            isBound: heightOffsetInfo.isBound,\n            offset: heightOffsetInfo.offset[1],\n        },\n    };\n}\nexport function recheckSizeByTwoDirection(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    width: number,\n    height: number,\n    maxWidth: number,\n    maxHeight: number,\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const snapPos = getPosByDirection(poses, direction);\n\n    const {\n        horizontal: { offset: horizontalOffset },\n        vertical: { offset: verticalOffset },\n    } = checkMoveableSnapBounds(moveable, isRequest, {\n        vertical: [snapPos[0]],\n        horizontal: [snapPos[1]],\n    });\n\n    if (verticalOffset || horizontalOffset) {\n        const [nextWidthOffset, nextHeightOffset] = getDragDist({\n            datas,\n            distX: -verticalOffset,\n            distY: -horizontalOffset,\n        });\n        const nextWidth = Math.min(\n            maxWidth || Infinity,\n            width + direction[0] * nextWidthOffset\n        );\n        const nextHeight = Math.min(\n            maxHeight || Infinity,\n            height + direction[1] * nextHeightOffset\n        );\n\n        return [nextWidth - width, nextHeight - height];\n    }\n    return [0, 0];\n}\nexport function checkSizeDist(\n    moveable: MoveableManagerInterface<any, any>,\n    getNextPoses: (widthOffset: number, heightOffset: number) => number[][],\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const poses = getAbsolutePosesByState(moveable.state);\n    const keepRatio = moveable.props.keepRatio;\n\n    let widthOffset = 0;\n    let heightOffset = 0;\n\n    for (let i = 0; i < 2; ++i) {\n        const nextPoses = getNextPoses(widthOffset, heightOffset);\n        const {\n            width: widthOffsetInfo,\n            height: heightOffsetInfo,\n        } = getSizeOffsetInfo(\n            moveable,\n            nextPoses,\n            direction,\n            keepRatio,\n            isRequest,\n            datas\n        );\n\n        const isWidthBound = widthOffsetInfo.isBound;\n        const isHeightBound = heightOffsetInfo.isBound;\n        let nextWidthOffset = widthOffsetInfo.offset;\n        let nextHeightOffset = heightOffsetInfo.offset;\n\n        if (i === 1) {\n            if (!isWidthBound) {\n                nextWidthOffset = 0;\n            }\n            if (!isHeightBound) {\n                nextHeightOffset = 0;\n            }\n        }\n        if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n            return [0, 0];\n        }\n        if (keepRatio) {\n            const widthDist =\n                Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n            const heightDist =\n                Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n            const isGetWidthOffset =\n                isWidthBound && isHeightBound\n                    ? widthDist < heightDist\n                    : isHeightBound ||\n                    (!isWidthBound && widthDist < heightDist);\n            if (isGetWidthOffset) {\n                // width : height = ? : heightOffset\n                nextWidthOffset = (width * nextHeightOffset) / height;\n            } else {\n                // width : height = widthOffset : ?\n                nextHeightOffset = (height * nextWidthOffset) / width;\n            }\n        }\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    if (direction[0] && direction[1]) {\n        const { maxWidth, maxHeight } = checkMaxBounds(\n            moveable,\n            poses,\n            direction,\n            fixedPosition,\n            datas\n        );\n\n        const [nextWidthOffset, nextHeightOffset] = recheckSizeByTwoDirection(\n            moveable,\n            getNextPoses(widthOffset, heightOffset).map(pos => pos.map(p => throttle(p, FLOAT_POINT_NUM))),\n            width + widthOffset,\n            height + heightOffset,\n            maxWidth,\n            maxHeight,\n            direction,\n            isRequest,\n            datas\n        );\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    return [widthOffset, heightOffset];\n}\n\nexport function checkSnapRotate(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    rect: RectInfo,\n    rotation: number\n) {\n    if (!hasGuidelines(moveable, \"rotatable\")) {\n        return {\n            isSnap: false,\n            rotation,\n        };\n    }\n\n    const { pos1, pos2, pos3, pos4, origin: origin2 } = rect;\n    const rad = (rotation * Math.PI) / 180;\n    const prevPoses = [pos1, pos2, pos3, pos4].map((pos) => minus(pos, origin2));\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n    // console.log(moveable.state.left, moveable.state.top, moveable.state.origin);\n    // console.log(pos1, pos2, pos3, pos4, origin, rad, prevPoses, nextPoses);\n    const result = [\n        ...checkRotateBounds(moveable, prevPoses, nextPoses, origin2, rotation),\n        ...checkRotateInnerBounds(\n            moveable,\n            prevPoses,\n            nextPoses,\n            origin2,\n            rotation\n        ),\n    ];\n    result.sort((a, b) => Math.abs(a - rotation) - Math.abs(b - rotation));\n    const isSnap = result.length > 0;\n\n    return {\n        isSnap,\n        rotation: isSnap ? result[0] : rotation,\n    };\n}\nexport function checkSnapResize(\n    moveable: MoveableManagerInterface<{}, {}>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"resizable\")) {\n        return [0, 0];\n    }\n    const { fixedDirection, nextAllMatrix } = datas;\n    const { allMatrix, is3d } = moveable.state;\n\n    return checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                nextAllMatrix || allMatrix,\n                width + widthOffset,\n                height + heightOffset,\n                fixedDirection,\n                fixedPosition,\n                is3d\n            );\n        },\n        width,\n        height,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n}\nexport function checkSnapScale(\n    moveable: MoveableManagerInterface<ScalableProps, any>,\n    scale: number[],\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"scalable\")) {\n        return [0, 0];\n    }\n    const { startOffsetWidth, startOffsetHeight, fixedPosition, fixedDirection, is3d } = datas;\n    const sizeDist = checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                scaleMatrix(\n                    datas,\n                    plus(scale, [widthOffset / startOffsetWidth, heightOffset / startOffsetHeight]),\n                ),\n                startOffsetWidth,\n                startOffsetHeight,\n                fixedDirection,\n                fixedPosition,\n                is3d\n            );\n        },\n        startOffsetWidth,\n        startOffsetHeight,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n    return [sizeDist[0] / startOffsetWidth, sizeDist[1] / startOffsetHeight];\n}\n\nexport function startCheckSnapDrag(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: any\n) {\n    datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\n\n\n\nfunction getSnapGuidelines(posInfos: SnapPosInfo[]) {\n    const guidelines: SnapGuideline[] = [];\n\n    posInfos.forEach((posInfo) => {\n        posInfo.guidelineInfos.forEach(({ guideline }) => {\n            if (guidelines.indexOf(guideline) > -1) {\n                return;\n            }\n            guidelines.push(guideline);\n        });\n    });\n\n    return guidelines;\n}\n\nfunction addBoundGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n    verticalSnapPoses: SnappableRenderType[],\n    horizontalSnapPoses: SnappableRenderType[],\n    externalBounds?: BoundType | false | null\n) {\n    const {\n        vertical: verticalBoundInfos,\n        horizontal: horizontalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable, externalBounds),\n        verticalPoses,\n        horizontalPoses\n    );\n    verticalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            verticalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    horizontalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            horizontalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    const {\n        vertical: verticalInnerBoundPoses,\n        horizontal: horizontalInnerBoundPoses,\n    } = checkInnerBoundPoses(moveable);\n\n    verticalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                verticalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        verticalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n\n    horizontalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                horizontalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        horizontalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n}\n\nconst directionCondition = getDirectionCondition(\"\", [\"resizable\", \"scalable\"]);\n\n/**\n * @namespace Moveable.Snappable\n * @description Whether or not target can be snapped to the guideline. (default: false)\n * @sort 2\n */\nexport default {\n    name: \"snappable\",\n    dragRelation: \"strong\",\n    props: {\n        snappable: [Boolean, Array],\n        snapContainer: Object,\n\n        snapDirections: [Boolean, Object],\n        elementSnapDirections: [Boolean, Object],\n\n        snapGap: Boolean,\n        snapGridWidth: Number,\n        snapGridHeight: Number,\n        isDisplaySnapDigit: Boolean,\n        isDisplayInnerSnapDigit: Boolean,\n        snapDigit: Number,\n        snapThreshold: Number,\n        snapRenderThreshold: Number,\n\n        horizontalGuidelines: Array,\n        verticalGuidelines: Array,\n        elementGuidelines: Array,\n\n        bounds: Object,\n        innerBounds: Object,\n        snapDistFormat: Function,\n\n\n        maxSnapElementGuidelineDistance: Number,\n        maxSnapElementGapDistance: Number,\n    } as const,\n    events: {\n        onSnap: \"snap\",\n    } as const,\n    css: [\n        `:host {\n    --bounds-color: #d66;\n}\n.guideline {\n    pointer-events: none;\n    z-index: 2;\n}\n.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}\n.guideline-group {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.guideline-group .size-value {\n    position: absolute;\n    color: #f55;\n    font-size: 12px;\n    font-weight: bold;\n}\n.guideline-group.horizontal .size-value {\n    transform-origin: 50% 100%;\n    transform: translateX(-50%);\n    left: 50%;\n    bottom: 5px;\n}\n.guideline-group.vertical .size-value {\n    transform-origin: 0% 50%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 5px;\n}\n.guideline.gap {\n    background: #f55;\n}\n.size-value.gap {\n    color: #f55;\n}\n`,\n    ],\n    render(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        React: Renderer\n    ): any[] {\n        const state = moveable.state;\n        const {\n            top: targetTop,\n            left: targetLeft,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            snapRenderInfo,\n        } = state;\n        const {\n            snapRenderThreshold = 1,\n        } = moveable.props;\n\n        if (!snapRenderInfo || !hasGuidelines(moveable, \"\")) {\n            return [];\n        }\n        state.guidelines = getTotalGuidelines(moveable);\n\n\n        const minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n        const minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n        const externalPoses = snapRenderInfo.externalPoses || [];\n        const poses = getAbsolutePosesByState(moveable.state);\n        const verticalSnapPoses: SnappableRenderType[] = [];\n        const horizontalSnapPoses: SnappableRenderType[] = [];\n        const verticalGuidelines: SnapGuideline[] = [];\n        const horizontalGuidelines: SnapGuideline[] = [];\n        const snapInfos: Array<{\n            vertical: SnapInfo;\n            horizontal: SnapInfo;\n        }> = [];\n        const { width, height, top, left, bottom, right } = getRect(poses);\n        const targetRect = { left, right, top, bottom, center: (left + right) / 2, middle: (top + bottom) / 2 };\n        const hasExternalPoses = externalPoses.length > 0;\n        const externalRect = hasExternalPoses\n            ? getRect(externalPoses)\n            : ({} as ReturnType<typeof getRect>);\n\n        if (!snapRenderInfo.request) {\n            if (snapRenderInfo.direction) {\n                snapInfos.push(\n                    getSnapInfosByDirection(\n                        moveable,\n                        poses,\n                        snapRenderInfo.direction,\n                        snapRenderThreshold,\n                    )\n                );\n            }\n            if (snapRenderInfo.snap) {\n                const rect = getRect(poses);\n                if (snapRenderInfo.center) {\n                    (rect as any).middle = (rect.top + rect.bottom) / 2;\n                    (rect as any).center = (rect.left + rect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, rect, snapRenderThreshold));\n            }\n            if (hasExternalPoses) {\n                if (snapRenderInfo.center) {\n                    (externalRect as any).middle =\n                        (externalRect.top + externalRect.bottom) / 2;\n                    (externalRect as any).center =\n                        (externalRect.left + externalRect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, externalRect, snapRenderThreshold));\n            }\n            snapInfos.forEach((snapInfo) => {\n                const {\n                    vertical: { posInfos: verticalPosInfos },\n                    horizontal: { posInfos: horizontalPosInfos },\n                } = snapInfo;\n                verticalSnapPoses.push(\n                    ...verticalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                horizontalSnapPoses.push(\n                    ...horizontalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                verticalGuidelines.push(...getSnapGuidelines(verticalPosInfos));\n                horizontalGuidelines.push(...getSnapGuidelines(horizontalPosInfos));\n            });\n        }\n\n        addBoundGuidelines(\n            moveable,\n            [left, right],\n            [top, bottom],\n            verticalSnapPoses,\n            horizontalSnapPoses\n        );\n        if (hasExternalPoses) {\n            addBoundGuidelines(\n                moveable,\n                [externalRect.left, externalRect.right],\n                [externalRect.top, externalRect.bottom],\n                verticalSnapPoses,\n                horizontalSnapPoses,\n                snapRenderInfo.externalBounds\n            );\n        }\n        const allGuidelines = [...verticalGuidelines, ...horizontalGuidelines];\n        const elementGuidelines = allGuidelines.filter(guideline => guideline.element && !guideline.gapRects);\n        const gapGuidelines = allGuidelines.filter(guideline => guideline.gapRects).sort((a, b) => {\n            return a.gap! - b.gap!;\n        });\n\n        triggerEvent(\n            moveable,\n            \"onSnap\",\n            {\n                guidelines: allGuidelines.filter(({ element }) => !element),\n                elements: elementGuidelines,\n                gaps: gapGuidelines,\n            },\n            true\n        );\n        return [\n            ...renderDashedGuidelines(\n                moveable,\n                elementGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGapGuidelines(\n                moveable,\n                gapGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"horizontal\",\n                horizontalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"vertical\",\n                verticalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"horizontal\",\n                horizontalSnapPoses,\n                minLeft,\n                targetTop,\n                width,\n                0,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"vertical\",\n                verticalSnapPoses,\n                minTop,\n                targetLeft,\n                height,\n                1,\n                React\n            ),\n        ];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        e: any\n    ) {\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            snap: true,\n            center: true,\n        };\n        checkSnapInfo(moveable);\n    },\n    drag(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        const state = moveable.state;\n        if (!checkSnapInfo(moveable)) {\n            state.guidelines = getTotalGuidelines(moveable);\n        }\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragControlCondition(moveable: MoveableManagerInterface, e: any) {\n        if (directionCondition(moveable, e) || rotatableDragControlCondtion(moveable, e)) {\n            return true;\n        }\n        if (!e.isRequest && e.inputEvent) {\n            return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n        }\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        checkSnapInfo(moveable);\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupStart(moveable: any, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroup(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupControlStart(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        checkSnapInfo(moveable);\n    },\n    dragGroupControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupControlEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    unset(moveable: any) {\n        const state = moveable.state;\n\n        state.enableSnap = false;\n        state.guidelines = [];\n        state.snapRenderInfo = null;\n        state.elementRects = [];\n    },\n};\n\n\n/**\n * Whether or not target can be snapped to the guideline. (default: false)\n * @name Moveable.Snappable#snappable\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snappable = true;\n */\n/**\n *  A snap container that is the basis for snap, bounds, and innerBounds. (default: null = container)\n * @name Moveable.Snappable#snapContainer\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.querySelector(\".container\"));\n *\n * moveable.snapContainer = document.body;\n */\n/**\n * You can specify the directions to snap to the target. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#snapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapDirections: true,\n * });\n * // snap center\n * moveable.snapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n\n/**\n * You can specify the snap directions of elements. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#elementSnapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   elementSnapDirections: true,\n * });\n * // snap center\n * moveable.elementSnapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n/**\n * When you drag, make the gap snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapGap\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapElement: true,\n *   snapGap: true,\n * });\n *\n * moveable.snapGap = false;\n */\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable.Snappable#snapThreshold\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable.Snappable#horizontalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable.Snappable#verticalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidelines = [100, 200, 500];\n */\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable.Snappable#elementGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n/**\n * You can set up boundaries.\n * @name Moveable.Snappable#bounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n/**\n * You can set up inner boundaries.\n * @name Moveable.Snappable#innerBounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\n */\n/**\n * snap distance digits (default: 0)\n * @name Moveable.Snappable#snapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapDigit = 0\n */\n\n/**\n * If width size is greater than 0, you can vertical snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridWidth\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridWidth = 5;\n */\n\n/**\n * If height size is greater than 0, you can horizontal snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridHeight\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridHeight = 5;\n */\n/**\n * Whether to show snap distance (default: true)\n * @name Moveable.Snappable#isDisplaySnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplaySnapDigit = true;\n */\n\n/**\n * Whether to show element inner snap distance (default: false)\n * @name Moveable.Snappable#isDisplayInnerSnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplayInnerSnapDigit = true;\n */\n\n\n/**\n * You can set the text format of the distance shown in the guidelines. (default: self)\n * @name Moveable.Snappable#snapDistFormat\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  snappable: true,\n *  snapDistFormat: (v, type) => v,\n * });\n * moveable.snapDistFormat = (v, type) => `${v}px`;\n */\n\n/**\n * When you drag or dragControl, the `snap` event is called.\n * @memberof Moveable.Snappable\n * @event snap\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     snappable: true\n * });\n * moveable.on(\"snap\", e => {\n *     console.log(\"onSnap\", e);\n * });\n */\n","import { prefix, getControlTransform, getLineStyle, getProps } from \"./utils\";\nimport {\n    Renderer, MoveableManagerInterface,\n    RenderDirections,\n} from \"./types\";\nimport { DIRECTION_INDEXES, DIRECTION_ROTATIONS, DIRECTIONS, DIRECTIONS4 } from \"./consts\";\nimport { IObject, throttle, getRad, getKeys } from \"@daybrush/utils\";\n\nexport interface DirectionControlInfo {\n    data: Record<string, any>;\n    classNames: string[];\n    dir: string;\n}\nexport function renderDirectionControlsByInfos(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    renderDirections: DirectionControlInfo[],\n    React: Renderer,\n): any[] {\n\n    const {\n        renderPoses,\n        rotation: rotationRad,\n        direction,\n    } = moveable.getState();\n    const {\n        zoom,\n    } = getProps(moveable.props, ableName as any);\n\n\n    const sign = (direction > 0 ? 1 : -1);\n    const degRotation = rotationRad / Math.PI * 180;\n    const directionMap: IObject<boolean> = {};\n\n    const renderState = moveable.renderState;\n    if (!renderState.renderDirectionMap) {\n        renderState.renderDirectionMap = {};\n    }\n    const renderDirectionMap = renderState.renderDirectionMap;\n\n    renderDirections.forEach(({ dir }) => {\n        directionMap[dir] = true;\n    });\n\n    return renderDirections.map(({ data, classNames, dir }) => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes || !directionMap[dir]) {\n            return null;\n        }\n        renderDirectionMap[dir] = true;\n        const directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        const dataAttrs: Record<string, string> = {};\n\n        getKeys(data).forEach(name => {\n            dataAttrs[`data-${name}`] = data[name];\n        });\n        return (\n            <div className={prefix(\"control\", \"direction\", dir, ableName, ...classNames)}\n                data-rotation={directionRotation}\n                data-direction={dir}\n                {...dataAttrs}\n                key={`direction-${dir}`}\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\nexport function renderDirectionControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    defaultDirections: string[],\n    ableName: string,\n    React: Renderer,\n): any[] {\n    const {\n        renderDirections: directions = defaultDirections,\n    } = getProps(moveable.props, ableName as any);\n\n    if (!directions) {\n        return [];\n    }\n    const renderDirections = directions === true ? DIRECTIONS : directions;\n\n    return renderDirectionControlsByInfos(\n        moveable,\n        ableName,\n        renderDirections.map(dir => {\n            return {\n                data: {},\n                classNames: [],\n                dir,\n            };\n        }),\n        React,\n    );\n}\nexport function renderAroundControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    React: Renderer,\n): any[] {\n    const renderState = moveable.renderState;\n    if (!renderState.renderDirectionMap) {\n        renderState.renderDirectionMap = {};\n    }\n    const {\n        renderPoses,\n        rotation: rotationRad,\n        direction,\n    } = moveable.getState();\n\n    const renderDirectionMap = renderState.renderDirectionMap;\n\n    const {\n        zoom,\n    } = moveable.props;\n    const sign = (direction > 0 ? 1 : -1);\n    const degRotation = rotationRad / Math.PI * 180;\n\n    return getKeys(renderDirectionMap).map(dir => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes) {\n            return null;\n        }\n        const directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        return (\n            <div className={prefix(\"around-control\")} data-rotation={directionRotation} data-direction={dir} key={`direction-around-${dir}`}\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\n\nexport function renderLine(\n    React: Renderer,\n    direction: string,\n    pos1: number[],\n    pos2: number[],\n    zoom: number,\n    key: number | string,\n    ...classNames: string[]\n): any {\n    const rad = getRad(pos1, pos2);\n    const rotation = direction ? (throttle(rad / Math.PI * 180, 15)) % 180 : -1;\n\n    return <div key={`line-${key}`}\n        className={prefix(\"line\", \"direction\", direction ? \"edge\" : \"\", direction, ...classNames)}\n        data-rotation={rotation}\n        data-line-key={key}\n        data-direction={direction} style={getLineStyle(pos1, pos2, zoom, rad)}></div>;\n}\n\nexport function renderEdgeLines(\n    React: Renderer,\n    ableName: string,\n    edge: true | string[],\n    poses: number[][],\n    zoom: number,\n): any[] {\n    const directions = edge === true ? DIRECTIONS4 : edge;\n\n    return directions.map((direction, i) => {\n        const [index1, index2] = DIRECTION_INDEXES[direction];\n\n        if (index2 == null) {\n            return;\n        }\n        return renderLine(React, direction, poses[index1], poses[index2], zoom, `${ableName}Edge${i}`, ableName);\n    }).filter(Boolean);\n}\nexport function getRenderDirections(ableName: string) {\n    return (\n        moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n        React: Renderer,\n    ) => {\n        const edge = getProps(moveable.props, ableName as any).edge;\n\n        if (edge && (edge === true || edge.length)) {\n            return [\n                ...renderEdgeLines(\n                    React,\n                    ableName,\n                    edge,\n                    moveable.getState().renderPoses,\n                    moveable.props.zoom!,\n                ),\n                ...renderDiagonalDirections(moveable, ableName, React),\n            ];\n        }\n        return renderAllDirections(moveable, ableName, React);\n    };\n}\nexport function renderAllDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    React: Renderer,\n) {\n    return renderDirectionControls(moveable, DIRECTIONS, ableName, React);\n}\nexport function renderDiagonalDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    React: Renderer,\n): any[] {\n    return renderDirectionControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], ableName, React);\n}\n","import {\n    setDragStart, getBeforeDragDist, getTransformDist,\n    convertTransformFormat, resolveTransformEvent, fillTransformStartEvent,\n    setDefaultTransformIndex, fillOriginalTransform,\n} from \"../gesto/GestoUtils\";\nimport {\n    triggerEvent, fillParams,\n    getDistSize, prefix,\n    fillEndParams,\n    fillCSSObject,\n} from \"../utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    DraggableProps, OnDrag, OnDragGroup,\n    OnDragGroupStart, OnDragStart, OnDragEnd, DraggableState,\n    Renderer, OnDragGroupEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { triggerChildGesto } from \"../groupUtils\";\nimport { startCheckSnapDrag } from \"./Snappable\";\nimport { IObject, getRad, throttle, throttleArray } from \"@daybrush/utils\";\nimport { checkSnapBoundsDrag } from \"./snappable/snapBounds\";\nimport { TINY_NUM } from \"../consts\";\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n * @description Draggable refers to the ability to drag and move targets.\n */\nexport default {\n    name: \"draggable\",\n    props: {\n        draggable: Boolean,\n        throttleDrag: Number,\n        throttleDragRotate: Number,\n        startDragRotate: Number,\n        edgeDraggable: Boolean,\n    } as const,\n    events: {\n        onDragStart: \"dragStart\",\n        onDrag: \"drag\",\n        onDragEnd: \"dragEnd\",\n        onDragGroupStart: \"dragGroupStart\",\n        onDragGroup: \"dragGroup\",\n        onDragGroupEnd: \"dragGroupEnd\",\n    } as const,\n    requestStyle(): string[] {\n        return [\"left\", \"top\", \"right\", \"bottom\"];\n    },\n    render(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        React: Renderer,\n    ): any[] {\n        const { throttleDragRotate, zoom } = moveable.props;\n        const { dragInfo, beforeOrigin } = moveable.getState();\n\n        if (!throttleDragRotate || !dragInfo) {\n            return [];\n        }\n        const dist = dragInfo.dist;\n\n        if (!dist[0] && !dist[1]) {\n            return [];\n        }\n\n        const width = getDistSize(dist);\n        const rad = getRad(dist, [0, 0]);\n\n        return [<div className={prefix(\n            \"line\",\n            \"horizontal\",\n            \"dragline\",\n            \"dashed\",\n        )} key={`dragRotateGuideline`} style={{\n            width: `${width}px`,\n            transform: `translate(${beforeOrigin[0]}px, ${beforeOrigin[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        }} />];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ) {\n        const { datas, parentEvent, parentGesto } = e;\n        const state = moveable.state;\n        const {\n            gestos,\n            style,\n        } = state;\n\n        if (gestos.draggable) {\n            return false;\n        }\n        gestos.draggable = parentGesto || moveable.targetGesto;\n\n        datas.datas = {};\n        datas.left = parseFloat(style.left || \"\") || 0;\n        datas.top = parseFloat(style.top || \"\") || 0;\n        datas.bottom = parseFloat(style.bottom || \"\") || 0;\n        datas.right = parseFloat(style.right || \"\") || 0;\n        datas.startValue = [0, 0];\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"translate\");\n        startCheckSnapDrag(moveable, datas);\n\n        datas.prevDist = [0, 0];\n        datas.prevBeforeDist = [0, 0];\n        datas.isDrag = false;\n        datas.deltaOffset = [0, 0];\n\n        const params = fillParams<OnDragStart>(moveable, e, {\n            set: (translate: number[]) => {\n                datas.startValue = translate;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n\n        if (result !== false) {\n            datas.isDrag = true;\n            moveable.state.dragInfo = {\n                startRect: moveable.getRect(),\n                dist: [0, 0],\n            };\n        } else {\n            gestos.draggable = null;\n            datas.isPinch = false;\n        }\n        return datas.isDrag ? params : false;\n    },\n    drag(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ): OnDrag | undefined {\n        if (!e) {\n            return;\n        }\n        resolveTransformEvent(e, \"translate\");\n\n        const { datas, parentEvent, parentFlag, isPinch, isRequest, deltaOffset } = e;\n        let { distX, distY } = e;\n        const { isDrag, prevDist, prevBeforeDist, startValue } = datas;\n\n        if (!isDrag) {\n            return;\n        }\n\n        if (deltaOffset) {\n            distX += deltaOffset[0];\n            distY += deltaOffset[1];\n        }\n        const props = moveable.props;\n\n        const parentMoveable = props.parentMoveable;\n        const throttleDrag = parentEvent ? 0 : (props.throttleDrag || 0);\n        const throttleDragRotate = parentEvent ? 0 : (props.throttleDragRotate || 0);\n\n        let dragRotateRad = 0;\n        let isVerticalSnap = false;\n        let isVerticalBound = false;\n        let isHorizontalSnap = false;\n        let isHorizontalBound = false;\n\n        if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n            const startDragRotate = props.startDragRotate || 0;\n            const deg\n                = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate)\n                - startDragRotate;\n            const ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n            const rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n            const r = getDistSize([rx, ry]);\n            dragRotateRad = deg * Math.PI / 180;\n\n            distX = r * Math.cos(dragRotateRad);\n            distY = r * Math.sin(dragRotateRad);\n        }\n\n        if (!isPinch && !parentEvent && !parentFlag && (!throttleDragRotate || distX || distY)) {\n            const [verticalInfo, horizontalInfo] = checkSnapBoundsDrag(\n                moveable, distX, distY, throttleDragRotate, isRequest || deltaOffset, datas,\n            );\n            isVerticalSnap = verticalInfo.isSnap;\n            isVerticalBound = verticalInfo.isBound;\n            isHorizontalSnap = horizontalInfo.isSnap;\n            isHorizontalBound = horizontalInfo.isBound;\n\n            const verticalOffset = verticalInfo.offset;\n            const horizontalOffset = horizontalInfo.offset;\n\n            distX += verticalOffset;\n            distY += horizontalOffset;\n        }\n\n        const beforeTranslate = plus(getBeforeDragDist({ datas, distX, distY }), startValue);\n        const translate = plus(getTransformDist({ datas, distX, distY }), startValue);\n\n        throttleArray(translate, TINY_NUM);\n        throttleArray(beforeTranslate, TINY_NUM);\n\n        if (!throttleDragRotate) {\n            if (!isVerticalSnap && !isVerticalBound) {\n                translate[0] = throttle(translate[0], throttleDrag);\n                beforeTranslate[0] = throttle(beforeTranslate[0], throttleDrag);\n            }\n            if (!isHorizontalSnap && !isHorizontalBound) {\n                translate[1] = throttle(translate[1], throttleDrag);\n                beforeTranslate[1] = throttle(beforeTranslate[1], throttleDrag);\n            }\n        }\n\n\n        const beforeDist = minus(beforeTranslate, startValue);\n        const dist = minus(translate, startValue);\n        const delta = minus(dist, prevDist);\n        const beforeDelta = minus(beforeDist, prevBeforeDist);\n\n        datas.prevDist = dist;\n        datas.prevBeforeDist = beforeDist;\n\n\n        datas.passDelta = delta; //distX - (datas.passDistX || 0);\n        // datas.passDeltaY = distY - (datas.passDistY || 0);\n        datas.passDist = dist; //distX;\n        // datas.passDistY = distY;\n\n        const left = datas.left + beforeDist[0];\n        const top = datas.top + beforeDist[1];\n        const right = datas.right - beforeDist[0];\n        const bottom = datas.bottom - beforeDist[1];\n        const nextTransform = convertTransformFormat(datas,\n            `translate(${translate[0]}px, ${translate[1]}px)`, `translate(${dist[0]}px, ${dist[1]}px)`);\n\n        fillOriginalTransform(e, nextTransform);\n\n        moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n        if (!parentEvent && !parentMoveable && delta.every(num => !num) && beforeDelta.some(num => !num)) {\n            return;\n        }\n\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const params = fillParams<OnDrag>(moveable, e, {\n            transform: nextTransform,\n            dist,\n            delta,\n            translate,\n            beforeDist,\n            beforeDelta,\n            beforeTranslate,\n            left,\n            top,\n            right,\n            bottom,\n            width,\n            height,\n            isPinch,\n            ...fillCSSObject({\n                transform: nextTransform,\n            }, e),\n        });\n\n        !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n        return params;\n    },\n    dragAfter(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            deltaOffset,\n        } = datas;\n\n        if (deltaOffset[0] || deltaOffset[1]) {\n            datas.deltaOffset = [0, 0];\n            return this.drag(moveable, {...e, deltaOffset });\n        }\n        return false;\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const { parentEvent, datas } = e;\n\n        moveable.state.dragInfo = null;\n        if (!datas.isDrag) {\n            return;\n        }\n        datas.isDrag = false;\n        const param = fillEndParams<OnDragEnd>(moveable, e, {});\n        !parentEvent && triggerEvent(moveable, \"onDragEnd\", param);\n        return param;\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas, clientX, clientY } = e;\n\n        const params = this.dragStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const events = triggerChildGesto(moveable, this, \"dragStart\", [\n            clientX || 0,\n            clientY || 0,\n        ], e, false, \"draggable\");\n\n        const nextParams: OnDragGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n\n        datas.isDrag = result !== false;\n\n        return datas.isDrag ? params : false;\n    },\n    dragGroup(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        const params = this.drag(moveable, e);\n        const { passDelta } = e.datas;\n        const events = triggerChildGesto(moveable, this, \"drag\", passDelta, e, false, \"draggable\");\n\n        if (!params) {\n            return;\n        }\n        const nextParams: OnDragGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onDragGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        this.dragEnd(moveable, e);\n        const events = triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false, \"draggable\");\n        triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams<OnDragGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        }));\n\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Draggable#request\n     * @param {object} [e] - the draggable's request parameter\n     * @param {number} [e.x] - x position\n     * @param {number} [e.y] - y position\n     * @param {number} [e.deltaX] - X number to move\n     * @param {number} [e.deltaY] - Y number to move\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"draggable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 });\n     * moveable.request(\"draggable\", { x: 220, y: 100 });\n     * moveable.request(\"draggable\", { x: 240, y: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        return {\n            isControl: false,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"x\" in e) {\n                    distX = e.x - rect.left;\n                } else if (\"deltaX\" in e) {\n                    distX += e.deltaX;\n                }\n                if (\"y\" in e) {\n                    distY = e.y - rect.top;\n                } else if (\"deltaY\" in e) {\n                    distY += e.deltaY;\n                }\n\n                return { datas, distX, distY };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: MoveableManagerInterface<any, Record<string, any>>) {\n        moveable.state.gestos.draggable = null;\n        moveable.state.dragInfo = null;\n    },\n};\n\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable.Draggable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n\n/**\n * throttle of x, y when drag.\n * @name Moveable.Draggable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n\n/**\n* throttle of angle of x, y when drag.\n* @name Moveable.Draggable#throttleDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.throttleDragRotate = 45;\n*/\n\n/**\n* start angle of throttleDragRotate of x, y when drag.\n* @name Moveable.Draggable#startDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* // 45, 135, 225, 315\n* moveable.throttleDragRotate = 90;\n* moveable.startDragRotate = 45;\n*/\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable.Draggable\n * @event dragStart\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable.Draggable\n * @event drag\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable.Draggable\n * @event dragEnd\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group drag starts, the `dragGroupStart` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroupStart\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\n*     console.log(\"onDragGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group drag, the `dragGroup` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroup\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\n*     console.log(\"onDragGroup\", targets);\n*     events.forEach(ev => {\n*          // drag event\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\n*          // ev.target!.style.left = `${ev.left}px`;\n*          // ev.target!.style.top = `${ev.top}px`;\n*          console.log(\"onDrag translate\", ev.dist);\n*          ev.target!.style.transform = ev.transform;)\n*     });\n* });\n*/\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable.Draggable\n * @event dragGroupEnd\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    triggerEvent,\n    fillParams,\n    fillEndParams,\n    getAbsolutePosesByState,\n    catchEvent,\n    getOffsetSizeDist,\n    getProps,\n    getDirectionCondition,\n    calculatePoses,\n    fillAfterTransform,\n    getDirectionViewClassName,\n    getTotalDirection,\n} from \"../utils\";\nimport {\n    setDragStart,\n    getResizeDist,\n    getAbsolutePosition,\n    getPosByDirection,\n    getNextMatrix,\n    getNextTransforms,\n    getDirectionByPos,\n} from \"../gesto/GestoUtils\";\nimport {\n    ResizableProps, OnResizeGroup, OnResizeGroupEnd,\n    OnResizeGroupStart, DraggableProps, OnDrag, OnResizeStart, SnappableState,\n    OnResize, OnResizeEnd, MoveableManagerInterface, MoveableGroupInterface, SnappableProps,\n    OnBeforeResize, OnBeforeResizeGroup, ResizableRequestParam,\n} from \"../types\";\nimport { getRenderDirections } from \"../renderDirections\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, convertDimension, createRotateMatrix, plus } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapResize } from \"./Snappable\";\nimport {\n    calculateBoundSize,\n    isString, convertUnitSize,\n    throttle,\n    isNumber,\n} from \"@daybrush/utils\";\nimport { TINY_NUM } from \"../consts\";\nimport { parseMat } from \"css-to-mat\";\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\n */\n\nconst directionCondition = getDirectionCondition(\"resizable\");\n\nexport default {\n    name: \"resizable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        resizable: Boolean,\n        throttleResize: Number,\n        renderDirections: Array,\n        keepRatio: Boolean,\n        resizeFormat: Function,\n        keepRatioFinally: Boolean,\n        edge: Boolean,\n    } as const,\n    events: {\n        onResizeStart: \"resizeStart\",\n        onBeforeResize: \"beforeResize\",\n        onResize: \"resize\",\n        onResizeEnd: \"resizeEnd\",\n\n        onResizeGroupStart: \"resizeGroupStart\",\n        onBeforeResizeGroup: \"beforeResizeGroup\",\n        onResizeGroup: \"resizeGroup\",\n        onResizeGroupEnd: \"resizeGroupEnd\",\n    } as const,\n    render: getRenderDirections(\"resizable\"),\n    dragControlCondition: directionCondition,\n    viewClassName: getDirectionViewClassName(\"resizable\"),\n    dragControlStart(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps, SnappableState>,\n        e: any,\n    ) {\n        const {\n            inputEvent,\n            isPinch,\n            isGroup,\n            parentDirection,\n            parentGesto,\n            datas,\n            parentFixedDirection,\n            parentEvent,\n        } = e;\n\n        const direction = getTotalDirection(\n            parentDirection,\n            isPinch,\n            inputEvent,\n            datas,\n        );\n\n        const state = moveable.state;\n        const { target, width, height, gestos } = state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (gestos.resizable) {\n            return false;\n        }\n        gestos.resizable = parentGesto || moveable.controlGesto;\n        !isPinch && setDragStart(moveable, e);\n\n        datas.datas = {};\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.prevWidth = 0;\n        datas.prevHeight = 0;\n\n        datas.minSize = [0, 0];\n        datas.startWidth = state.cssWidth;\n        datas.startHeight = state.cssHeight;\n        datas.maxSize = [Infinity, Infinity];\n\n        if (!isGroup) {\n            datas.minSize = [\n                state.minOffsetWidth,\n                state.minOffsetHeight,\n            ];\n            datas.maxSize = [\n                state.maxOffsetWidth,\n                state.maxOffsetHeight,\n            ];\n        }\n        const transformOrigin = moveable.props.transformOrigin || \"% %\";\n\n        datas.transformOrigin = transformOrigin && isString(transformOrigin)\n            ? transformOrigin.split(\" \")\n            : transformOrigin;\n\n        datas.startOffsetMatrix = state.offsetMatrix;\n        datas.startTransformOrigin = state.transformOrigin;\n\n        datas.isWidth = e?.parentIsWidth ?? ((!direction[0] && !direction[1]) || direction[0] || !direction[1]);\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\n\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n        }\n        function setFixedPosition(fixedPosition: number[]) {\n            const {\n                width,\n                height,\n            } = moveable.state;\n\n            datas.fixedPosition = fixedPosition;\n            datas.fixedDirection = getDirectionByPos(fixedPosition, width, height);\n        }\n        function setMin(minSize: Array<string | number>)  {\n            datas.minSize = [\n                convertUnitSize(`${minSize[0]}`, 0) || 0,\n                convertUnitSize(`${minSize[1]}`, 0) || 0,\n            ];\n        }\n        function setMax(maxSize: Array<string | number>) {\n            const nextMaxSize = [\n                maxSize[0] || Infinity,\n                maxSize[1] || Infinity,\n            ];\n            if (!isNumber(nextMaxSize[0]) || isFinite(nextMaxSize[0])) {\n                nextMaxSize[0] = convertUnitSize(`${nextMaxSize[0]}`, 0) || Infinity;\n            }\n            if (!isNumber(nextMaxSize[1]) || isFinite(nextMaxSize[1])) {\n                nextMaxSize[1] = convertUnitSize(`${nextMaxSize[1]}`, 0) || Infinity;\n            }\n            datas.maxSize = nextMaxSize;\n        }\n\n        setRatio(width / height);\n        setFixedDirection(parentFixedDirection || [-direction[0], -direction[1]]);\n\n        datas.setFixedDirection = setFixedDirection;\n        datas.setFixedPosition = setFixedPosition;\n        datas.setMin = setMin;\n        datas.setMax = setMax;\n        const params = fillParams<OnResizeStart>(moveable, e, {\n            direction,\n            startRatio: datas.ratio,\n            set: ([startWidth, startHeight]: number[]) => {\n                datas.startWidth = startWidth;\n                datas.startHeight = startHeight;\n            },\n            setMin,\n            setMax,\n            setRatio,\n            setFixedDirection,\n            setFixedPosition,\n            setOrigin: (origin: Array<string | number>) => {\n                datas.transformOrigin = origin;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onResizeStart\", params);\n\n        datas.startFixedDirection = datas.fixedDirection;\n        datas.startFixedPosition = datas.fixedPosition;\n        if (result !== false) {\n            datas.isResize = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n        }\n        return datas.isResize ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps & SnappableProps>,\n        e: any,\n    ) {\n        const {\n            datas,\n            parentFlag,\n            isPinch,\n            parentKeepRatio,\n            dragClient,\n            parentDist,\n            isRequest,\n            isGroup,\n            parentEvent,\n            resolveMatrix,\n        } = e;\n\n        const {\n            isResize,\n            transformOrigin,\n            startWidth,\n            startHeight,\n            prevWidth,\n            prevHeight,\n            minSize,\n            maxSize,\n            ratio,\n            startOffsetWidth,\n            startOffsetHeight,\n            isWidth,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        if (resolveMatrix) {\n            const {\n                is3d,\n            } = moveable.state;\n            const {\n                startOffsetMatrix,\n                startTransformOrigin,\n            } = datas;\n            const n = is3d ? 4 : 3;\n            let targetMatrix = parseMat(getNextTransforms(e));\n            const targetN = Math.sqrt(targetMatrix.length);\n\n            if (n !== targetN) {\n                targetMatrix = convertDimension(targetMatrix, targetN, n);\n            }\n\n            const nextAllMatrix = getNextMatrix(\n                startOffsetMatrix,\n                targetMatrix,\n                startTransformOrigin,\n                n,\n            );\n            const poses = calculatePoses(nextAllMatrix, startOffsetWidth, startOffsetHeight, n);\n\n            datas.startPositions = poses;\n            datas.nextTargetMatrix = targetMatrix;\n            datas.nextAllMatrix = nextAllMatrix;\n        }\n        const props = getProps(moveable.props, \"resizable\");\n        const {\n            resizeFormat,\n            throttleResize = parentFlag ? 0 : 1,\n            parentMoveable,\n            keepRatioFinally,\n        } = props;\n        const direction = datas.direction;\n        let sizeDirection = direction;\n        let distWidth = 0;\n        let distHeight = 0;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\n\n        function getNextBoundingSize() {\n            const fixedDirection = datas.fixedDirection;\n            const nextSize = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n\n            distWidth = nextSize.distWidth;\n            distHeight = nextSize.distHeight;\n\n            let nextWidth = (sizeDirection[0] - fixedDirection[0]) || keepRatio\n                ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n            let nextHeight = (sizeDirection[1] - fixedDirection[1]) || keepRatio\n                ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n\n            if (keepRatio && startOffsetWidth && startOffsetHeight) {\n                // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n                if (isWidth) {\n                    nextHeight = nextWidth / ratio;\n                } else {\n                    nextWidth = nextHeight * ratio;\n                }\n            }\n            return [nextWidth, nextHeight];\n        }\n\n        let [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n        if (!parentEvent) {\n            datas.setFixedDirection(datas.fixedDirection);\n\n            triggerEvent(moveable, \"onBeforeResize\", fillParams<OnBeforeResize>(moveable, e, {\n                startFixedDirection: datas.startFixedDirection,\n                startFixedPosition: datas.startFixedPosition,\n                setFixedDirection(nextFixedDirection: number[]) {\n                    datas.setFixedDirection(nextFixedDirection);\n\n                    [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n                    return [boundingWidth, boundingHeight];\n                },\n                setFixedPosition(nextFixedPosition: number[]) {\n                    datas.setFixedPosition(nextFixedPosition);\n\n                    [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n                    return [boundingWidth, boundingHeight];\n                },\n                boundingWidth,\n                boundingHeight,\n                setSize(size: number[]) {\n                    [boundingWidth, boundingHeight] = size;\n                },\n            }, true));\n        }\n\n        let fixedPosition = dragClient;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapResize(\n                moveable,\n                boundingWidth,\n                boundingHeight,\n                direction,\n                fixedPosition,\n                isRequest,\n                datas,\n            );\n        }\n        if (parentDist) {\n            !parentDist[0] && (snapDist[0] = 0);\n            !parentDist[1] && (snapDist[1] = 0);\n        }\n\n        function computeSize() {\n            if (resizeFormat) {\n                [boundingWidth, boundingHeight] = resizeFormat([boundingWidth, boundingHeight]);\n            }\n            boundingWidth = throttle(boundingWidth, throttleResize!);\n            boundingHeight = throttle(boundingHeight, throttleResize!);\n        }\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                // pre-compute before maintaining the ratio\n                computeSize();\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                boundingWidth += snapDist[0];\n                boundingHeight = boundingWidth / ratio;\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                boundingHeight += snapDist[1];\n                boundingWidth = boundingHeight * ratio;\n            }\n        } else {\n            boundingWidth += snapDist[0];\n            boundingHeight += snapDist[1];\n\n            boundingWidth = Math.max(0, boundingWidth);\n            boundingHeight = Math.max(0, boundingHeight);\n        }\n\n        [boundingWidth, boundingHeight] = calculateBoundSize(\n            [boundingWidth, boundingHeight],\n            minSize,\n            maxSize,\n            keepRatio ? ratio : false,\n        );\n        computeSize();\n\n        if (keepRatio && (isGroup || keepRatioFinally)) {\n            if (isWidth) {\n                boundingHeight = boundingWidth / ratio;\n            } else {\n                boundingWidth = boundingHeight * ratio;\n            }\n        }\n        distWidth = boundingWidth - startOffsetWidth;\n        distHeight = boundingHeight - startOffsetHeight;\n\n        const delta = [distWidth - prevWidth, distHeight - prevHeight];\n\n        datas.prevWidth = distWidth;\n        datas.prevHeight = distHeight;\n\n        const inverseDelta = getResizeDist(\n            moveable,\n            boundingWidth,\n            boundingHeight,\n            fixedPosition,\n            transformOrigin,\n            datas,\n        );\n\n        if (!parentMoveable && delta.every(num => !num) && inverseDelta.every(num => !num)) {\n            return;\n        }\n        const drag = Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false, \"draggable\"),\n        ) as OnDrag;\n        const transform = drag.transform;\n\n        const nextWidth = startWidth + distWidth;\n        const nextHeight = startHeight + distHeight;\n\n        const params = fillParams<OnResize>(moveable, e, {\n            width: nextWidth,\n            height: nextHeight,\n            offsetWidth: Math.round(boundingWidth),\n            offsetHeight: Math.round(boundingHeight),\n            startRatio: ratio,\n            boundingWidth,\n            boundingHeight,\n            direction,\n            dist: [distWidth, distHeight],\n            delta,\n            isPinch: !!isPinch,\n            drag,\n            ...fillAfterTransform({\n                style: {\n                    width: `${nextWidth}px`,\n                    height: `${nextHeight}px`,\n                },\n                transform,\n            }, drag, e),\n        });\n        !parentEvent && triggerEvent(moveable, \"onResize\", params);\n        return params;\n    },\n    dragControlAfter(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            isResize,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const errorWidth = width - (startOffsetWidth + prevWidth);\n        const errorHeight = height - (startOffsetHeight + prevHeight);\n        const isErrorWidth = Math.abs(errorWidth) > 3;\n        const isErrorHeight = Math.abs(errorHeight) > 3;\n\n        if (isErrorWidth) {\n            datas.startWidth += errorWidth;\n            datas.startOffsetWidth += errorWidth;\n            datas.prevWidth += errorWidth;\n        }\n        if (isErrorHeight) {\n            datas.startHeight += errorHeight;\n            datas.startOffsetHeight += errorHeight;\n            datas.prevHeight += errorHeight;\n        }\n        if (isErrorWidth || isErrorHeight) {\n            return this.dragControl(moveable, e);\n        }\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, parentEvent } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        datas.isResize = false;\n\n        const params = fillEndParams<OnResizeEnd>(moveable, e, {});\n        !parentEvent && triggerEvent(moveable, \"onResizeEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const params = this.dragControlStart(moveable, {...e, isGroup: true });\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n\n            const startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n            const pos = getPosByDirection(startPositions, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n        const {\n            startOffsetWidth: parentStartOffsetWidth,\n            startOffsetHeight: parentStartOffsetHeight,\n        } = datas;\n\n        function updateGroupMin() {\n            const originalMinSize = datas.minSize;\n            originalEvents.forEach(ev => {\n                const {\n                    minSize: childMinSize,\n                    startOffsetWidth: childStartOffsetWidth,\n                    startOffsetHeight: childStartOffsetHeight,\n                } = ev.datas;\n\n                const parentMinWidth = parentStartOffsetWidth\n                    * (childStartOffsetWidth ? childMinSize[0] / childStartOffsetWidth : 0);\n                const parentMinHeight = parentStartOffsetHeight\n                    * (childStartOffsetHeight ? childMinSize[1] / childStartOffsetHeight : 0);\n\n                originalMinSize[0] = Math.max(originalMinSize[0], parentMinWidth);\n                originalMinSize[1] = Math.max(originalMinSize[1], parentMinHeight);\n            });\n        }\n\n        function updateGroupMax() {\n            const originalMaxSize = datas.maxSize;\n            originalEvents.forEach(ev => {\n                const {\n                    maxSize: childMaxSize,\n                    startOffsetWidth: childStartOffsetWidth,\n                    startOffsetHeight: childStartOffsetHeight,\n                } = ev.datas;\n\n                const parentMaxWidth = parentStartOffsetWidth\n                    * (childStartOffsetWidth ? childMaxSize[0] / childStartOffsetWidth : 0);\n                const parentMaxHeight = parentStartOffsetHeight\n                    * (childStartOffsetHeight ? childMaxSize[1] / childStartOffsetHeight : 0);\n\n                originalMaxSize[0] = Math.min(originalMaxSize[0], parentMaxWidth);\n                originalMaxSize[1] = Math.min(originalMaxSize[1], parentMaxHeight);\n            });\n        }\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n\n        updateGroupMin();\n        updateGroupMax();\n\n        const setFixedDirection = (fixedDirection: number[]) => {\n            params.setFixedDirection(fixedDirection);\n            events.forEach((ev, i) => {\n                ev.setFixedDirection(fixedDirection);\n                setDist(ev.moveable, originalEvents[i]);\n            });\n        };\n\n        datas.setFixedDirection = setFixedDirection;\n\n        const nextParams: OnResizeGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events: events.map(ev => {\n                return {\n                    ...ev,\n                    setMin: (minSize: Array<number | string>) => {\n                        ev.setMin(minSize);\n                        updateGroupMin();\n                    },\n                    setMax: (maxSize: Array<number | string>) => {\n                        ev.setMax(maxSize);\n                        updateGroupMax();\n                    },\n                };\n            }),\n            setFixedDirection,\n            setMin: (minSize: Array<number | string>) => {\n                params.setMin(minSize);\n                updateGroupMin();\n            },\n            setMax: (maxSize: Array<number | string>) => {\n                params.setMax(maxSize);\n                updateGroupMax();\n            },\n        };\n        const result = triggerEvent(moveable, \"onResizeGroupStart\", nextParams);\n\n        datas.isResize = result !== false;\n        return datas.isResize ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        const props = getProps(moveable.props, \"resizable\");\n\n        catchEvent(moveable, \"onBeforeResize\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeResizeGroup\", fillParams<OnBeforeResizeGroup>(moveable, e, {\n                ...parentEvent,\n                targets: props.targets!,\n            }, true));\n        });\n\n\n        const params = this.dragControl(moveable, {...e, isGroup: true });\n\n        if (!params) {\n            return;\n        }\n        const {\n            boundingWidth,\n            boundingHeight,\n            dist,\n        } = params;\n\n        const keepRatio = props.keepRatio;\n\n        const parentScale = [\n            boundingWidth / (boundingWidth - dist[0]),\n            boundingHeight / (boundingHeight - dist[1]),\n        ];\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * parentScale[0],\n                        ev.datas.originalY * parentScale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                    parentKeepRatio: keepRatio,\n                };\n            },\n        );\n        const nextParams: OnResizeGroup = {\n            targets: props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onResizeGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isResize) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams: OnResizeGroupEnd = fillEndParams<OnResizeGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onResizeGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Resizable#request\n     * @param {Moveable.Resizable.ResizableRequestParam} e - the Resizable's request parameter\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"resizable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any>) {\n        const datas: Record<string, any> = {};\n        let distWidth = 0;\n        let distHeight = 0;\n        const rect = moveable.getRect();\n\n        return {\n            isControl: true,\n            requestStart(e: ResizableRequestParam) {\n                return { datas, parentDirection: e.direction || [1, 1], parentIsWidth: e?.horizontal ?? true };\n            },\n            request(e: ResizableRequestParam) {\n                if (\"offsetWidth\" in e) {\n                    distWidth = e.offsetWidth! - rect.offsetWidth;\n                } else if (\"deltaWidth\" in e) {\n                    distWidth += e.deltaWidth!;\n                }\n                if (\"offsetHeight\" in e) {\n                    distHeight = e.offsetHeight! - rect.offsetHeight;\n                } else if (\"deltaHeight\" in e) {\n                    distHeight += e.deltaHeight!;\n                }\n\n\n                return { datas, parentDist: [distWidth, distHeight], parentKeepRatio: e.keepRatio };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: MoveableManagerInterface<any, {}>) {\n        moveable.state.gestos.resizable = null;\n    },\n};\n\n/**\n * Whether or not target can be resized.\n * @name Moveable.Resizable#resizable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     resizable: false,\n * });\n *\n * moveable.resizable = true;\n */\n\n/**\n * throttle of width, height when resize. If throttleResize is set to less than 1, the target may shake.\n * @name Moveable.Resizable#throttleResize\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   throttleResize: 1,\n * });\n *\n * moveable.throttleResize = 0;\n */\n/**\n * When resize or scale, keeps a ratio of the width, height.\n * @name Moveable.Resizable#keepRatio\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * Set directions to show the control box.\n * @name Moveable.Resizable#renderDirections\n * @default [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"]\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * Function to convert size for resize\n * @name Moveable.Resizable#resizeFormat\n * @default oneself\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   resizeFormat: v => v,\n * });\n *\n * moveable.resizeFormat = (size: number[]) => ([Math.trunc(size[0]), Math.trunc(size[1])];\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable.Resizable\n * @event resizeStart\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When resizing, `beforeResize` is called before `resize` occurs. In `beforeResize`, you can get and set the pre-value before resizing.\n * @memberof Moveable.Resizable\n * @event beforeResize\n * @param {Moveable.Resizable.OnBeforeResize} - Parameters for the `beforeResize` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"beforeResize\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"resize\", ({ target, width, height, drag }) => {\n *     target.style.width = `${width}px`;\n *     target.style.height = `${height}px`;\n *     target.style.transform = drag.transform;\n * });\n */\n\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable.Resizable\n * @event resize\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable.Resizable\n * @event resizeEnd\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group resize starts, the `resizeGroupStart` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroupStart\n* @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroupStart\", ({ targets }) => {\n*     console.log(\"onResizeGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group resize, the `resizeGroup` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroup\n* @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroup\", ({ targets, events }) => {\n*     console.log(\"onResizeGroup\", targets);\n*     events.forEach(ev => {\n*         const offset = [\n*             direction[0] < 0 ? -ev.delta[0] : 0,\n*             direction[1] < 0 ? -ev.delta[1] : 0,\n*         ];\n*         // ev.drag is a drag event that occurs when the group resize.\n*         const left = offset[0] + ev.drag.beforeDist[0];\n*         const top = offset[1] + ev.drag.beforeDist[1];\n*         const width = ev.width;\n*         const top = ev.top;\n*     });\n* });\n*/\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupEnd\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, triggerEvent, fillParams,\n    calculatePosition, fillEndParams, getRotationRad, getRefTargets,\n    catchEvent, getProps, calculateMoveableClientPositions,\n    fillAfterTransform,\n} from \"../utils\";\nimport {\n    IObject, hasClass, getRad,\n    throttle,\n    getDist,\n    getKeys,\n    isArray,\n} from \"@daybrush/utils\";\nimport {\n    RotatableProps, OnRotateGroup, OnRotateGroupEnd,\n    Renderer, OnRotateGroupStart, OnRotateStart, OnRotate,\n    OnRotateEnd, MoveableClientRect, SnappableProps,\n    SnappableState, MoveableManagerInterface, MoveableGroupInterface, DraggableProps,\n    OnBeforeRotate,\n    OnBeforeRotateGroup,\n    OnResizeStart,\n    OnResize,\n    TransformObject,\n    OnDragStart,\n} from \"../types\";\nimport { triggerChildAbles } from \"../groupUtils\";\nimport { calculate, convertPositionMatrix, getOrigin, minus, plus, rotate as rotateMatrix } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapRotate } from \"./Snappable\";\nimport {\n    fillTransformStartEvent,\n    convertTransformFormat, getRotateDist,\n    getDirectionOffset,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n    resolveTransformEvent,\n    getTransformDirection,\n    getPosByDirection,\n    getDirectionByPos,\n} from \"../gesto/GestoUtils\";\nimport { DirectionControlInfo, renderAroundControls, renderDirectionControlsByInfos } from \"../renderDirections\";\nimport { DIRECTIONS, DIRECTION_REGION_TO_DIRECTION } from \"../consts\";\nimport Resizable from \"./Resizable\";\nimport Draggable from \"./Draggable\";\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n * @description Rotatable indicates whether the target can be rotated.\n */\n\nfunction setRotateStartInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: IObject<any>, clientX: number, clientY: number,\n    rect: MoveableClientRect,\n) {\n    const groupable = moveable.props.groupable;\n    const state = moveable.state;\n    const n = state.is3d ? 4 : 3;\n    const origin = datas.origin;\n    const nextOrigin = calculatePosition(\n        moveable.state.rootMatrix,\n        // TO-DO #710\n        minus([origin[0], origin[1]], groupable ? [0, 0] : [state.left, state.top]),\n        n,\n    );\n    const startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n\n    datas.startAbsoluteOrigin = startAbsoluteOrigin;\n    datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n    datas.defaultDeg = datas.prevDeg;\n    datas.prevSnapDeg = 0;\n    datas.loop = 0;\n    datas.startDist = getDist(startAbsoluteOrigin, [clientX, clientY]);\n}\n\nfunction getAbsoluteDist(\n    deg: number,\n    direction: number,\n    datas: IObject<any>,\n) {\n    const {\n        defaultDeg,\n        prevDeg,\n    } = datas;\n\n\n    let normalizedPrevDeg = prevDeg % 360;\n    let loop = Math.floor(prevDeg / 360);\n\n    if (normalizedPrevDeg < 0) {\n        normalizedPrevDeg += 360;\n    }\n\n    if (normalizedPrevDeg > deg && normalizedPrevDeg > 270 && deg < 90) {\n        // 360 => 0\n        ++loop;\n    } else if (normalizedPrevDeg < deg && normalizedPrevDeg < 90 && deg > 270) {\n        // 0 => 360\n        --loop;\n    }\n    const dist = direction * (loop * 360 + deg - defaultDeg);\n\n    datas.prevDeg = defaultDeg + dist;\n\n    return dist;\n}\nfunction getAbsoluteDistByClient(\n    clientX: number, clientY: number,\n    direction: number,\n    datas: IObject<any>,\n) {\n    return getAbsoluteDist(\n        getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180,\n        direction,\n        datas,\n    );\n}\nfunction getRotateInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    dist: number,\n    startValue: number,\n    checkSnap?: boolean,\n) {\n    const {\n        throttleRotate = 0,\n    } = moveable.props;\n    const prevSnapDeg = datas.prevSnapDeg;\n    let snapRotation = 0;\n    let isSnap = false;\n\n    if (checkSnap) {\n        const result = checkSnapRotate(moveable, moveableRect, dist);\n\n        isSnap = result.isSnap;\n        snapRotation = startValue + result.rotation;\n    }\n\n    if (!isSnap) {\n        snapRotation = throttle(startValue + dist, throttleRotate);\n    }\n    const snapDeg = snapRotation - startValue;\n\n    datas.prevSnapDeg = snapDeg;\n\n    return [snapDeg - prevSnapDeg, snapDeg, snapRotation];\n\n\n}\n\nexport function getReversePositionX(dir: string) {\n    if (dir === \"left\") {\n        return \"right\";\n    } else if (dir === \"right\") {\n        return \"left\";\n    }\n    return dir;\n}\nexport function getReversePositionY(dir: string) {\n    if (dir === \"top\") {\n        return \"bottom\";\n    } else if (dir === \"bottom\") {\n        return \"top\";\n    }\n    return dir;\n}\nexport function getRotationPositions(\n    rotationPosition: RotatableProps[\"rotationPosition\"],\n    [pos1, pos2, pos3, pos4]: number[][],\n    direction: number,\n): [number[], number][] {\n    if (rotationPosition === \"none\") {\n        return [];\n    }\n    if (isArray(rotationPosition)) {\n        return rotationPosition.map(child => getRotationPositions(\n            child,\n            [pos1, pos2, pos3, pos4],\n            direction,\n        )[0]);\n    }\n    const [dir1, dir2] = (rotationPosition || \"top\").split(\"-\");\n    let radPoses = [pos1, pos2];\n\n    if (dir1 === \"left\") {\n        radPoses = [pos3, pos1];\n    } else if (dir1 === \"right\") {\n        radPoses = [pos2, pos4];\n    } else if (dir1 === \"bottom\") {\n        radPoses = [pos4, pos3];\n    }\n    let pos = [\n        (radPoses[0][0] + radPoses[1][0]) / 2,\n        (radPoses[0][1] + radPoses[1][1]) / 2,\n    ];\n    const rad = getRotationRad(radPoses, direction);\n    if (dir2) {\n        const isStart = dir2 === \"top\" || dir2 === \"left\";\n        const isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n\n        pos = radPoses[(isStart && !isReverse) || (!isStart && isReverse) ? 0 : 1];\n    }\n    return [[pos, rad]];\n}\n\nexport function dragControlCondition(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n    if (e.isRequest) {\n        return e.requestAble === \"rotatable\";\n    }\n    const target = e.inputEvent.target as HTMLElement;\n    if (\n        hasClass(target, prefix(\"rotation-control\"))\n        || hasClass(target, prefix(\"around-control\"))\n        || (hasClass(target, prefix(\"control\")) && hasClass(target, prefix(\"rotatable\")))\n    ) {\n        return true;\n    }\n    const rotationTarget = moveable.props.rotationTarget;\n\n    if (rotationTarget) {\n        return getRefTargets(rotationTarget, true).some(element => {\n            if (!element) {\n                return false;\n            }\n            return target === element || target.contains(element);\n        });\n    }\n    return false;\n}\n\nconst directionCSS = DIRECTIONS.map(dir => {\n    let top = \"\";\n    let left = \"\";\n    let originX = \"center\";\n    let originY = \"center\";\n\n    if (dir.indexOf(\"n\") > -1) {\n        top = \"top: -20px;\";\n        originY = \"bottom\";\n    }\n    if (dir.indexOf(\"s\") > -1) {\n        top = \"top: 0px;\";\n        originY = \"top\";\n    }\n    if (dir.indexOf(\"w\") > -1) {\n        left = \"left: -20px;\";\n        originX = \"right\";\n    }\n    if (dir.indexOf(\"e\") > -1) {\n        left = \"left: 0px;\";\n        originX = \"left\";\n    }\n    return `.around-control[data-direction*=\"${dir}\"] {\n        ${left}${top}\n        transform-origin: ${originX} ${originY};\n    }`;\n}).join(\"\\n\");\nconst css = `.rotation {\n    position: absolute;\n    height: 40px;\n    width: 1px;\n    transform-origin: 50% 100%;\n    height: calc(40px * var(--zoom));\n    top: auto;\n    left: 0;\n    bottom: 100%;\n    will-change: transform;\n}\n.rotation .rotation-line {\n    display: block;\n    width: 100%;\n    height: 100%;\n    transform-origin: 50% 50%;\n}\n.rotation .rotation-control {\n    border-color: #4af;\n    border-color: var(--moveable-color);\n    background:#fff;\n    cursor: alias;\n}\n:global .view-rotation-dragging, .rotatable.direction.control {\n    cursor: alias;\n}\n.around-control {\n    position: absolute;\n    will-change: transform;\n    width: 20px;\n    height: 20px;\n    left: -10px;\n    top: -10px;\n    box-sizing: border-box;\n    background: transparent;\n    z-index: 8;\n    cursor: alias;\n    transform-origin: center center;\n}\n.rotatable.direction.control.move {\n    cursor: move;\n}\n${directionCSS}\n`;\nexport default {\n    name: \"rotatable\",\n    canPinch: true,\n    props: {\n        rotatable: Boolean,\n        rotationPosition: String,\n        throttleRotate: Number,\n        renderDirections: Object,\n        rotationTarget: Object,\n        rotateAroundControls: Boolean,\n        edge: Boolean,\n        resolveAblesWithRotatable: Object,\n    } as const,\n    events: {\n        onRotateStart: \"rotateStart\",\n        onBeforeRotate: \"beforeRotate\",\n        onRotate: \"rotate\",\n        onRotateEnd: \"rotateEnd\",\n        onRotateGroupStart: \"rotateGroupStart\",\n        onBeforeRotateGroup: \"beforeRotateGroup\",\n        onRotateGroup: \"rotateGroup\",\n        onRotateGroupEnd: \"rotateGroupEnd\",\n    } as const,\n    css: [css],\n    viewClassName(moveable: MoveableManagerInterface<RotatableProps>) {\n        if (!moveable.isDragging(\"rotatable\")) {\n            return \"\";\n        }\n        return prefix(\"view-rotation-dragging\");\n    },\n    render(moveable: MoveableManagerInterface<RotatableProps>, React: Renderer): any {\n        const {\n            rotatable,\n            rotationPosition,\n            zoom,\n            renderDirections,\n            rotateAroundControls,\n            resolveAblesWithRotatable,\n        } = getProps(moveable.props, \"rotatable\");\n        const {\n            renderPoses,\n            direction,\n        } = moveable.getState();\n        if (!rotatable) {\n            return null;\n        }\n        const positions = getRotationPositions(rotationPosition!, renderPoses, direction);\n        const jsxs: any[] = [];\n\n        positions.forEach(([pos, rad], i) => {\n            jsxs.push(\n                <div key={`rotation${i}`} className={prefix(\"rotation\")} style={{\n                    // tslint:disable-next-line: max-line-length\n                    transform: `translate(-50%) translate(${pos[0]}px, ${pos[1]}px) rotate(${rad}rad)`,\n                }}>\n                    <div className={prefix(\"line rotation-line\")} style={{\n                        transform: `scaleX(${zoom})`,\n                    }}></div>\n                    <div className={prefix(\"control rotation-control\")} style={{\n                        transform: `translate(0.5px) scale(${zoom})`,\n                    }}></div>\n                </div>\n            );\n        });\n        if (renderDirections) {\n            const ables = getKeys(resolveAblesWithRotatable || {});\n            const resolveMap: Record<string, string> = {};\n\n            ables.forEach(name => {\n                resolveAblesWithRotatable![name]!.forEach(direction => {\n                    resolveMap[direction] = name;\n                });\n            });\n\n            let directionControlInfos: DirectionControlInfo[] = [];\n\n            if (isArray(renderDirections)) {\n                directionControlInfos = renderDirections.map(dir => {\n                    const able = resolveMap[dir];\n\n                    return {\n                        data: able ? { resolve: able } : {},\n                        classNames: able ? [`move`] : [],\n                        dir,\n                    };\n                });\n            }\n\n            jsxs.push(...renderDirectionControlsByInfos(\n                moveable,\n                \"rotatable\",\n                directionControlInfos,\n                React,\n            ));\n        }\n        if (rotateAroundControls) {\n            jsxs.push(...renderAroundControls(moveable, React));\n        }\n\n        return jsxs;\n    },\n    dragControlCondition: dragControlCondition as (moveable: any, e: any) => boolean,\n    dragControlStart(\n        moveable: MoveableManagerInterface<RotatableProps & SnappableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const {\n            datas,\n            clientX, clientY,\n            parentRotate, parentFlag, isPinch,\n            isRequest,\n        } = e;\n        const state = moveable.state;\n        const {\n            target, left, top,\n            direction, beforeDirection, targetTransform,\n            moveableClientRect,\n            offsetMatrix,\n            targetMatrix,\n            allMatrix,\n            width,\n            height,\n        } = state;\n\n        if (!isRequest && !target) {\n            return false;\n        }\n\n        const rect = moveable.getRect();\n        datas.rect = rect;\n        datas.transform = targetTransform;\n        datas.left = left;\n        datas.top = top;\n        let setFixedPosition = (fixedPosition: number[]) => {\n            const {\n                allMatrix,\n                is3d,\n                width,\n                height,\n            } = moveable.state;\n            const fixedDirection = getDirectionByPos(fixedPosition, width, height);\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = calculatePosition(allMatrix, fixedPosition, is3d ? 4 : 3);\n\n            if (resizeStart) {\n                resizeStart.setFixedPosition(fixedPosition);\n            }\n        };\n        let setFixedDirection: OnRotateStart[\"setFixedDirection\"] = (fixedDirection: number[]) => {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getDirectionOffset(moveable, fixedDirection);\n\n            if (resizeStart) {\n                resizeStart.setFixedDirection(fixedDirection);\n            }\n        };\n        let startClientX = clientX;\n        let startClientY = clientY;\n\n        if (isRequest || isPinch || parentFlag) {\n            const externalRotate = parentRotate || 0;\n\n            datas.beforeInfo = {\n                origin: rect.beforeOrigin,\n                prevDeg: externalRotate,\n                defaultDeg: externalRotate,\n                prevSnapDeg: 0,\n                startDist: 0,\n            };\n            datas.afterInfo = {\n                ...datas.beforeInfo,\n                origin: rect.origin,\n            };\n            datas.absoluteInfo = {\n                ...datas.beforeInfo,\n                origin: rect.origin,\n                startValue: externalRotate,\n            };\n        } else {\n            const inputTarget = e.inputEvent?.target;\n\n            if (inputTarget) {\n                const regionDirection = inputTarget.getAttribute(\"data-direction\") || \"\";\n                const controlDirection = DIRECTION_REGION_TO_DIRECTION[regionDirection];\n\n                if (controlDirection) {\n                    datas.isControl = true;\n                    datas.isAroundControl = hasClass(inputTarget, prefix(\"around-control\"));\n                    datas.controlDirection = controlDirection;\n                    const resolve = inputTarget.getAttribute(\"data-resolve\");\n\n                    if (resolve) {\n                        datas.resolveAble = resolve;\n                    }\n\n                    const clientPoses = calculateMoveableClientPositions(\n                        state.rootMatrix,\n                        state.renderPoses,\n                        moveableClientRect,\n                    );\n\n\n                    [startClientX, startClientY] = getPosByDirection(clientPoses, controlDirection);\n                }\n            }\n            datas.beforeInfo = { origin: rect.beforeOrigin };\n            datas.afterInfo = { origin: rect.origin };\n            datas.absoluteInfo = {\n                origin: rect.origin,\n                startValue: rect.rotation,\n            };\n\n            const originalFixedPosition = setFixedPosition;\n\n            setFixedPosition = (fixedPosition: number[]) => {\n                const n = state.is3d ? 4 : 3;\n                const [originX, originY] = plus(getOrigin(targetMatrix, n), fixedPosition);\n                const fixedBeforeOrigin = calculate(\n                    offsetMatrix,\n                    convertPositionMatrix([originX, originY], n),\n                );\n                const fixedAfterOrigin = calculate(\n                    allMatrix,\n                    convertPositionMatrix([fixedPosition[0], fixedPosition[1]], n),\n                );\n                originalFixedPosition(fixedPosition);\n                const posDelta = state.posDelta;\n\n                datas.beforeInfo.origin = minus(fixedBeforeOrigin, posDelta);\n                datas.afterInfo.origin = minus(fixedAfterOrigin, posDelta);\n                datas.absoluteInfo.origin = minus(fixedAfterOrigin, posDelta);\n\n                setRotateStartInfo(moveable, datas.beforeInfo, startClientX, startClientY, moveableClientRect);\n                setRotateStartInfo(moveable, datas.afterInfo, startClientX, startClientY, moveableClientRect);\n                setRotateStartInfo(moveable, datas.absoluteInfo, startClientX, startClientY, moveableClientRect);\n            };\n            setFixedDirection = (fixedDirection: number[]) => {\n                const fixedPosition = getPosByDirection([\n                    [0, 0],\n                    [width, 0],\n                    [0, height],\n                    [width, height],\n                ], fixedDirection);\n\n                setFixedPosition(fixedPosition);\n            };\n        }\n\n        datas.startClientX = startClientX;\n        datas.startClientY = startClientY;\n        datas.direction = direction;\n        datas.beforeDirection = beforeDirection;\n        datas.startValue = 0;\n        datas.datas = {};\n\n        setDefaultTransformIndex(e, \"rotate\");\n\n        let dragStart: OnDragStart | false = false;\n        let resizeStart: OnResizeStart | false = false;\n\n        if (datas.isControl && datas.resolveAble) {\n            const resolveAble = datas.resolveAble;\n\n            if  (resolveAble === \"resizable\") {\n                resizeStart = Resizable.dragControlStart(moveable, {\n                    ...(new CustomGesto(\"resizable\").dragStart([0, 0], e)),\n                    parentPosition: datas.controlPosition,\n                    parentFixedPosition: datas.fixedPosition,\n                });\n            }\n        }\n\n        if (!resizeStart) {\n            dragStart = Draggable.dragStart!(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            );\n        }\n\n        setFixedPosition(state.transformOrigin);\n        const params = fillParams<OnRotateStart>(moveable, e, {\n            set: (rotatation: number) => {\n                datas.startValue = rotatation * Math.PI / 180;\n            },\n            setFixedDirection,\n            setFixedPosition,\n            ...fillTransformStartEvent(e),\n            dragStart,\n            resizeStart,\n        });\n        const result = triggerEvent(moveable, \"onRotateStart\", params);\n        datas.isRotate = result !== false;\n        state.snapRenderInfo = {\n            request: e.isRequest,\n        };\n\n        return datas.isRotate ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<RotatableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, clientDistX, clientDistY, parentRotate, parentFlag, isPinch, groupDelta } = e;\n        const {\n            beforeDirection,\n            beforeInfo,\n            afterInfo,\n            absoluteInfo,\n            isRotate,\n            startValue,\n            rect,\n            startClientX,\n            startClientY,\n        } = datas;\n\n        if (!isRotate) {\n            return;\n        }\n\n        resolveTransformEvent(e, \"rotate\");\n\n        const targetDirection = getTransformDirection(e);\n        const direction = beforeDirection * targetDirection;\n        const {\n            parentMoveable,\n        } = moveable.props;\n\n\n        let beforeDelta = 0;\n        let beforeDist: number;\n        let beforeRotation: number;\n\n        let delta = 0;\n        let dist: number;\n        let rotation: number;\n\n        let absoluteDelta = 0;\n        let absoluteDist: number;\n        let absoluteRotation: number;\n\n        const startRotation = 180 / Math.PI * startValue;\n        const absoluteStartRotation = absoluteInfo.startValue;\n        let isSnap = false;\n        const nextClientX = startClientX + clientDistX;\n        const nextClientY = startClientY + clientDistY;\n\n        if (!parentFlag && \"parentDist\" in e) {\n            const parentDist = e.parentDist;\n\n            beforeDist = parentDist;\n            dist = parentDist;\n            absoluteDist = parentDist;\n        } else if (isPinch || parentFlag) {\n            beforeDist = getAbsoluteDist(parentRotate, beforeDirection, beforeInfo);\n            dist = getAbsoluteDist(parentRotate, direction, afterInfo);\n            absoluteDist = getAbsoluteDist(parentRotate, direction, absoluteInfo);\n        } else {\n            beforeDist = getAbsoluteDistByClient(nextClientX, nextClientY, beforeDirection, beforeInfo);\n            dist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, afterInfo);\n            absoluteDist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, absoluteInfo);\n            isSnap = true;\n        }\n        beforeRotation = startRotation + beforeDist;\n        rotation = startRotation + dist;\n        absoluteRotation = absoluteStartRotation + absoluteDist;\n\n\n        triggerEvent(moveable, \"onBeforeRotate\", fillParams<OnBeforeRotate>(moveable, e, {\n            beforeRotation,\n            rotation,\n            absoluteRotation,\n            setRotation(nextRotation: number) {\n                dist = nextRotation - startRotation;\n                beforeDist = dist;\n                absoluteDist = dist;\n            },\n        }, true));\n\n        [\n            beforeDelta,\n            beforeDist,\n            beforeRotation,\n        ] = getRotateInfo(moveable, rect, beforeInfo, beforeDist, startRotation, isSnap);\n\n        [\n            delta,\n            dist,\n            rotation,\n        ] = getRotateInfo(moveable, rect, afterInfo, dist, startRotation, isSnap);\n\n        [\n            absoluteDelta,\n            absoluteDist,\n            absoluteRotation,\n        ] = getRotateInfo(moveable, rect, absoluteInfo, absoluteDist, absoluteStartRotation, isSnap);\n\n        if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable) {\n            return;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `rotate(${rotation}deg)`, `rotate(${dist}deg)`,\n        );\n\n        const inverseDist = getRotateDist(moveable, dist, datas);\n        const inverseDelta = minus(\n            plus(groupDelta || [0, 0], inverseDist),\n            datas.prevInverseDist || [0, 0],\n        );\n        datas.prevInverseDist = inverseDist;\n\n        datas.requestValue = null;\n\n        const dragEvent = fillTransformEvent(\n            moveable,\n            nextTransform,\n            inverseDelta,\n            isPinch,\n            e,\n        );\n\n        let transformEvent: TransformObject = dragEvent;\n        const parentDistance = getDist(\n            [nextClientX, nextClientY],\n            absoluteInfo.startAbsoluteOrigin,\n        ) - absoluteInfo.startDist;\n\n        let resize: OnResize | undefined = undefined;\n\n        if (datas.resolveAble === \"resizable\") {\n            const resizeEvent = Resizable.dragControl(\n                moveable,\n                {\n                    ...setCustomDrag(e, moveable.state, [e.deltaX, e.deltaY], !!isPinch, false, \"resizable\"),\n                    resolveMatrix: true,\n                    parentDistance,\n                },\n            );\n\n            if (resizeEvent) {\n                resize = resizeEvent;\n                transformEvent = fillAfterTransform(transformEvent, resizeEvent, e);\n            }\n        }\n\n        const params = fillParams<OnRotate>(moveable, e, {\n            delta,\n            dist,\n            rotate: rotation,\n            rotation,\n\n            beforeDist,\n            beforeDelta,\n            beforeRotate: beforeRotation,\n            beforeRotation,\n\n            absoluteDist,\n            absoluteDelta,\n            absoluteRotate: absoluteRotation,\n            absoluteRotation,\n\n            isPinch: !!isPinch,\n            resize,\n            ...dragEvent,\n            ...transformEvent,\n        });\n        triggerEvent(moveable, \"onRotate\", params);\n\n        return params;\n    },\n    dragControlAfter(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const requestValue = e.datas.requestValue;\n\n        if (requestValue != null) {\n            // return this.dragControl(moveable, {...e, parentDist: });\n        }\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n        datas.isRotate = false;\n\n        const params = fillEndParams<OnRotateEnd>(moveable, e, {});\n\n        triggerEvent(moveable, \"onRotateEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: dragControlCondition as (moveable: any, e: any) => boolean,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const {\n            left: parentLeft,\n            top: parentTop,\n            beforeOrigin: parentBeforeOrigin,\n        } = moveable.state;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        params.set(datas.beforeDirection * moveable.rotation);\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                const { left, top, beforeOrigin } = child.state;\n                const childClient = plus(\n                    minus([left, top], [parentLeft, parentTop]),\n                    minus(beforeOrigin, parentBeforeOrigin),\n                );\n\n                ev.datas.startGroupClient = childClient;\n                ev.datas.groupClient = childClient;\n                return { ...ev, parentRotate: 0 };\n            },\n        );\n\n        const nextParams: OnRotateGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n\n        datas.isRotate = result !== false;\n\n        return datas.isRotate ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeRotate\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeRotateGroup\", fillParams<OnBeforeRotateGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const direction = datas.beforeDirection;\n        const parentRotate = params.beforeDist;\n        const rad = parentRotate / 180 * Math.PI;\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const startGroupClient = ev.datas.startGroupClient;\n                const [prevClientX, prevClientY] = ev.datas.groupClient;\n                const [clientX, clientY] = rotateMatrix(startGroupClient, rad * direction);\n                const delta = [clientX - prevClientX, clientY - prevClientY];\n\n                ev.datas.groupClient = [clientX, clientY];\n                return { ...ev, parentRotate, groupDelta: delta };\n            },\n        );\n        moveable.rotation = direction * params.beforeRotation;\n\n        const nextParams: OnRotateGroup = {\n            targets: moveable.props.targets!,\n            events,\n            set(rotation: number) {\n                moveable.rotation = rotation;\n            },\n            setGroupRotation(rotation: number) {\n                moveable.rotation = rotation;\n            },\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onRotateGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnRotateGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Rotatable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.deltaRotate=0] -  delta number of rotation\n     * @param {number} [e.rotate=0] - absolute number of moveable's rotation\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\n     *\n     * * moveable.request(\"rotatable\", { rotate: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"rotatable\");\n     *\n     * // request\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     *\n     * requester.request({ rotate: 10 });\n     * requester.request({ rotate: 20 });\n     * requester.request({ rotate: 30 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<RotatableProps>) {\n        const datas = {};\n        let distRotate = 0;\n\n        const startRotation = moveable.getRotation();\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaRotate\" in e) {\n                    distRotate += e.deltaRotate;\n                } else if (\"rotate\" in e) {\n                    distRotate = e.rotate - startRotation;\n                }\n\n                return { datas, parentDist: distRotate };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable.Rotatable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable.Rotatable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable.Rotatable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable.Rotatable\n * @event rotateStart\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n* When rotating, the rotate event is called.\n* @memberof Moveable.Rotatable\n* @event rotate\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { rotatable: true });\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\n*     target.style.transform = transform;\n* });\n*/\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable.Rotatable\n * @event rotateEnd\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupStart\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n/**\n* When the group rotate, the `rotateGroup` event is called.\n* @memberof Moveable.Rotatable\n* @event rotateGroup\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     rotatable: true\n* });\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\n*     console.log(\"onRotateGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group rotate.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const deg = ev.beforeDist;\n*     });\n* });\n*/\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupEnd\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    triggerEvent, multiply2,\n    fillParams, fillEndParams, getAbsolutePosesByState,\n    catchEvent, getOffsetSizeDist, getDirectionCondition, getDirectionViewClassName, getTotalDirection,\n} from \"../utils\";\nimport { MIN_SCALE } from \"../consts\";\nimport {\n    setDragStart, resolveTransformEvent,\n    convertTransformFormat,\n    getScaleDist,\n    fillTransformStartEvent,\n    fillTransformEvent,\n    getAbsolutePosition,\n    setDefaultTransformIndex,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { getRenderDirections } from \"../renderDirections\";\nimport {\n    ScalableProps, OnScaleGroup, OnScaleGroupEnd,\n    OnScaleGroupStart, DraggableProps, OnDragStart,\n    SnappableState, GroupableProps, OnScaleStart,\n    OnScale, OnScaleEnd, MoveableManagerInterface, MoveableGroupInterface,\n    OnBeforeScaleGroup,\n    OnBeforeScale,\n} from \"../types\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus, minus } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapScale } from \"./Snappable\";\nimport {\n    isArray, IObject, getDist,\n    throttle,\n} from \"@daybrush/utils\";\n\nconst directionCondition = getDirectionCondition(\"scalable\");\n\n/**\n * @namespace Scalable\n * @memberof Moveable\n * @description Scalable indicates whether the target's x and y can be scale of transform.\n */\nexport default {\n    name: \"scalable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        scalable: Boolean,\n        throttleScale: Number,\n        renderDirections: String,\n        keepRatio: Boolean,\n        edge: Boolean,\n    } as const,\n    events: {\n        onScaleStart: \"scaleStart\",\n        onBeforeScale: \"beforeScale\",\n        onScale: \"scale\",\n        onScaleEnd: \"scaleEnd\",\n        onScaleGroupStart: \"scaleGroupStart\",\n        onBeforeScaleGroup: \"beforeScaleGroup\",\n        onScaleGroup: \"scaleGroup\",\n        onScaleGroupEnd: \"scaleGroupEnd\",\n    } as const,\n    render: getRenderDirections(\"scalable\"),\n    dragControlCondition: directionCondition,\n    viewClassName: getDirectionViewClassName(\"scalable\"),\n    dragControlStart(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const { datas, isPinch, inputEvent, parentDirection } = e;\n\n        const direction = getTotalDirection(\n            parentDirection,\n            isPinch,\n            inputEvent,\n            datas,\n        );\n        const {\n            width,\n            height,\n            targetTransform,\n            target,\n            pos1,\n            pos2,\n            pos4,\n        } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (!isPinch) {\n            setDragStart(moveable, e);\n        }\n        datas.datas = {};\n        datas.transform = targetTransform;\n        datas.prevDist = [1, 1];\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.startValue = [1, 1];\n\n        const scaleWidth = getDist(pos1, pos2);\n        const scaleHeight = getDist(pos2, pos4);\n        const isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n\n        datas.scaleWidth = scaleWidth;\n        datas.scaleHeight = scaleHeight;\n        datas.scaleXRatio = scaleWidth / width;\n        datas.scaleYRatio = scaleHeight / height;\n\n        setDefaultTransformIndex(e, \"scale\");\n\n\n\n        datas.isWidth = isWidth;\n\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n        }\n\n\n        datas.setFixedDirection = setFixedDirection;\n        setRatio(getDist(pos1, pos2) / getDist(pos2, pos4));\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        const params = fillParams<OnScaleStart>(moveable, e, {\n            direction,\n            set: (scale: number[]) => {\n                datas.startValue = scale;\n            },\n            setRatio,\n            setFixedDirection,\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart,\n        });\n        const result = triggerEvent(moveable, \"onScaleStart\", params);\n\n        datas.startFixedDirection = datas.fixedDirection;\n\n        if (result !== false) {\n            datas.isScale = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n\n        }\n        return datas.isScale ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps & GroupableProps, SnappableState>,\n        e: any) {\n        resolveTransformEvent(e, \"scale\");\n        const {\n            datas,\n            parentKeepRatio,\n            parentFlag, isPinch,\n            dragClient,\n            isRequest,\n        } = e;\n        const {\n            prevDist,\n            direction,\n            startOffsetWidth,\n            startOffsetHeight,\n            isScale,\n            startValue,\n            isWidth,\n            ratio,\n        } = datas;\n\n        if (!isScale) {\n            return false;\n        }\n\n        const props = moveable.props;\n        const {\n            throttleScale,\n            parentMoveable,\n        } = props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\n        const state = moveable.state;\n\n        function getNextScale() {\n            const {\n                distWidth,\n                distHeight,\n            } = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n\n\n            let scaleX = startOffsetWidth ? (startOffsetWidth + distWidth) / startOffsetWidth : 1;\n            let scaleY = startOffsetHeight ? (startOffsetHeight + distHeight) / startOffsetHeight : 1;\n\n            scaleX = sizeDirection[0] || keepRatio ? scaleX * startValue[0] : startValue[0];\n            scaleY = sizeDirection[1] || keepRatio ? scaleY * startValue[1] : startValue[1];\n\n            if (scaleX === 0) {\n                scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n            }\n            if (scaleY === 0) {\n                scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n            }\n            return [scaleX, scaleY];\n        }\n\n\n        let scale = getNextScale();\n\n        if (!isPinch && moveable.props.groupable) {\n            const snapRenderInfo = state.snapRenderInfo || {};\n            const stateDirection = snapRenderInfo.direction;\n\n            if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n                state.snapRenderInfo = { direction, request: e.isRequest };\n            }\n        }\n\n        triggerEvent(moveable, \"onBeforeScale\", fillParams<OnBeforeScale>(moveable, e, {\n            scale,\n            setFixedDirection(nextFixedDirection: number[]) {\n                datas.setFixedDirection(nextFixedDirection);\n\n                scale = getNextScale();\n\n                return scale;\n            },\n            startFixedDirection: datas.startFixedDirection,\n            setScale(nextScale: number[]) {\n                scale = nextScale;\n            },\n        }, true));\n\n        const dist = [scale[0] / startValue[0], scale[1] / startValue[1]];\n        let fixedPosition = dragClient;\n        let snapDist = [0, 0];\n\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n        if (!isPinch) {\n            snapDist = checkSnapScale(\n                moveable,\n                dist,\n                direction,\n                isRequest,\n                datas,\n            );\n        }\n\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0] * startOffsetWidth) > Math.abs(snapDist[1] * startOffsetHeight)) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n                } else {\n                    dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                dist[0] += snapDist[0];\n                const snapHeight = startOffsetWidth * dist[0] * startValue[0] / ratio;\n\n                dist[1] = snapHeight / startOffsetHeight / startValue[1];\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                dist[1] += snapDist[1];\n                const snapWidth = startOffsetHeight * dist[1] * startValue[1] * ratio;\n\n                dist[0] = snapWidth / startOffsetWidth / startValue[0];\n            }\n        } else {\n            dist[0] += snapDist[0];\n            dist[1] += snapDist[1];\n            if (!snapDist[0]) {\n                dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n            }\n            if (!snapDist[1]) {\n                dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n            }\n        }\n\n        if (dist[0] === 0) {\n            dist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (dist[1] === 0) {\n            dist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        const delta = [dist[0] / prevDist[0], dist[1] / prevDist[1]];\n        scale = multiply2(dist, startValue);\n\n        const inverseDist = getScaleDist(moveable, dist, datas.fixedDirection, fixedPosition, datas);\n        const inverseDelta = minus(inverseDist, datas.prevInverseDist || [0, 0]);\n\n        datas.prevDist = dist;\n        datas.prevInverseDist = inverseDist;\n        if (\n            scale[0] === prevDist[0] && scale[1] === prevDist[1]\n            && inverseDelta.every(num => !num)\n            && !parentMoveable\n        ) {\n            return false;\n        }\n\n\n        const nextTransform = convertTransformFormat(\n            datas, `scale(${scale.join(\", \")})`, `scale(${dist.join(\", \")})`);\n        const params = fillParams<OnScale>(moveable, e, {\n            offsetWidth: startOffsetWidth,\n            offsetHeight: startOffsetHeight,\n            direction,\n\n            scale,\n            dist,\n            delta,\n\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onScale\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScalableProps>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return false;\n        }\n\n        datas.isScale = false;\n\n        const scaleEndParam = fillEndParams<OnScaleEnd>(moveable, e, {});\n        triggerEvent(moveable, \"onScaleEnd\", scaleEndParam);\n        return scaleEndParam;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n            const startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n            const pos = getPosByDirection(startPositions, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n\n        datas.moveableScale = moveable.scale;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n        const setFixedDirection = (fixedDirection: number[]) => {\n            params.setFixedDirection(fixedDirection);\n            events.forEach((ev, i) => {\n                ev.setFixedDirection(fixedDirection);\n                setDist(ev.moveable, originalEvents[i]);\n            });\n        };\n\n        datas.setFixedDirection = setFixedDirection;\n        const nextParams: OnScaleGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection,\n        };\n        const result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n\n        datas.isScale = result !== false;\n        return datas.isScale ? nextParams : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeScale\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeScaleGroup\", fillParams<OnBeforeScaleGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n\n        const params = this.dragControl(moveable, e);\n        if (!params) {\n            return;\n        }\n\n        const moveableScale = datas.moveableScale;\n        moveable.scale = [\n            params.scale[0] * moveableScale[0],\n            params.scale[1] * moveableScale[1],\n        ];\n        const keepRatio = moveable.props.keepRatio;\n        const { dist, scale } = params;\n\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * dist[0],\n                        ev.datas.originalY * dist[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale: scale,\n                    parentKeepRatio: keepRatio,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                };\n            },\n        );\n        const nextParams: OnScaleGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onScaleGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isScale) {\n            return;\n        }\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnScaleGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Scalable#request\n     * @param {Moveable.Scalable.ScalableRequestParam} e - the Scalable's request parameter\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"scalable\");\n     *\n     * // request\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                distWidth += e.deltaWidth;\n                distHeight += e.deltaHeight;\n\n                return { datas, parentDist: [distWidth, distHeight], parentKeepRatio: e.keepRatio };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can scaled.\n *\n * @name Moveable.Scalable#scalable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable.Scalable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Scalable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Scalable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable.Scalable\n * @event scaleStart\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, `beforeScale` is called before `scale` occurs. In `beforeScale`, you can get and set the pre-value before scaling.\n * @memberof Moveable.Scalable\n * @event beforeScale\n * @param {Moveable.Scalable.OnBeforeScale} - Parameters for the `beforeScale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"beforeScale\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When scaling, the `scale` event is called.\n * @memberof Moveable.Scalable\n * @event scale\n * @param {Moveable.Scalable.OnScale} - Parameters for the `scale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the `scaleEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleEnd\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the `scaleEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group scale starts, the `scaleGroupStart` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroupStart\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\n*     console.log(\"onScaleGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group scale, the `scaleGroup` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroup\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\n*     console.log(\"onScaleGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group scale.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const scaleX = ev.scale[0];\n*         const scaleY = ev.scale[1];\n*     });\n* });\n*/\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleGroupEnd\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, getLineStyle, getDirection, getAbsolutePosesByState,\n    triggerEvent, fillParams, fillEndParams, getDirectionViewClassName,\n} from \"../utils\";\nimport {\n    convertDimension, invert, multiply,\n    calculate,\n    createIdentityMatrix,\n    ignoreDimension,\n    minus,\n    createWarpMatrix,\n    plus,\n} from \"@scena/matrix\";\nimport { NEARBY_POS } from \"../consts\";\nimport {\n    setDragStart, getDragDist, getPosIndexesByDirection, setDefaultTransformIndex,\n    fillTransformStartEvent, resolveTransformEvent,\n    convertTransformFormat, fillOriginalTransform, getTransfromMatrix,\n} from \"../gesto/GestoUtils\";\nimport {\n    WarpableProps, ScalableProps, ResizableProps,\n    Renderer, SnappableProps, SnappableState,\n    OnWarpStart, OnWarp, OnWarpEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { hasClass, dot, getRad } from \"@daybrush/utils\";\nimport { renderAllDirections } from \"../renderDirections\";\nimport { hasGuidelines } from \"./snappable/utils\";\nimport { checkMoveableSnapBounds } from \"./snappable/snapBounds\";\n\nfunction getMiddleLinePos(pos1: number[], pos2: number[]) {\n    return pos1.map((pos, i) => dot(pos, pos2[i], 1, 2));\n}\n\nfunction getTriangleRad(pos1: number[], pos2: number[], pos3: number[]) {\n    // pos1 Rad\n    const rad1 = getRad(pos1, pos2);\n    const rad2 = getRad(pos1, pos3);\n\n    const rad = rad2 - rad1;\n\n    return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\n\nfunction isValidPos(poses1: number[][], poses2: number[][]) {\n    const rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n    const rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n    const pi = Math.PI;\n\n    if ((rad1 >= pi && rad2 <= pi) || (rad1 <= pi && rad2 >= pi)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * @namespace Moveable.Warpable\n * @description Warpable indicates whether the target can be warped(distorted, bented).\n */\nexport default {\n    name: \"warpable\",\n    ableGroup: \"size\",\n    props: {\n        warpable: Boolean,\n        renderDirections: Array,\n        edge: Boolean,\n    } as const,\n    events: {\n        onWarpStart: \"warpStart\",\n        onWarp: \"warp\",\n        onWarpEnd: \"warpEnd\",\n    } as const,\n    viewClassName: getDirectionViewClassName(\"warpable\"),\n    render(moveable: MoveableManagerInterface<ResizableProps & ScalableProps & WarpableProps>, React: Renderer): any[] {\n        const { resizable, scalable, warpable, zoom } = moveable.props;\n\n        if (resizable || scalable || !warpable) {\n            return [];\n        }\n        const { pos1, pos2, pos3, pos4 } = moveable.state;\n\n        const linePosFrom1 = getMiddleLinePos(pos1, pos2);\n        const linePosFrom2 = getMiddleLinePos(pos2, pos1);\n        const linePosFrom3 = getMiddleLinePos(pos1, pos3);\n        const linePosFrom4 = getMiddleLinePos(pos3, pos1);\n        const linePosTo1 = getMiddleLinePos(pos3, pos4);\n        const linePosTo2 = getMiddleLinePos(pos4, pos3);\n        const linePosTo3 = getMiddleLinePos(pos2, pos4);\n        const linePosTo4 = getMiddleLinePos(pos4, pos2);\n\n        return [\n            <div className={prefix(\"line\")}\n                key=\"middeLine1\" style={getLineStyle(linePosFrom1, linePosTo1, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine2\" style={getLineStyle(linePosFrom2, linePosTo2, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine3\" style={getLineStyle(linePosFrom3, linePosTo3, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine4\" style={getLineStyle(linePosFrom4, linePosTo4, zoom)}></div>,\n            ...renderAllDirections(moveable, \"warpable\", React),\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (e.isRequest) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"warpable\"));\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<WarpableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, inputEvent } = e;\n        const { target } = moveable.props;\n        const { target: inputTarget } = inputEvent;\n        const direction = getDirection(inputTarget, datas);\n\n        if (!direction || !target) {\n            return false;\n        }\n        const state = moveable.state;\n        const {\n            transformOrigin, is3d,\n            targetTransform, targetMatrix,\n            width, height,\n            left, top,\n        } = state;\n\n        datas.datas = {};\n        datas.targetTransform = targetTransform;\n        datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n        datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n        datas.direction = direction;\n        datas.left = left;\n        datas.top = top;\n        datas.poses = [\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n        ].map(p => minus(p, transformOrigin));\n\n        datas.nextPoses = datas.poses.map(([x, y]: number[]) => calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4));\n        datas.startValue = createIdentityMatrix(4);\n        datas.prevMatrix = createIdentityMatrix(4);\n        datas.absolutePoses = getAbsolutePosesByState(state);\n        datas.posIndexes = getPosIndexesByDirection(direction);\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"matrix3d\");\n\n        state.snapRenderInfo = {\n            request: e.isRequest,\n            direction,\n        };\n\n        const params = fillParams<OnWarpStart>(moveable, e, {\n            set: (matrix: number[]) => {\n                datas.startValue = matrix;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = triggerEvent(moveable, \"onWarpStart\", params);\n        if (result !== false) {\n            datas.isWarp = true;\n        }\n        return datas.isWarp;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<WarpableProps & SnappableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, isRequest } = e;\n        let { distX, distY } = e;\n        const {\n            targetInverseMatrix, prevMatrix, isWarp, startValue,\n            poses,\n            posIndexes,\n            absolutePoses,\n        } = datas;\n\n        if (!isWarp) {\n            return false;\n        }\n        resolveTransformEvent(e, \"matrix3d\");\n        if (hasGuidelines(moveable, \"warpable\")) {\n            const selectedPoses: number[][] = posIndexes.map((index: number) => absolutePoses[index]);\n\n            if (selectedPoses.length > 1) {\n                selectedPoses.push([\n                    (selectedPoses[0][0] + selectedPoses[1][0]) / 2,\n                    (selectedPoses[0][1] + selectedPoses[1][1]) / 2,\n                ]);\n            }\n\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkMoveableSnapBounds(\n                moveable,\n                isRequest,\n                {\n                    horizontal: selectedPoses.map(pos => pos[1] + distY),\n                    vertical: selectedPoses.map(pos => pos[0] + distX),\n                },\n            );\n\n            distY -= horizontalSnapInfo.offset;\n            distX -= verticalSnapInfo.offset;\n        }\n\n        const dist = getDragDist({ datas, distX, distY }, true);\n        const nextPoses = datas.nextPoses.slice();\n\n        posIndexes.forEach((index: number) => {\n            nextPoses[index] = plus(nextPoses[index], dist);\n        });\n\n        if (!NEARBY_POS.every(\n            nearByPoses => isValidPos(nearByPoses.map(i => poses[i]), nearByPoses.map(i => nextPoses[i])),\n        )) {\n            return false;\n        }\n        const h = createWarpMatrix(\n            poses[0],\n            poses[2],\n            poses[1],\n            poses[3],\n            nextPoses[0],\n            nextPoses[2],\n            nextPoses[1],\n            nextPoses[3],\n        );\n\n        if (!h.length) {\n            return false;\n        }\n        // B * A * M\n        const afterMatrix = multiply(targetInverseMatrix, h, 4);\n\n        // B * M * A\n        const matrix = getTransfromMatrix(datas, afterMatrix, true);\n\n        const delta = multiply(invert(prevMatrix, 4), matrix, 4);\n\n        datas.prevMatrix = matrix;\n        const totalMatrix = multiply(startValue, matrix, 4);\n        const nextTransform = convertTransformFormat(\n            datas, `matrix3d(${totalMatrix.join(\", \")})`, `matrix3d(${matrix.join(\", \")})`);\n\n        fillOriginalTransform(e, nextTransform);\n        triggerEvent(moveable, \"onWarp\", fillParams<OnWarp>(moveable, e, {\n            delta,\n            matrix: totalMatrix,\n            dist: matrix,\n            multiply,\n            transform: nextTransform,\n        }));\n        return true;\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<WarpableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isWarp) {\n            return false;\n        }\n        datas.isWarp = false;\n\n        triggerEvent(moveable, \"onWarpEnd\", fillEndParams<OnWarpEnd>(moveable, e, {}));\n        return isDrag;\n    },\n};\n\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable.Warpable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n\n/**\n* Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n* @name Moveable.Warpable#renderDirections\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     warpable: true,\n*     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n* });\n*\n* moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n*/\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable.Warpable\n* @event warpStart\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n/**\n * When warping, the warp event is called.\n * @memberof Moveable.Warpable\n * @event warp\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable.Warpable\n * @event warpEnd\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n","import { prefix } from \"./utils\";\n\nexport const AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\nexport const AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\nexport const AVOID = /*#__PURE__*/prefix(\"avoid\");\nexport const VIEW_DRAGGING = prefix(\"view-dragging\");\n","import {\n    createWarpMatrix,\n} from \"@scena/matrix\";\nimport { ref } from \"framework-utils\";\nimport { getRect, calculateInversePosition, makeMatrixCSS, prefix } from \"../utils\";\nimport {\n    Renderer, GroupableProps, DragAreaProps, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { AREA_PIECE, AVOID, AREA_PIECES } from \"../classNames\";\nimport { addClass, removeClass, requestAnimationFrame } from \"@daybrush/utils\";\n\nfunction restoreStyle(moveable: MoveableManagerInterface) {\n    const el = moveable.areaElement;\n\n    if (!el) {\n        return;\n    }\n    const { width, height } = moveable.state;\n\n    removeClass(el, AVOID);\n\n    el.style.cssText += `left: 0px; top: 0px; width: ${width}px; height: ${height}px`;\n}\n\nfunction renderPieces(React: Renderer): any {\n    return (<div key=\"area_pieces\" className={AREA_PIECES}>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n    </div>);\n}\nexport default {\n    name: \"dragArea\",\n    props: {\n        dragArea: Boolean,\n        passDragArea: Boolean,\n    } as const,\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    render(moveable: MoveableManagerInterface<GroupableProps>, React: Renderer): any[] {\n        const { target, dragArea, groupable, passDragArea } = moveable.props;\n        const { width, height, renderPoses } = moveable.getState();\n\n        const className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n        if (groupable) {\n            return [\n                <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className}></div>,\n                renderPieces(React),\n            ];\n        }\n        if (!target || !dragArea) {\n            return [];\n        }\n        const h = createWarpMatrix(\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n            renderPoses[0],\n            renderPoses[1],\n            renderPoses[2],\n            renderPoses[3],\n        );\n        const transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n\n        return [\n            <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className} style={{\n                top: \"0px\",\n                left: \"0px\",\n                width: `${width}px`,\n                height: `${height}px`,\n                transformOrigin: \"0 0\",\n                transform,\n            }}></div>,\n            renderPieces(React),\n        ];\n    },\n    dragStart(moveable: MoveableManagerInterface, { datas, clientX, clientY, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        datas.isDragArea = false;\n        const areaElement = moveable.areaElement;\n        const state = moveable.state;\n        const {\n            moveableClientRect,\n            renderPoses,\n            rootMatrix,\n            is3d,\n        } = state;\n        const { left, top } = moveableClientRect;\n        const {\n            left: relativeLeft,\n            top: relativeTop,\n            width,\n            height,\n        } = getRect(renderPoses);\n        const n = is3d ? 4 : 3;\n        let [posX, posY] = calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n);\n\n        posX -= relativeLeft;\n        posY -= relativeTop;\n        const rects = [\n            { left: relativeLeft, top: relativeTop, width, height: posY - 10 },\n            { left: relativeLeft, top: relativeTop, width: posX - 10, height },\n            { left: relativeLeft, top: relativeTop + posY + 10, width, height: height - posY - 10 },\n            { left: relativeLeft + posX + 10, top: relativeTop, width: width - posX - 10, height },\n        ];\n\n        const children = [].slice.call(areaElement.nextElementSibling!.children) as HTMLElement[];\n        rects.forEach((rect, i) => {\n            children[i].style.cssText\n                = `left: ${rect.left}px;top: ${rect.top}px; width: ${rect.width}px; height: ${rect.height}px;`;\n        });\n        addClass(areaElement, AVOID);\n        state.disableNativeEvent = true;\n        return;\n    },\n    drag(moveable: MoveableManagerInterface, { datas, inputEvent }: any) {\n        this.enableNativeEvent(moveable);\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            datas.isDragArea = true;\n            restoreStyle(moveable);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<DragAreaProps>, e: any) {\n        this.enableNativeEvent(moveable);\n        const { inputEvent, datas } = e;\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            restoreStyle(moveable);\n        }\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<DragAreaProps>,\n        e: any,\n    ) {\n        return this.dragEnd(moveable, e);\n    },\n    unset(moveable: MoveableManagerInterface<DragAreaProps>) {\n        restoreStyle(moveable);\n        moveable.state.disableNativeEvent = false;\n    },\n    enableNativeEvent(moveable: MoveableManagerInterface<DragAreaProps>) {\n        const state = moveable.state;\n        if (state.disableNativeEvent) {\n            requestAnimationFrame(() => {\n                state.disableNativeEvent = false;\n            });\n        }\n    },\n};\n\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n/**\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\n * @name Moveable#passDragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n","import { prefix, getControlTransform } from \"../utils\";\nimport { Renderer, OriginOptions, MoveableManagerInterface } from \"../types\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"origin\", {\n    render(moveable: MoveableManagerInterface<OriginOptions>, React: Renderer): any[] {\n        const { zoom } = moveable.props;\n        const { beforeOrigin, rotation } = moveable.getState();\n\n        return [\n            <div className={prefix(\"control\", \"origin\")}\n                style={getControlTransform(rotation, zoom!, beforeOrigin)} key=\"beforeOrigin\"></div>,\n        ];\n    },\n});\n\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n","\nimport {\n    ScrollableProps, OnScroll, MoveableManagerInterface,\n    MoveableGroupInterface, MoveableRefType,\n} from \"../types\";\nimport { triggerEvent, fillParams, getRefTarget } from \"../utils\";\nimport DragScroll from \"@scena/dragscroll\";\n\nfunction getDefaultScrollPosition(e: { scrollContainer: HTMLElement, direction: number[] }) {\n    const scrollContainer = e.scrollContainer;\n\n    return [\n        scrollContainer.scrollLeft,\n        scrollContainer.scrollTop,\n    ];\n}\n/**\n * @namespace Moveable.Scrollable\n * @description Whether or not target can be scrolled to the scroll container (default: false)\n */\nexport default {\n    name: \"scrollable\",\n    canPinch: true,\n    props: {\n        scrollable: Boolean,\n        scrollContainer: Object,\n        scrollThreshold: Number,\n        scrollThrottleTime: Number,\n        getScrollPosition: Function,\n    } as const,\n    events: {\n        onScroll: \"scroll\",\n        onScrollGroup: \"scrollGroup\",\n    } as const,\n    dragRelation: \"strong\",\n    dragStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const props = moveable.props;\n        const {\n            scrollContainer = moveable.getContainer() as HTMLElement,\n        } = props;\n\n        const dragScroll = new DragScroll();\n        const scrollContainerElement = getRefTarget<HTMLElement>(scrollContainer, true);\n\n        e.datas.dragScroll = dragScroll;\n\n        const gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n        const targets = e.targets;\n\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\n            const params = fillParams<OnScroll>(moveable, e, {\n                scrollContainer: container,\n                direction,\n            }) as any;\n\n            const eventName = targets ? \"onScrollGroup\" : \"onScroll\" as any;\n            if (targets) {\n                params.targets = targets;\n            }\n            triggerEvent(moveable, eventName, params);\n        }).on(\"move\", ({ offsetX, offsetY, inputEvent }) => {\n            moveable[gestoName].scrollBy(offsetX, offsetY, inputEvent.inputEvent, false);\n        });\n        dragScroll.dragStart(e, {\n            container: scrollContainerElement!,\n        });\n    },\n    checkScroll(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const dragScroll = e.datas.dragScroll as DragScroll;\n\n        if (!dragScroll) {\n            return;\n        }\n        const {\n            scrollContainer = moveable.getContainer() as MoveableRefType<HTMLElement>,\n            scrollThreshold = 0,\n            scrollThrottleTime = 0,\n            getScrollPosition = getDefaultScrollPosition,\n        } = moveable.props;\n\n        dragScroll.drag(e, {\n            container: scrollContainer!,\n            threshold: scrollThreshold,\n            throttleTime: scrollThrottleTime,\n            getScrollPosition: (ev: any) => {\n                return getScrollPosition({ scrollContainer: ev.container, direction: ev.direction });\n            },\n        });\n\n        return true;\n    },\n    drag(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.checkScroll(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        e.datas.dragScroll.dragEnd();\n        e.datas.dragScroll = null;\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragStart(moveable, { ...e, isControl: true });\n    },\n    dragControl(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets, isControl: true });\n    },\n    dragGroupContro(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n};\n\n/**\n * Whether or not target can be scrolled to the scroll container\n * @name Moveable.Scrollable#scrollable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 100,\n *   scrollThrottleTime: 30,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n * moveable.scrollable = true;\n */\n\n/**\n * The container to which scroll is applied\n * @name Moveable.Scrollable#scrollContainer\n * @default container\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 100,\n *   scrollThrottleTime: 30,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n/**\n * Expand the range of the scroll check area.\n * @name Moveable.Scrollable#scrollThreshold\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 100,\n *   scrollThrottleTime: 30,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Time interval that occurs when scrolling occurs when dragging is maintained\n * If set to 0, it does not occur.\n * @name Moveable.Scrollable#scrollThreshold\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 100,\n *   scrollThrottleTime: 30,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Sets a function to get the scroll position.\n * @name Moveable.Scrollable#getScrollPosition\n * @default container's scroll pos array\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 100,\n *   scrollThrottleTime: 30,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable.Scrollable\n * @event scroll\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable.Scrollable\n * @event scrollGroup\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n","export default {\n    name: \"\",\n    props: {\n        target: Object,\n        dragTarget: Object,\n        container: Object,\n        portalContainer: Object,\n        rootContainer: Object,\n        useResizeObserver: Boolean,\n        zoom: Number,\n        transformOrigin: Array,\n        edge: Object,\n        ables: Array,\n        className: String,\n        pinchThreshold: Number,\n        pinchOutside: Boolean,\n        triggerAblesSimultaneously: Boolean,\n        checkInput: Boolean,\n        cspNonce: String,\n        translateZ: Number,\n        hideDefaultLines: Boolean,\n        props: Object,\n        flushSync: Function,\n        stopPropagation: Boolean,\n        preventClickEventOnDrag: Boolean,\n        preventClickDefault: Boolean,\n        viewContainer: Object,\n        persistData: Object,\n        firstRenderState: Object,\n    } as const,\n    events: {\n        onChangeTargets: \"changeTargets\",\n    } as const,\n};\n","import { prefix, makeMatrixCSS } from \"../utils\";\nimport { Renderer, MoveableManagerInterface } from \"../types\";\nimport { createWarpMatrix } from \"@scena/matrix\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"padding\", {\n    render(moveable: MoveableManagerInterface, React: Renderer): any[] {\n        const props = moveable.props;\n        if (props.dragArea) {\n            return [];\n        }\n        const padding = props.padding || {};\n        const {\n            left = 0,\n            top = 0,\n            right = 0,\n            bottom = 0,\n        } = padding;\n        const {\n            renderPoses,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        } = moveable.getState();\n\n        const poses = [pos1, pos2, pos3, pos4];\n        const paddingDirections: number[][] = [];\n\n        if (left > 0) {\n            paddingDirections.push([0, 2]);\n        }\n        if (top > 0) {\n            paddingDirections.push([0, 1]);\n        }\n        if (right > 0) {\n            paddingDirections.push([1, 3]);\n        }\n        if (bottom > 0) {\n            paddingDirections.push([2, 3]);\n        }\n        return paddingDirections.map(([dir1, dir2], i) => {\n            const paddingPos1 = poses[dir1];\n            const paddingPos2 = poses[dir2];\n            const paddingPos3 = renderPoses[dir1];\n            const paddingPos4 = renderPoses[dir2];\n\n            const h = createWarpMatrix(\n                [0, 0],\n                [100, 0],\n                [0, 100],\n                [100, 100],\n                paddingPos1,\n                paddingPos2,\n                paddingPos3,\n                paddingPos4,\n            );\n            if (!h.length) {\n                return undefined;\n            }\n            return (<div key={`padding${i}`} className={prefix(\"padding\")} style={{\n                transform: makeMatrixCSS(h, true),\n            }}></div>);\n        });\n    },\n});\n\n/**\n * Add padding around the target to increase the drag area.\n * @name Moveable#padding\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  target: document.querySelector(\".target\"),\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\n * });\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\n * moveable.updateRect();\n */\n","import { convertCSSSize } from \"../../utils\";\nimport { ControlPose } from \"../../types\";\nimport { convertUnitSize } from \"@daybrush/utils\";\n\nconst RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"] as const;\n\nfunction calculateRatio(values: number[], size: number) {\n    const sumSize = values[0] + values[1];\n    const sumRatio = sumSize > size ? size / sumSize : 1;\n\n    values[0] *= sumRatio;\n    values[1] = size - values[1] * sumRatio;\n\n    return values;\n}\nexport const HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nexport const VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nexport const HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1] as const;\nexport const VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1] as const;\n\nexport function getRadiusStyles(\n    nextPoses: ControlPose[],\n    isRelative: boolean,\n    width: number,\n    height: number,\n    left = 0,\n    top = 0,\n    right: number = width,\n    bottom: number = height,\n) {\n    const clipStyles: string[] = [];\n    let isVertical = false;\n\n    const radiusPoses = nextPoses.filter(pos => !pos.virtual);\n    const raws = radiusPoses.map(posInfo => {\n        const { horizontal, vertical, pos } = posInfo;\n\n        if (vertical && !isVertical) {\n            isVertical = true;\n            clipStyles.push(\"/\");\n        }\n\n        if (isVertical) {\n            const rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n            clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n\n            return rawPos;\n        } else {\n            const rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n            clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n\n            return rawPos;\n        }\n    });\n\n    return {\n        radiusPoses,\n        styles: clipStyles,\n        raws,\n    };\n}\nexport function getRadiusRange(controlPoses: ControlPose[]) {\n    // [start, length]\n    const horizontalRange = [0, 0];\n    const verticalRange = [0, 0];\n    const length = controlPoses.length;\n\n    for (let i = 0; i < length; ++i) {\n        const clipPose = controlPoses[i];\n\n        if (!clipPose.sub) {\n            continue;\n        }\n        if (clipPose.horizontal) {\n            if (horizontalRange[1] === 0) {\n                horizontalRange[0] = i;\n            }\n            horizontalRange[1] = i - horizontalRange[0] + 1;\n            verticalRange[0] = i + 1;\n        }\n        if (clipPose.vertical) {\n            if (verticalRange[1] === 0) {\n                verticalRange[0] = i;\n            }\n            verticalRange[1] = i - verticalRange[0] + 1;\n        }\n    }\n\n    return {\n        horizontalRange,\n        verticalRange,\n    };\n}\nexport function getRadiusValues(\n    values: string[],\n    width: number,\n    height: number,\n    left: number,\n    top: number,\n    minCounts: number[] = [0, 0],\n    full = false,\n): ControlPose[] {\n    const splitIndex = values.indexOf(\"/\");\n    const splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n    const horizontalValues = values.slice(0, splitLength);\n    const verticalValues = values.slice(splitLength + 1);\n    const horizontalValuesLength = horizontalValues.length;\n    const verticalValuesLength = verticalValues.length;\n    const hasVerticalValues = verticalValuesLength > 0;\n    const [\n        nwValue = \"0px\",\n        neValue = nwValue,\n        seValue = nwValue,\n        swValue = neValue,\n    ] = horizontalValues;\n    const [\n        wnValue = nwValue,\n        enValue = hasVerticalValues ? wnValue : neValue,\n        esValue = hasVerticalValues ? wnValue : seValue,\n        wsValue = hasVerticalValues ? enValue : swValue,\n    ] = verticalValues;\n\n    const horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(pos => convertUnitSize(pos, width));\n    const verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(pos => convertUnitSize(pos, height));\n    const horizontalPoses = horizontalRawPoses.slice();\n    const verticalPoses = verticalRawPoses.slice();\n\n    [horizontalPoses[0], horizontalPoses[1]] = calculateRatio(\n        [horizontalPoses[0], horizontalPoses[1]],\n        width,\n    );\n    [horizontalPoses[3], horizontalPoses[2]] = calculateRatio(\n        [horizontalPoses[3], horizontalPoses[2]],\n        width,\n    );\n    [verticalPoses[0], verticalPoses[3]] = calculateRatio(\n        [verticalPoses[0], verticalPoses[3]], height,\n    );\n    [verticalPoses[1], verticalPoses[2]] = calculateRatio(\n        [verticalPoses[1], verticalPoses[2]], height,\n    );\n\n    const nextHorizontalPoses = full\n        ? horizontalPoses\n        : horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValuesLength));\n    const nextVerticalPoses = full\n        ? verticalPoses\n        : verticalPoses.slice(0, Math.max(minCounts[1], verticalValuesLength));\n\n    return [\n        ...nextHorizontalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                virtual: i >= horizontalValuesLength,\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n                sub: true,\n                raw: horizontalRawPoses[i],\n                direction,\n            };\n        }),\n        ...nextVerticalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                virtual: i >= verticalValuesLength,\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n                sub: true,\n                raw: verticalRawPoses[i],\n                direction,\n            };\n        }),\n    ];\n}\nexport function removeRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    index: number,\n    startIndex: number,\n    length: number = poses.length,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    const radiuslIndex = index - startIndex;\n    let deleteCount = 0;\n\n    if (radiuslIndex === 0) {\n        deleteCount = length;\n    } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n        deleteCount = horizontalRange[1] - radiuslIndex;\n    } else if (radiuslIndex >= verticalRange[0]) {\n        deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n    } else {\n        return;\n    }\n    controlPoses.splice(index, deleteCount);\n    poses.splice(index, deleteCount);\n}\nexport function addRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    startIndex: number,\n    horizontalIndex: number,\n    verticalIndex: number,\n    distX: number,\n    distY: number,\n    right: number,\n    bottom: number,\n    left = 0,\n    top = 0,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    if (horizontalIndex > -1) {\n        const radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1\n            ? distX - left\n            : right - distX;\n        for (let i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n            const y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n            let x = 0;\n            if (horizontalIndex === i) {\n                x = distX;\n            } else if (i === 0) {\n                x = left + radiusX;\n            } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n                x = right - (poses[startIndex][0] - left);\n            }\n            controlPoses.splice(startIndex + i, 0, {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [x, y],\n            });\n            poses.splice(startIndex + i, 0, [x, y]);\n\n            if (i === 0) {\n                break;\n            }\n        }\n    } else if (verticalIndex > - 1) {\n        const radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1\n            ? distY - top\n            : bottom - distY;\n        if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n            const pos = [\n                left + radiusY,\n                top,\n            ];\n            controlPoses.push({\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n                vertical: 0,\n                pos,\n            });\n            poses.push(pos);\n        }\n\n        const startVerticalIndex = verticalRange[0];\n        for (let i = verticalRange[1]; i <= verticalIndex; ++i) {\n            const x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n            let y = 0;\n            if (verticalIndex === i) {\n                y = distY;\n            } else if (i === 0) {\n                y = top + radiusY;\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n                y = poses[startIndex + startVerticalIndex][1];\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n                y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n            }\n            controlPoses.push({\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [x, y],\n            });\n            poses.push([x, y]);\n            if (i === 0) {\n                break;\n            }\n        }\n    }\n}\nexport function splitRadiusPoses(\n    controlPoses: ControlPose[],\n    raws: number[] = controlPoses.map(pos => pos.raw!),\n) {\n    const horizontals = controlPoses\n        .map((pos, i) => pos.horizontal ? raws[i] : null).filter(pos => pos != null) as number[];\n    const verticals = controlPoses\n        .map((pos, i) => pos.vertical ? raws[i] : null).filter(pos => pos != null) as number[];\n\n    return {\n        horizontals,\n        verticals,\n    };\n}\n","import { splitBracket, splitComma, convertUnitSize, splitSpace, splitUnit } from \"@daybrush/utils\";\nimport { minus } from \"@scena/matrix\";\nimport { convertCSSSize } from \"../../utils\";\nimport { getRadiusStyles, getRadiusValues } from \"../roundable/borderRadius\";\nimport { MoveableManagerInterface, ClippableProps, ControlPose } from \"../../types\";\nimport { getMinMaxs } from \"overlap-area\";\n\n\nexport const CLIP_DIRECTIONS = [\n    [0, -1, \"n\"],\n    [1, 0, \"e\"],\n] as const;\n\nexport const CLIP_RECT_DIRECTIONS = [\n    [-1, -1, \"nw\"],\n    [0, -1, \"n\"],\n    [1, -1, \"ne\"],\n    [1, 0, \"e\"],\n    [1, 1, \"se\"],\n    [0, 1, \"s\"],\n    [-1, 1, \"sw\"],\n    [-1, 0, \"w\"],\n] as const;\n\n// 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\n\nexport function getClipStyles(\n    moveable: MoveableManagerInterface<ClippableProps>,\n    clipPath: ReturnType<typeof getClipPath>,\n    poses: number[][],\n) {\n    const {\n        clipRelative,\n    } = moveable.props;\n    const {\n        width,\n        height,\n    } = moveable.state;\n    const {\n        type: clipType,\n        poses: clipPoses,\n    } = clipPath!;\n\n    const isRect = clipType === \"rect\";\n    const isCircle = clipType === \"circle\";\n    if (clipType === \"polygon\") {\n        return poses.map(pos => `${convertCSSSize(pos[0], width, clipRelative)} ${convertCSSSize(pos[1], height, clipRelative)}`);\n    } else if (isRect || clipType === \"inset\") {\n        const top = poses[1][1];\n        const right = poses[3][0];\n        const left = poses[7][0];\n        const bottom = poses[5][1];\n\n        if (isRect) {\n            return [\n                top,\n                right,\n                bottom,\n                left,\n            ].map(pos => `${pos}px`);\n        }\n        const clipStyles\n            = [top, width - right, height - bottom, left]\n                .map((pos, i) => convertCSSSize(pos, i % 2 ? width : height, clipRelative));\n\n        if (poses.length > 8) {\n            const [subWidth, subHeight] = minus(poses[4], poses[0]);\n\n            clipStyles.push(\"round\", ...getRadiusStyles(\n                clipPoses.slice(8).map((info, i) => {\n                    return {\n                        ...info,\n                        pos: poses[i],\n                    };\n                }),\n                clipRelative!,\n                subWidth,\n                subHeight,\n                left, top, right, bottom,\n            ).styles);\n        }\n        return clipStyles;\n    } else if (isCircle || clipType === \"ellipse\") {\n        const center = poses[0];\n        const ry = convertCSSSize(\n            Math.abs(poses[1][1] - center[1]),\n            isCircle ? Math.sqrt((width * width + height * height) / 2) : height,\n            clipRelative,\n        );\n\n        const clipStyles = isCircle ? [ry]\n            : [convertCSSSize(Math.abs(poses[2][0] - center[0]), width, clipRelative), ry];\n\n        clipStyles.push(\n            \"at\", convertCSSSize(center[0], width, clipRelative),\n            convertCSSSize(center[1], height, clipRelative));\n\n        return clipStyles;\n    }\n}\n\nexport function getRectPoses(top: number, right: number, bottom: number, left: number): ControlPose[] {\n    const xs = [left, (left + right) / 2, right];\n    const ys = [top, (top + bottom) / 2, bottom];\n\n    return CLIP_RECT_DIRECTIONS.map(([dirx, diry, dir]) => {\n        const x = xs[dirx + 1];\n        const y = ys[diry + 1];\n        return {\n            vertical: Math.abs(diry),\n            horizontal: Math.abs(dirx),\n            direction: dir,\n            pos: [x, y],\n        };\n    });\n}\n\nexport function getControlSize(\n    controlPoses: ControlPose[],\n) {\n    const xRange = [Infinity, -Infinity];\n    const yRange = [Infinity, -Infinity];\n\n    controlPoses.forEach(({ pos }) => {\n        xRange[0] = Math.min(xRange[0], pos[0]);\n        xRange[1] = Math.max(xRange[1], pos[0]);\n        yRange[0] = Math.min(yRange[0], pos[1]);\n        yRange[1] = Math.max(yRange[1], pos[1]);\n    });\n\n    return [\n        Math.abs(xRange[1] - xRange[0]),\n        Math.abs(yRange[1] - yRange[0]),\n    ];\n}\n\n\nexport function getClipPath(\n    target: HTMLElement | SVGElement | undefined | null,\n    width: number,\n    height: number,\n    defaultClip?: string,\n    customClip?: string,\n) {\n    if (!target) {\n        return;\n    }\n    let clipText: string | undefined = customClip;\n\n    if (!clipText) {\n        const style = getComputedStyle(target!);\n        const clipPath = style.clipPath!;\n\n        clipText = clipPath !== \"none\" ? clipPath : style.clip!;\n    }\n    if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n        clipText = defaultClip;\n\n        if (!clipText) {\n            return;\n        }\n    }\n    const {\n        prefix: clipPrefix = clipText,\n        value = \"\",\n    } = splitBracket(clipText);\n    const isCircle = clipPrefix === \"circle\";\n    let splitter = \" \";\n\n    if (clipPrefix === \"polygon\") {\n        const values = splitComma(value! || `0% 0%, 100% 0%, 100% 100%, 0% 100%`);\n        splitter = \",\";\n\n        const poses: ControlPose[] = values.map(pos => {\n            const [xPos, yPos] = pos.split(\" \");\n\n            return {\n                vertical: 1,\n                horizontal: 1,\n                pos: [\n                    convertUnitSize(xPos, width),\n                    convertUnitSize(yPos, height),\n                ],\n            };\n        });\n        const minMaxs = getMinMaxs(poses.map(pos => pos.pos));\n\n        return {\n            type: clipPrefix,\n            clipText,\n            poses,\n            splitter,\n            left: minMaxs.minX,\n            right: minMaxs.maxX,\n            top: minMaxs.minY,\n            bottom: minMaxs.maxY,\n        } as const;\n    } else if (isCircle || clipPrefix === \"ellipse\") {\n        let xPos = \"\";\n        let yPos = \"\";\n        let radiusX = 0;\n        let radiusY = 0;\n        const values = splitSpace(value!);\n\n        if (isCircle) {\n            let radius = \"\";\n            [radius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n            radiusY = radiusX;\n        } else {\n            let xRadius = \"\";\n            let yRadius = \"\";\n            [xRadius = \"50%\", yRadius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(xRadius, width);\n            radiusY = convertUnitSize(yRadius, height);\n        }\n        const centerPos = [\n            convertUnitSize(xPos, width),\n            convertUnitSize(yPos, height),\n        ];\n        const poses: ControlPose[] = [\n            {\n                vertical: 1,\n                horizontal: 1,\n                pos: centerPos,\n                direction: \"nesw\",\n            },\n            ...CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(dir => ({\n                vertical: Math.abs(dir[1]),\n                horizontal: dir[0],\n                direction: dir[2],\n                sub: true,\n                pos: [\n                    centerPos[0] + dir[0] * radiusX,\n                    centerPos[1] + dir[1] * radiusY,\n                ],\n            })),\n        ];\n        return {\n            type: clipPrefix as \"circle\" | \"ellipse\",\n            clipText,\n            radiusX,\n            radiusY,\n            left: centerPos[0] - radiusX,\n            top: centerPos[1] - radiusY,\n            right: centerPos[0] + radiusX,\n            bottom: centerPos[1] + radiusY,\n            poses,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"inset\") {\n        const values = splitSpace(value! || \"0 0 0 0\");\n        const roundIndex = values.indexOf(\"round\");\n\n        const rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n        const radiusValues = values.slice(rectLength + 1);\n        const [\n            topValue,\n            rightValue = topValue,\n            bottomValue = topValue,\n            leftValue = rightValue,\n        ] = values.slice(0, rectLength);\n        const [top, bottom] = [topValue, bottomValue].map(pos => convertUnitSize(pos, height));\n        const [left, right] = [leftValue, rightValue].map(pos => convertUnitSize(pos, width));\n        const nextRight = width - right;\n        const nextBottom = height - bottom;\n        const radiusPoses = getRadiusValues(\n            radiusValues,\n            nextRight - left,\n            nextBottom - top,\n            left,\n            top,\n        );\n        const poses: ControlPose[] = [\n            ...getRectPoses(top, nextRight, nextBottom, left),\n            ...radiusPoses,\n        ];\n\n        return {\n            type: \"inset\",\n            clipText,\n            poses,\n            top,\n            left,\n            right: nextRight,\n            bottom: nextBottom,\n            radius: radiusValues,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"rect\") {\n        // top right bottom left\n        const values = splitComma(value! || `0px, ${width}px, ${height}px, 0px`);\n\n        splitter = \",\";\n        const [top, right, bottom, left] = values.map(pos => {\n            const { value: posValue } = splitUnit(pos);\n\n            return posValue;\n        });\n        const poses = getRectPoses(top, right, bottom, left);\n\n        return {\n            type: \"rect\",\n            clipText,\n            poses,\n            top,\n            right,\n            bottom,\n            left,\n            values,\n            splitter,\n        } as const;\n    }\n    return;\n}\n","import {\n    Renderer, ClippableProps, OnClip,\n    ClippableState, OnClipEnd, OnClipStart,\n    ControlPose, MoveableManagerInterface, DraggableProps,\n} from \"../types\";\nimport { convertUnitSize, getRad } from \"@daybrush/utils\";\nimport {\n    prefix, calculatePosition, getDiagonalSize,\n    fillParams, triggerEvent,\n    makeMatrixCSS, getRect, fillEndParams,\n    getSizeDistByDist,\n    getProps,\n    fillCSSObject,\n} from \"../utils\";\nimport { plus, minus, multiply } from \"@scena/matrix\";\nimport { getDragDist, calculatePointerDist, setDragStart } from \"../gesto/GestoUtils\";\nimport {\n    HORIZONTAL_RADIUS_ORDER, VERTICAL_RADIUS_ORDER, addRadiusPos, removeRadiusPos,\n} from \"./roundable/borderRadius\";\nimport { renderLine } from \"../renderDirections\";\nimport { checkSnapBoundPriority } from \"./snappable/snap\";\nimport { checkSnapBounds } from \"./snappable/snapBounds\";\nimport { getDefaultGuidelines } from \"./snappable/getTotalGuidelines\";\nimport {\n    getControlSize, getClipPath,\n    getClipStyles, getRectPoses,\n} from \"./clippable/utils\";\n\nexport function moveControlPos(\n    controlPoses: ControlPose[],\n    index: number,\n    dist: number[],\n    isRect?: boolean,\n    keepRatio?: boolean,\n) {\n    const { direction, sub } = controlPoses[index];\n    const dists = controlPoses.map(() => [0, 0]);\n    const directions = direction ? direction.split(\"\") : [];\n\n    if (isRect && index < 8) {\n        const verticalDirections = directions.filter(dir => dir === \"w\" || dir === \"e\");\n        const horizontalDirections = directions.filter(dir => dir === \"n\" || dir === \"s\");\n\n        const verticalDirection = verticalDirections[0];\n        const horizontalDirection = horizontalDirections[0];\n\n        dists[index] = dist;\n        const [width, height] = getControlSize(controlPoses);\n        const ratio = width && height ? width / height : 0;\n\n        if (ratio && keepRatio) {\n            // 0 1 2\n            // 7   3\n            // 6 5 4\n\n            const fixedIndex = (index + 4) % 8;\n            const fixedPosition = controlPoses[fixedIndex].pos;\n            const sizeDirection = [0, 0];\n\n            if (direction!.indexOf(\"w\") > -1) {\n                sizeDirection[0] = -1;\n            } else if (direction!.indexOf(\"e\") > -1) {\n                sizeDirection[0] = 1;\n            }\n            if (direction!.indexOf(\"n\") > -1) {\n                sizeDirection[1] = -1;\n            } else if (direction!.indexOf(\"s\") > -1) {\n                sizeDirection[1] = 1;\n            }\n\n\n            const nextDist = getSizeDistByDist(\n                [width, height],\n                dist,\n                ratio,\n                sizeDirection,\n                true,\n            );\n            const nextWidth = width + nextDist[0];\n            const nextHeight = height + nextDist[1];\n            let top = fixedPosition[1];\n            let bottom = fixedPosition[1];\n            let left = fixedPosition[0];\n            let right = fixedPosition[0];\n\n            if (sizeDirection[0] === -1) {\n                left = right - nextWidth;\n            } else if (sizeDirection[0] === 1) {\n                right = left + nextWidth;\n            } else {\n                left = left - nextWidth / 2;\n                right = right + nextWidth / 2;\n            }\n            if (sizeDirection[1] === -1) {\n                top = bottom - nextHeight;\n            } else if (sizeDirection[1] === 1) {\n                bottom = top + nextHeight;\n            } else {\n                top = bottom - nextHeight / 2;\n                bottom = top + nextHeight;\n            }\n\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\n\n            controlPoses.forEach((controlPose, i) => {\n                dists[i][0] = nextControlPoses[i].pos[0] - controlPose.pos[0];\n                dists[i][1] = nextControlPoses[i].pos[1] - controlPose.pos[1];\n            });\n        } else {\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: controlDir,\n                } = controlPose;\n\n                if (!controlDir) {\n                    return;\n                }\n                if (controlDir.indexOf(verticalDirection) > -1) {\n                    dists[i][0] = dist[0];\n                }\n                if (controlDir.indexOf(horizontalDirection) > -1) {\n                    dists[i][1] = dist[1];\n                }\n            });\n            if (verticalDirection) {\n                dists[1][0] = dist[0] / 2;\n                dists[5][0] = dist[0] / 2;\n            }\n            if (horizontalDirection) {\n                dists[3][1] = dist[1] / 2;\n                dists[7][1] = dist[1] / 2;\n            }\n        }\n    } else if (direction && !sub) {\n        directions.forEach(dir => {\n            const isVertical = dir === \"n\" || dir === \"s\";\n\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: dirDir,\n                    horizontal: dirHorizontal,\n                    vertical: dirVertical,\n                } = controlPose;\n\n                if (!dirDir || dirDir.indexOf(dir) === -1) {\n                    return;\n                }\n                dists[i] = [\n                    isVertical || !dirHorizontal ? 0 : dist[0],\n                    !isVertical || !dirVertical ? 0 : dist[1],\n                ];\n            });\n        });\n    } else {\n        dists[index] = dist;\n    }\n\n    return dists;\n}\n\n\nfunction addClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const [distX, distY] = calculatePointerDist(moveable, e);\n    const { clipPath, clipIndex } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    if (clipType === \"polygon\") {\n        poses.splice(clipIndex, 0, [distX, distY]);\n    } else if (clipType === \"inset\") {\n        const horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(clipIndex);\n        const verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(clipIndex);\n        const length = clipPoses.length;\n\n        addRadiusPos(\n            clipPoses,\n            poses,\n            8,\n            horizontalIndex,\n            verticalIndex,\n            distX,\n            distY,\n            poses[4][0],\n            poses[4][1],\n            poses[0][0],\n            poses[0][1],\n        );\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    const clipStyle = `${clipType}(${clipStyles.join(splitter)})`;\n\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"added\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle,\n        distX: 0,\n        distY: 0,\n        ...fillCSSObject({\n            clipPath: clipStyle,\n        }, e),\n    }));\n}\nfunction removeClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const { clipPath, clipIndex } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    const length = poses.length;\n    if (clipType === \"polygon\") {\n        clipPoses.splice(clipIndex, 1);\n        poses.splice(clipIndex, 1);\n    } else if (clipType === \"inset\") {\n        if (clipIndex < 8) {\n            return;\n        }\n        removeRadiusPos(clipPoses, poses, clipIndex, 8, length);\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    const clipStyle = `${clipType}(${clipStyles.join(splitter)})`;\n\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"removed\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle,\n        distX: 0,\n        distY: 0,\n        ...fillCSSObject({\n            clipPath: clipStyle,\n        }, e),\n    }));\n}\n/**\n * @namespace Moveable.Clippable\n * @description Whether to clip the target.\n */\n\nexport default {\n    name: \"clippable\",\n    props: {\n        clippable: Boolean,\n        defaultClipPath: String,\n        customClipPath: String,\n        keepRatio: Boolean,\n        clipRelative: Boolean,\n        clipArea: Boolean,\n        dragWithClip: Boolean,\n        clipTargetBounds: Boolean,\n        clipVerticalGuidelines: Array,\n        clipHorizontalGuidelines: Array,\n        clipSnapThreshold: Boolean,\n    } as const,\n    events: {\n        onClipStart: \"clipStart\",\n        onClip: \"clip\",\n        onClipEnd: \"clipEnd\",\n    } as const,\n    css: [\n        `.control.clip-control {\n    background: #6d6;\n    cursor: pointer;\n}\n.control.clip-control.clip-radius {\n    background: #d66;\n}\n.line.clip-line {\n    background: #6e6;\n    cursor: move;\n    z-index: 1;\n}\n.clip-area {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.clip-ellipse {\n    position: absolute;\n    cursor: move;\n    border: 1px solid #6d6;\n    border: var(--zoompx) solid #6d6;\n    border-radius: 50%;\n    transform-origin: 0px 0px;\n}`,\n        `:host {\n    --bounds-color: #d66;\n}`,\n        `.guideline {\n    pointer-events: none;\n    z-index: 2;\n}`,\n        `.line.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, React: Renderer): any[] {\n        const {\n            customClipPath,\n            defaultClipPath,\n            clipArea, zoom,\n        } = moveable.props;\n        const {\n            target, width, height, allMatrix, is3d, left, top,\n            pos1, pos2, pos3, pos4,\n            clipPathState,\n            snapBoundInfos,\n            rotation: rotationRad,\n        } = moveable.getState();\n\n        if (!target) {\n            return [];\n        }\n\n        const clipPath = getClipPath(\n            target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n\n        if (!clipPath) {\n            return [];\n        }\n        const n = is3d ? 4 : 3;\n        const type = clipPath.type;\n        const clipPoses = clipPath.poses;\n        const poses = clipPoses.map(pos => {\n            // return [x, y];\n            const calculatedPos = calculatePosition(allMatrix, pos.pos, n);\n\n            return [\n                calculatedPos[0] - left,\n                calculatedPos[1] - top,\n            ];\n        });\n\n        let controls: any[] = [];\n        let lines: any[] = [];\n\n        const isRect = type === \"rect\";\n        const isInset = type === \"inset\";\n        const isPolygon = type === \"polygon\";\n\n        if (isRect || isInset || isPolygon) {\n            const linePoses = isInset ? poses.slice(0, 8) : poses;\n\n            lines = linePoses.map((to, i) => {\n                const from = i === 0 ? linePoses[linePoses.length - 1] : linePoses[i - 1];\n\n                const rad = getRad(from, to);\n                const dist = getDiagonalSize(from, to);\n                return <div key={`clipLine${i}`} className={prefix(\"line\", \"clip-line\", \"snap-control\")}\n                    data-clip-index={i}\n                    style={{\n                        width: `${dist}px`,\n                        transform: `translate(${from[0]}px, ${from[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n                    }}></div>;\n            });\n        }\n        controls = poses.map((pos, i) => {\n            return <div key={`clipControl${i}`}\n                className={prefix(\"control\", \"clip-control\", \"snap-control\")}\n                data-clip-index={i}\n                style={{\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                }}></div>;\n        });\n\n        if (isInset) {\n            controls.push(...poses.slice(8).map((pos, i) => {\n                return <div key={`clipRadiusControl${i}`}\n                    className={prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\")}\n                    data-clip-index={8 + i}\n                    style={{\n                        transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                    }}></div>;\n            }));\n        }\n        if (type === \"circle\" || type === \"ellipse\") {\n            const {\n                left: clipLeft,\n                top: clipTop,\n                radiusX,\n                radiusY,\n            } = clipPath;\n\n            const [distLeft, distTop] = minus(\n                calculatePosition(allMatrix, [clipLeft!, clipTop!], n),\n                calculatePosition(allMatrix, [0, 0], n),\n            );\n            let ellipseClipPath = \"none\";\n\n            if (!clipArea) {\n                const piece = Math.max(10, radiusX! / 5, radiusY! / 5);\n                const areaPoses: number[][] = [];\n\n                for (let i = 0; i <= piece; ++i) {\n                    const rad = Math.PI * 2 / piece * i;\n                    areaPoses.push([\n                        radiusX! + (radiusX! - zoom!) * Math.cos(rad),\n                        radiusY! + (radiusY! - zoom!) * Math.sin(rad),\n                    ]);\n                }\n                areaPoses.push([radiusX!, -2]);\n                areaPoses.push([-2, -2]);\n                areaPoses.push([-2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, -2]);\n                areaPoses.push([radiusX!, -2]);\n\n                ellipseClipPath = `polygon(${areaPoses.map(pos => `${pos[0]}px ${pos[1]}px`).join(\", \")})`;\n            }\n            controls.push(<div key=\"clipEllipse\" className={prefix(\"clip-ellipse\", \"snap-control\")} style={{\n                width: `${radiusX! * 2}px`,\n                height: `${radiusY! * 2}px`,\n                clipPath: ellipseClipPath,\n                transform: `translate(${-left + distLeft}px, ${-top + distTop}px) ${makeMatrixCSS(allMatrix)}`,\n            }}></div>);\n        }\n        if (clipArea) {\n            const {\n                width: allWidth,\n                height: allHeight,\n                left: allLeft,\n                top: allTop,\n            } = getRect([pos1, pos2, pos3, pos4, ...poses]);\n            if (isPolygon || isRect || isInset) {\n                const areaPoses = isInset ? poses.slice(0, 8) : poses;\n                controls.push(<div key=\"clipArea\" className={prefix(\"clip-area\", \"snap-control\")} style={{\n                    width: `${allWidth}px`,\n                    height: `${allHeight}px`,\n                    transform: `translate(${allLeft}px, ${allTop}px)`,\n                    clipPath: `polygon(${areaPoses.map(pos => `${pos[0] - allLeft}px ${pos[1] - allTop}px`).join(\", \")})`,\n                }}></div>);\n            }\n        }\n        if (snapBoundInfos) {\n            ([\"vertical\", \"horizontal\"] as const).forEach(directionType => {\n                const info = snapBoundInfos[directionType];\n                const isHorizontal = directionType === \"horizontal\";\n\n                if (info.isSnap) {\n                    lines.push(...info.snap.posInfos.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}snap${i}`, \"guideline\");\n                    }));\n                }\n                if (info.isBound) {\n                    lines.push(...info.bounds.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}bounds${i}`, \"guideline\", \"bounds\", \"bold\");\n                    }));\n                }\n            });\n        }\n        return [\n            ...controls,\n            ...lines,\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\n    },\n    dragStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const props = moveable.props;\n        const {\n            dragWithClip = true,\n        } = props;\n\n        if (dragWithClip) {\n            return false;\n        }\n\n        return this.dragControlStart(moveable, e);\n    },\n    drag(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControl(moveable, {...e, isDragTarget: true });\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControlEnd(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const state = moveable.state;\n        const { defaultClipPath, customClipPath } = moveable.props;\n        const { target, width, height } = state;\n        const inputTarget = e.inputEvent ? e.inputEvent.target : null;\n        const className = (inputTarget && inputTarget.getAttribute(\"class\")) || \"\";\n        const datas = e.datas;\n        const clipPath = getClipPath(target!, width, height, defaultClipPath || \"inset\", customClipPath);\n\n        if (!clipPath) {\n            return false;\n        }\n        const { clipText, type, poses } = clipPath;\n        const result = triggerEvent(moveable, \"onClipStart\", fillParams<OnClipStart>(moveable, e, {\n            clipType: type,\n            clipStyle: clipText,\n            poses: poses.map(pos => pos.pos),\n        }));\n\n        if (result === false) {\n            datas.isClipStart = false;\n            return false;\n        }\n        datas.isControl = className && className.indexOf(\"clip-control\") > -1;\n        datas.isLine = className.indexOf(\"clip-line\") > -1;\n        datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n        datas.clipIndex = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n        datas.clipPath = clipPath;\n        datas.isClipStart = true;\n        state.clipPathState = clipText;\n        setDragStart(moveable, e);\n\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<ClippableProps & DraggableProps, ClippableState>, e: any) {\n        const { datas, originalDatas, isDragTarget } = e;\n\n        if (!datas.isClipStart) {\n            return false;\n        }\n        const { isControl, isLine, isArea, clipIndex, clipPath } = datas as {\n            clipPath: ReturnType<typeof getClipPath>,\n            [key: string]: any,\n        };\n        if (!clipPath) {\n            return false;\n        }\n        const props = getProps(moveable.props, \"clippable\");\n\n        const { keepRatio } = props;\n        let distX = 0;\n        let distY = 0;\n\n        const originalDraggable = originalDatas.draggable;\n        const originalDist = getDragDist(e);\n\n        if (isDragTarget && originalDraggable) {\n            [distX, distY] = originalDraggable.prevBeforeDist;\n        } else {\n            [distX, distY] = originalDist;\n        }\n\n        const firstDist = [distX, distY];\n\n        const state = moveable.state;\n        const { width, height } = state;\n        const isDragWithTarget = !isArea && !isControl && !isLine;\n        const {\n            type: clipType,\n            poses: clipPoses,\n            splitter,\n        } = clipPath;\n        const poses = clipPoses.map(pos => pos.pos);\n\n        if (isDragWithTarget) {\n            distX = -distX;\n            distY = -distY;\n        }\n        const isAll = !isControl || clipPoses[clipIndex].direction === \"nesw\";\n        const isRect = clipType === \"inset\" || clipType === \"rect\";\n        let dists = clipPoses.map(() => [0, 0]);\n\n        if (isControl && !isAll) {\n            const { horizontal, vertical } = clipPoses[clipIndex];\n            const dist = [\n                distX * Math.abs(horizontal),\n                distY * Math.abs(vertical),\n            ];\n            dists = moveControlPos(clipPoses, clipIndex, dist, isRect, keepRatio);\n        } else if (isAll) {\n            dists = poses.map(() => [distX, distY]);\n        }\n        const nextPoses: number[][] = poses.map((pos, i) => plus(pos, dists[i]));\n        const guidePoses = [...nextPoses];\n\n        state.snapBoundInfos = null;\n        const isCircle = clipPath.type === \"circle\";\n        const isEllipse = clipPath.type === \"ellipse\";\n\n        if (isCircle || isEllipse) {\n            const guideRect = getRect(nextPoses);\n            const ry = Math.abs(guideRect.bottom - guideRect.top);\n            const rx = Math.abs(isEllipse ? guideRect.right - guideRect.left : ry);\n            const bottom = nextPoses[0][1] + ry;\n            const left = nextPoses[0][0] - rx;\n            const right = nextPoses[0][0] + rx;\n\n            // right\n            if (isCircle) {\n                guidePoses.push([right, guideRect.bottom]);\n                dists.push([1, 0]);\n            }\n            // bottom\n            guidePoses.push([guideRect.left, bottom]);\n            dists.push([0, 1]);\n            // left\n            guidePoses.push([left, guideRect.bottom]);\n            dists.push([1, 0]);\n        }\n\n        const guidelines = getDefaultGuidelines(\n            (props.clipHorizontalGuidelines || []).map(v => convertUnitSize(`${v}`, height)),\n            (props.clipVerticalGuidelines || []).map(v => convertUnitSize(`${v}`, width)),\n            width!, height!,\n        );\n        let guideXPoses: number[] = [];\n        let guideYPoses: number[] = [];\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n            const rectDists = [dists[0], dists[2], dists[4], dists[6]];\n\n            guideXPoses = rectPoses.filter((_, i) => rectDists[i][0]).map(pos => pos[0]);\n            guideYPoses = rectPoses.filter((_, i) => rectDists[i][1]).map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.filter((_, i) => dists[i][0]).map(pos => pos[0]);\n            guideYPoses = guidePoses.filter((_, i) => dists[i][1]).map(pos => pos[1]);\n        }\n        const boundDelta = [0, 0];\n        const {\n            horizontal: horizontalSnapInfo,\n            vertical: verticalSnapInfo,\n        } = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            5,\n        );\n        let snapOffsetY = horizontalSnapInfo.offset;\n        let snapOffsetX = verticalSnapInfo.offset;\n\n        if (horizontalSnapInfo.isBound) {\n            boundDelta[1] += snapOffsetY;\n        }\n        if (verticalSnapInfo.isBound) {\n            boundDelta[0] += snapOffsetX;\n        }\n        if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n            const guideRect = getRect(nextPoses);\n            let cy = guideRect.bottom - guideRect.top;\n            let cx = isEllipse ? guideRect.right - guideRect.left : cy;\n\n\n            const distSnapX = verticalSnapInfo.isBound\n                ? Math.abs(snapOffsetX)\n                : (verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX);\n            const distSnapY = horizontalSnapInfo.isBound\n                ? Math.abs(snapOffsetY)\n                : (horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY);\n            cx -= distSnapX;\n            cy -= distSnapY;\n\n            if (isCircle) {\n                cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n                cx = cy;\n            }\n            const center = guidePoses[0];\n\n            guidePoses[1][1] = center[1] - cy;\n            guidePoses[2][0] = center[0] + cx;\n            guidePoses[3][1] = center[1] + cy;\n            guidePoses[4][0] = center[0] - cx;\n        } else if (isRect && keepRatio && isControl) {\n            const [width, height] = getControlSize(clipPoses);\n            const ratio = width && height ? width / height : 0;\n            const clipPose = clipPoses[clipIndex];\n            const direction = clipPose.direction! || \"\";\n            let top = guidePoses[1][1];\n            let bottom = guidePoses[5][1];\n            let left = guidePoses[7][0];\n            let right = guidePoses[3][0];\n\n\n            if (snapOffsetY <= snapOffsetX) {\n                snapOffsetY = snapOffsetX / ratio;\n            } else {\n                snapOffsetX = snapOffsetY * ratio;\n            }\n            if (direction!.indexOf(\"w\") > -1) {\n                left -= snapOffsetX;\n            } else if (direction!.indexOf(\"e\") > -1) {\n                right -= snapOffsetX;\n            } else {\n                left += snapOffsetX / 2;\n                right -= snapOffsetX / 2;\n            }\n            if (direction!.indexOf(\"n\") > -1) {\n                top -= snapOffsetY;\n            } else if (direction!.indexOf(\"s\") > -1) {\n                bottom -= snapOffsetY;\n            } else {\n                top += snapOffsetY / 2;\n                bottom -= snapOffsetY / 2;\n            }\n\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\n\n            guidePoses.forEach((pos, i) => {\n                [pos[0], pos[1]] = nextControlPoses[i].pos;\n            });\n        } else {\n            guidePoses.forEach((pos, j) => {\n                const dist = dists[j];\n\n                if (dist[0]) {\n                    pos[0] -= snapOffsetX;\n                }\n                if (dist[1]) {\n                    pos[1] -= snapOffsetY;\n                }\n            });\n        }\n        const nextClipStyles = getClipStyles(moveable, clipPath, nextPoses)!;\n        const clipStyle = `${clipType}(${nextClipStyles.join(splitter)})`;\n\n        state.clipPathState = clipStyle;\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n\n            guideXPoses = rectPoses.map(pos => pos[0]);\n            guideYPoses = rectPoses.map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.map(pos => pos[0]);\n            guideYPoses = guidePoses.map(pos => pos[1]);\n        }\n        state.snapBoundInfos = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            1,\n        );\n\n        if (originalDraggable) {\n            const {\n                is3d,\n                allMatrix,\n            } = state;\n            const n = is3d ? 4 : 3;\n\n            let dragDist = boundDelta;\n\n            if (isDragTarget) {\n                dragDist = [\n                    firstDist[0] + boundDelta[0] - originalDist[0],\n                    firstDist[1] + boundDelta[1] - originalDist[1],\n                ];\n            }\n            originalDraggable.deltaOffset = multiply(allMatrix, [dragDist[0], dragDist[1], 0, 0], n);\n        }\n        triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n            clipEventType: \"changed\",\n            clipType,\n            poses: nextPoses,\n            clipStyle,\n            clipStyles: nextClipStyles,\n            distX,\n            distY,\n            ...fillCSSObject({\n                [clipType === \"rect\" ? \"clip\" : \"clipPath\"]: clipStyle,\n            }, e),\n        }));\n\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        this.unset(moveable);\n        const { isDrag, datas, isDouble } = e;\n        const { isLine, isClipStart, isControl } = datas;\n\n        if (!isClipStart) {\n            return false;\n        }\n        triggerEvent(moveable, \"onClipEnd\", fillEndParams<OnClipEnd>(moveable, e, {}));\n        if (isDouble) {\n            if (isControl) {\n                removeClipPath(moveable, e);\n            } else if (isLine) {\n                // add\n                addClipPath(moveable, e);\n            }\n        }\n        return isDouble || isDrag;\n    },\n    unset(moveable: MoveableManagerInterface<ClippableProps, ClippableState>) {\n        moveable.state.clipPathState = \"\";\n        moveable.state.snapBoundInfos = null;\n    },\n};\n\n/**\n * Whether to clip the target. (default: false)\n * @name Moveable.Clippable#clippable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#defaultClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\n * @name Moveable.Clippable#clipRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#customClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When dragging the target, the clip also moves. (default: true)\n * @name Moveable.Clippable#dragWithClip\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can drag the clip by setting clipArea.\n * @name Moveable.Clippable#clipArea\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n* Whether the clip is bound to the target.\n* @name Moveable.Clippable#clipTargetBounds\n* @default false\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipTargetBounds: true,\n* });\n* moveable.on(\"clipStart\", e => {\n*     console.log(e);\n* }).on(\"clip\", e => {\n*     if (e.clipType === \"rect\") {\n*         e.target.style.clip = e.clipStyle;\n*     } else {\n*         e.target.style.clipPath = e.clipStyle;\n*     }\n* }).on(\"clipEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n * Add clip guidelines in the vertical direction.\n * @name Moveable.Clippable#clipVerticalGuidelines\n * @default 0\n * @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* Add clip guidelines in the horizontal direction.\n* @name Moveable.Clippable#clipHorizontalGuidelines\n* @default []\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n* istance value that can snap to clip guidelines.\n* @name Moveable.Clippable#clipSnapThreshold\n* @default 5\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n * When drag start the clip area or controls, the `clipStart` event is called.\n * @memberof Moveable.Clippable\n * @event clipStart\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag the clip area or controls, the `clip` event is called.\n * @memberof Moveable.Clippable\n * @event clip\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the clip area or controls, the `clipEnd` event is called.\n * @memberof Moveable.Clippable\n * @event clipEnd\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    prefix, triggerEvent,\n    fillParams, calculatePoses, getRect, fillEndParams, convertCSSSize,\n} from \"../utils\";\nimport {\n    OnDragOriginStart, OnDragOrigin,\n    OnDragOriginEnd, MoveableManagerInterface, DraggableProps, OriginDraggableProps, MoveableGroupInterface,\n} from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, getNextMatrix } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport Draggable from \"./Draggable\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\n\n/**\n * @namespace OriginDraggable\n * @memberof Moveable\n * @description Whether to drag origin (default: false)\n */\nexport default {\n    name: \"originDraggable\",\n    props: {\n        originDraggable: Boolean,\n        originRelative: Boolean,\n    } as const,\n    events: {\n        onDragOriginStart: \"dragOriginStart\",\n        onDragOrigin: \"dragOrigin\",\n        onDragOriginEnd: \"dragOriginEnd\",\n    } as const,\n    css: [\n        `:host[data-able-origindraggable] .control.origin {\n    pointer-events: auto;\n}`,\n    ],\n    dragControlCondition(_: any, e: any) {\n        if (e.isRequest) {\n            return e.requestAble === \"originDraggable\";\n        }\n        return hasClass(e.inputEvent.target, prefix(\"origin\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas } = e;\n\n        setDragStart(moveable, e);\n\n        const params = fillParams<OnDragOriginStart>(moveable, e, {\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent(moveable, \"onDragOriginStart\", params);\n\n        datas.startOrigin = moveable.state.transformOrigin;\n        datas.startTargetOrigin = moveable.state.targetOrigin;\n        datas.prevOrigin = [0, 0];\n        datas.isDragOrigin = true;\n\n        if (result === false) {\n            datas.isDragOrigin = false;\n            return false;\n        }\n\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas, isPinch, isRequest } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        const [distX, distY] = getDragDist(e);\n        const state = moveable.state;\n        const {\n            width,\n            height,\n            offsetMatrix,\n            targetMatrix,\n            is3d,\n        } = state;\n        const {\n            originRelative = true,\n        } = moveable.props;\n        const n = is3d ? 4 : 3;\n        let dist = [distX, distY];\n\n        if (isRequest) {\n            const distOrigin = e.distOrigin;\n            if (distOrigin[0] || distOrigin[1]) {\n                dist = distOrigin;\n            }\n        }\n        const origin = plus(datas.startOrigin, dist);\n        const targetOrigin = plus(datas.startTargetOrigin, dist);\n        const delta = minus(dist, datas.prevOrigin);\n\n        const nextMatrix = getNextMatrix(\n            offsetMatrix,\n            targetMatrix,\n            origin,\n            n,\n        );\n\n        const rect = moveable.getRect();\n        const nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\n\n        const dragDelta = [\n            rect.left - nextRect.left,\n            rect.top - nextRect.top,\n        ];\n\n        datas.prevOrigin = dist;\n        const transformOrigin = [\n            convertCSSSize(targetOrigin[0], width, originRelative),\n            convertCSSSize(targetOrigin[1], height, originRelative),\n        ].join(\" \");\n        const params = fillParams<OnDragOrigin>(moveable, e, {\n            width,\n            height,\n            origin,\n            dist,\n            delta,\n            transformOrigin,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false),\n            )!,\n        });\n        triggerEvent(moveable, \"onDragOrigin\", params);\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<OriginDraggableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        triggerEvent(moveable, \"onDragOriginEnd\",\n            fillEndParams<OnDragOriginEnd>(moveable, e, {}));\n        return true;\n    },\n    dragGroupControlCondition(moveable: any, e: any) {\n        return this.dragControlCondition(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        return true;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        moveable.transformOrigin = params.transformOrigin;\n\n        return true;\n    },\n    /**\n    * @method Moveable.OriginDraggable#request\n    * @param {object} e - the OriginDraggable's request parameter\n    * @param {number} [e.x] - x position\n    * @param {number} [e.y] - y position\n    * @param {number} [e.deltaX] - x number to move\n    * @param {number} [e.deltaY] - y number to move\n    * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\n    * @param {array} [e.origin] - transform-origin position\n    * @param {number} [e.isInstant] - Whether to execute the request instantly\n    * @return {Moveable.Requester} Moveable Requester\n    * @example\n\n    * // Instantly Request (requestStart - request - requestEnd)\n    * // Use Relative Value\n    * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\n    * // Use Transform Value\n    * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\n    * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\n    * // requestStart\n    * const requester = moveable.request(\"originDraggable\");\n    *\n    * // request\n    * // Use Relative Value\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 220, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 240, y: 100 });\n    *\n    * // requestEnd\n    * requester.requestEnd();\n    */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        const transformOrigin = rect.transformOrigin;\n        const distOrigin = [0, 0];\n\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaOrigin\" in e) {\n                    distOrigin[0] += e.deltaOrigin[0];\n                    distOrigin[1] += e.deltaOrigin[1];\n                } else if (\"origin\" in e) {\n                    distOrigin[0] = e.origin[0] - transformOrigin[0];\n                    distOrigin[1] = e.origin[1] - transformOrigin[1];\n                } else {\n                    if (\"x\" in e) {\n                        distX = e.x - rect.left;\n                    } else if (\"deltaX\" in e) {\n                        distX += e.deltaX;\n                    }\n                    if (\"y\" in e) {\n                        distY = e.y - rect.top;\n                    } else if (\"deltaY\" in e) {\n                        distY += e.deltaY;\n                    }\n                }\n\n                return { datas, distX, distY, distOrigin };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether to drag origin (default: false)\n * @name Moveable.OriginDraggable#originDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n * });\n * let translate = [0, 0];\n * moveable.on(\"dragOriginStart\", e => {\n *     e.dragStart && e.dragStart.set(translate);\n * }).on(\"dragOrigin\", e => {\n *     translate = e.drag.beforeTranslate;\n *     e.target.style.cssText\n *         = `transform-origin: ${e.transformOrigin};`\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n * }).on(\"dragOriginEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (default: true)\n * @name Moveable.OriginDraggable#originRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n *     originRelative: false,\n * });\n * moveable.originRelative = true;\n */\n\n/**\n* When drag start the origin, the `dragOriginStart` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginStart\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag the origin, the `dragOrigin` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOrigin\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag end the origin, the `dragOriginEnd` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginEnd\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n","import {\n    prefix, triggerEvent,\n    fillParams, fillEndParams, calculatePosition,\n    fillCSSObject,\n    catchEvent,\n} from \"../utils\";\nimport {\n    Renderer, RoundableProps, OnRoundStart,\n    RoundableState, OnRound, ControlPose, OnRoundEnd,\n    MoveableManagerInterface,\n    OnRoundGroup,\n    MoveableGroupInterface,\n    OnRoundGroupStart,\n    OnRoundGroupEnd,\n} from \"../types\";\nimport { splitSpace } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, calculatePointerDist } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    getRadiusValues,\n    getRadiusStyles,\n    splitRadiusPoses,\n} from \"./roundable/borderRadius\";\nimport { fillChildEvents } from \"../groupUtils\";\n\n\nfunction addBorderRadiusByLine(\n    controlPoses: ControlPose[],\n    lineIndex: number,\n    distX: number,\n    distY: number,\n) {\n    // lineIndex\n    // 0 top\n    // 1 right\n    // 2 bottom\n    // 3 left\n\n    const horizontalsLength = controlPoses.filter(({ virtual, horizontal }) => horizontal && !virtual).length;\n    const verticalsLength = controlPoses.filter(({ virtual, vertical }) => vertical && !virtual).length;\n    let controlIndex = -1;\n\n    //top\n    if (lineIndex === 0) {\n        if (horizontalsLength === 0) {\n            controlIndex = 0;\n        } else if (horizontalsLength === 1) {\n            controlIndex = 1;\n        }\n    }\n    // bottom\n    if (lineIndex === 2) {\n        if (horizontalsLength <= 2) {\n            controlIndex = 2;\n        } else if (horizontalsLength <= 3) {\n            controlIndex = 3;\n        }\n    }\n    // left\n    if (lineIndex === 3) {\n        if (verticalsLength === 0) {\n            controlIndex = 4;\n        } else if (verticalsLength < 4) {\n            controlIndex = 7;\n        }\n    }\n\n    // right\n    if (lineIndex === 1) {\n        if (verticalsLength <= 1) {\n            controlIndex = 5;\n        } else if (verticalsLength <= 2) {\n            controlIndex = 6;\n        }\n    }\n    if (controlIndex === -1 || !controlPoses[controlIndex].virtual) {\n        return;\n    }\n    const controlPoseInfo = controlPoses[controlIndex];\n\n    addBorderRadius(controlPoses, controlIndex);\n\n    if (controlIndex < 4) {\n        controlPoseInfo.pos[0] = distX;\n    } else {\n        controlPoseInfo.pos[1] = distY;\n    }\n}\nfunction addBorderRadius(\n    controlPoses: ControlPose[],\n    index: number,\n) {\n    if (index < 4) {\n        controlPoses.slice(0, index + 1).forEach(info => {\n            info.virtual = false;\n        });\n    } else {\n        if (controlPoses[0].virtual) {\n            controlPoses[0].virtual = false;\n        }\n        controlPoses.slice(4, index + 1).forEach(info => {\n            info.virtual = false;\n        });\n    }\n}\nfunction removeBorderRadius(\n    controlPoses: ControlPose[],\n    index: number,\n) {\n    if (index < 4) {\n        controlPoses.slice(index, 4).forEach(info => {\n            info.virtual = true;\n        });\n    } else {\n        controlPoses.slice(index).forEach(info => {\n            info.virtual = true;\n        });\n    }\n}\nfunction getBorderRadius(\n    borderRadius: string,\n    width: number,\n    height: number,\n    minCounts: number[] = [0, 0],\n    full?: boolean,\n) {\n    let values: string[] = [];\n\n    if (!borderRadius || borderRadius === \"0px\") {\n        values = [];\n    } else {\n        values = splitSpace(borderRadius);\n    }\n\n    return getRadiusValues(values, width, height, 0, 0, minCounts, full);\n}\n\nfunction triggerRoundEvent(\n    moveable: MoveableManagerInterface<RoundableProps, RoundableState>,\n    e: any,\n    dist: number[],\n    delta: number[],\n    nextPoses: ControlPose[],\n) {\n    const state = moveable.state;\n    const {\n        width,\n        height,\n    } = state;\n    const {\n        raws,\n        styles,\n        radiusPoses,\n    } = getRadiusStyles(\n        nextPoses,\n        moveable.props.roundRelative!,\n        width,\n        height,\n    );\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(radiusPoses, raws);\n    const borderRadius = styles.join(\" \");\n\n    state.borderRadiusState = borderRadius;\n    const params = fillParams<OnRound>(moveable, e, {\n        horizontals,\n        verticals,\n        borderRadius,\n        width,\n        height,\n        delta,\n        dist,\n        ...fillCSSObject({\n            borderRadius,\n        }, e),\n    });\n    triggerEvent(moveable, \"onRound\", params);\n\n    return params;\n}\n\n\nfunction getStyleBorderRadius(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n    const {\n        style,\n    } = moveable.getState();\n    let borderRadius = style.borderRadius || \"\";\n\n    if (!borderRadius && moveable.props.groupable) {\n        const firstTarget = moveable.getTargets()[0];\n\n\n        if (firstTarget) {\n            borderRadius = getComputedStyle(firstTarget).borderRadius;\n            style.borderRadius = borderRadius;\n        }\n    }\n    return borderRadius;\n}\n\n/**\n * @namespace Moveable.Roundable\n * @description Whether to show and drag or double click border-radius\n */\n\nexport default {\n    name: \"roundable\",\n    props: {\n        roundable: Boolean,\n        roundRelative: Boolean,\n        minRoundControls: Array,\n        maxRoundControls: Array,\n        roundClickable: Boolean,\n        roundPadding: Number,\n        isDisplayShadowRoundControls: Boolean,\n    } as const,\n    events: {\n        onRoundStart: \"roundStart\",\n        onRound: \"round\",\n        onRoundEnd: \"roundEnd\",\n        onRoundGroupStart: \"roundGroupStart\",\n        onRoundGroup: \"roundGroup\",\n        onRoundGroupEnd: \"roundGroupEnd\",\n    } as const,\n    css: [\n        `.control.border-radius {\n    background: #d66;\n    cursor: pointer;\n    z-index: 3;\n}`,\n        `.control.border-radius.vertical {\n    background: #d6d;\n    z-index: 2;\n}`,\n        `.control.border-radius.virtual {\n    opacity: 0.5;\n    z-index: 1;\n}`,\n        `:host.round-line-clickable .line.direction {\n    cursor: pointer;\n}`,\n    ],\n    className(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        const roundClickable = moveable.props.roundClickable;\n\n        return roundClickable === true || roundClickable === \"line\" ? prefix(\"round-line-clickable\") : \"\";\n    },\n    requestStyle(): Array<keyof CSSStyleDeclaration> {\n        return [\"borderRadius\"];\n    },\n    render(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, React: Renderer): any {\n        const {\n            target,\n            width,\n            height,\n            allMatrix,\n            is3d,\n            left,\n            top,\n            borderRadiusState,\n        } = moveable.getState();\n\n        const {\n            minRoundControls = [0, 0],\n            maxRoundControls = [4, 4],\n            zoom,\n            roundPadding = 0,\n            isDisplayShadowRoundControls,\n            groupable,\n        } = moveable.props;\n\n        if (!target) {\n            return null;\n        }\n\n        const borderRadius = borderRadiusState || getStyleBorderRadius(moveable);\n        const n = is3d ? 4 : 3;\n        const radiusValues = getBorderRadius(\n            borderRadius,\n            width, height,\n            minRoundControls,\n            true,\n        );\n\n        if (!radiusValues) {\n            return null;\n        }\n        let verticalCount = 0;\n        let horizontalCount = 0;\n        const basePos = groupable ? [0, 0] : [left, top];\n\n        return radiusValues.map((v, i) => {\n            const horizontal = v.horizontal;\n            const vertical = v.vertical;\n            const direction = v.direction || \"\";\n            const originalPos = [...v.pos];\n\n            horizontalCount += Math.abs(horizontal);\n            verticalCount += Math.abs(vertical);\n\n\n            if (horizontal && direction.indexOf(\"n\") > -1) {\n                originalPos[1] -= roundPadding;\n            }\n            if (vertical && direction.indexOf(\"w\") > -1) {\n                originalPos[0] -= roundPadding;\n            }\n            if (horizontal && direction.indexOf(\"s\") > -1) {\n                originalPos[1] += roundPadding;\n            }\n            if (vertical && direction.indexOf(\"e\") > -1) {\n                originalPos[0] += roundPadding;\n            }\n            const pos = minus(calculatePosition(allMatrix, originalPos, n), basePos);\n\n            const isDisplay = v.vertical\n                ? verticalCount <= maxRoundControls[1] && (isDisplayShadowRoundControls || !v.virtual)\n                : horizontalCount <= maxRoundControls[0] && (isDisplayShadowRoundControls || !v.virtual);\n\n            return <div key={`borderRadiusControl${i}`}\n                className={prefix(\n                    \"control\", \"border-radius\",\n                    v.vertical ? \"vertical\" : \"\",\n                    v.virtual ? \"virtual\" : \"\",\n                )}\n                data-radius-index={i}\n                style={{\n                    display: isDisplay ? \"block\" : \"none\",\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                }}></div>;\n        });\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (!e.inputEvent || e.isRequest) {\n            return false;\n        }\n        const className = (e.inputEvent.target.getAttribute(\"class\") || \"\");\n\n        return className.indexOf(\"border-radius\") > -1\n            || (className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1);\n    },\n    dragGroupControlCondition(moveable: any, e: any) {\n        return this.dragControlCondition(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { inputEvent, datas } = e;\n        const inputTarget = inputEvent.target;\n        const className = (inputTarget.getAttribute(\"class\") || \"\");\n        const isControl = className.indexOf(\"border-radius\") > -1;\n        const isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n        const controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n        let lineIndex = -1;\n\n        if (isLine) {\n            const indexAttr = inputTarget.getAttribute(\"data-line-key\")! || \"\";\n\n            if (indexAttr) {\n                lineIndex = parseInt(indexAttr.replace(/render-line-/g, \"\"), 10);\n\n                if (isNaN(lineIndex)) {\n                    lineIndex = -1;\n                }\n            }\n        }\n\n        if (!isControl && !isLine) {\n            return false;\n        }\n\n        const params = fillParams<OnRoundStart>(moveable, e, {});\n\n        const result = triggerEvent(\n            moveable, \"onRoundStart\", params);\n\n        if (result === false) {\n            return false;\n        }\n\n        datas.lineIndex = lineIndex;\n        datas.controlIndex = controlIndex;\n        datas.isControl = isControl;\n        datas.isLine = isLine;\n\n        setDragStart(moveable, e);\n\n        const {\n            roundRelative,\n            minRoundControls = [0, 0],\n        } = moveable.props;\n        const state = moveable.state;\n        const {\n            width,\n            height,\n        } = state;\n\n        datas.isRound = true;\n        datas.prevDist = [0, 0];\n        const borderRadius = getStyleBorderRadius(moveable);\n        const controlPoses = getBorderRadius(\n            borderRadius || \"\",\n            width,\n            height,\n            minRoundControls,\n            true,\n        ) || [];\n\n        datas.controlPoses = controlPoses;\n\n        state.borderRadiusState = getRadiusStyles(\n            controlPoses,\n            roundRelative!,\n            width,\n            height,\n        ).styles.join(\" \");\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { datas } = e;\n        const controlPoses = datas.controlPoses as ControlPose[];\n\n        if (!datas.isRound || !datas.isControl || !controlPoses.length) {\n            return false;\n        }\n        const index = datas.controlIndex as number;\n\n        const [distX, distY] = getDragDist(e);\n        const dist = [distX, distY];\n        const delta = minus(dist, datas.prevDist);\n        const {\n            maxRoundControls = [4, 4],\n        } = moveable.props;\n        const { width, height } = moveable.state;\n        const selectedControlPose = controlPoses[index];\n\n        const selectedVertical = selectedControlPose.vertical;\n        const selectedHorizontal = selectedControlPose.horizontal;\n\n        // 0: [0, 1, 2, 3] maxCount === 1\n        // 0: [0, 2] maxCount === 2\n        // 1: [1, 3] maxCount === 2\n\n        // 0: [0] maxCount === 3\n        // 1: [1, 3] maxCount === 3\n\n        const dists = controlPoses.map(pose => {\n            const { horizontal, vertical } = pose;\n            const poseDist = [\n                horizontal * selectedHorizontal * dist[0],\n                vertical * selectedVertical * dist[1],\n            ];\n            if (horizontal) {\n                if (maxRoundControls[0] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\n                    return poseDist;\n                }\n            } else if (maxRoundControls[1] === 0) {\n                poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\n\n                return poseDist;\n            } else if (selectedVertical) {\n                if (maxRoundControls[1] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\n                    return poseDist;\n                }\n            }\n            return [0, 0];\n        });\n\n        dists[index] = dist;\n        const nextPoses = controlPoses.map((info, i) => {\n            return {\n                ...info,\n                pos: plus(info.pos, dists[i]),\n            };\n        });\n\n        if (index < 4) {\n            nextPoses.slice(0, index + 1).forEach(info => {\n                info.virtual = false;\n            });\n        } else {\n            nextPoses.slice(4, index + 1).forEach(info => {\n                info.virtual = false;\n            });\n        }\n\n        datas.prevDist = [distX, distY];\n\n        return triggerRoundEvent(\n            moveable,\n            e,\n            dist,\n            delta,\n            nextPoses,\n        );\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const state = moveable.state;\n\n        state.borderRadiusState = \"\";\n        const { datas, isDouble } = e;\n        if (!datas.isRound) {\n            return false;\n        }\n        const {\n            isControl,\n            controlIndex,\n            isLine,\n            lineIndex,\n        } = datas;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const length = controlPoses.filter(({ virtual }) => virtual).length;\n        const {\n            roundClickable = true,\n        } = moveable.props;\n\n        if (isDouble && roundClickable) {\n            if (isControl && (roundClickable === true || roundClickable === \"control\")) {\n                removeBorderRadius(controlPoses, controlIndex);\n            } else if (isLine && (roundClickable === true || roundClickable === \"line\")) {\n                const [distX, distY] = calculatePointerDist(moveable, e);\n\n                addBorderRadiusByLine(controlPoses, lineIndex, distX, distY);\n            }\n\n            if (length !== controlPoses.filter(({ virtual }) => virtual).length) {\n                triggerRoundEvent(\n                    moveable,\n                    e,\n                    [0, 0],\n                    [0, 0],\n                    controlPoses,\n                );\n            }\n        }\n        const params = fillEndParams<OnRoundEnd>(moveable, e, {});\n\n        triggerEvent(moveable, \"onRoundEnd\", params);\n        state.borderRadiusState = \"\";\n        return params;\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\n        const result = this.dragControlStart(moveable, e);\n\n        if (!result) {\n            return false;\n        }\n\n        const moveables = moveable.moveables;\n        const targets = moveable.props.targets!;\n        const events = fillChildEvents(moveable, \"roundable\", e);\n\n        const nextParams: OnRoundGroupStart = {\n            targets: moveable.props.targets!,\n            events: events.map((ev, i) => {\n                return {\n                    ...ev,\n                    target: targets[i],\n                    moveable: moveables[i],\n                    currentTarget: moveables[i],\n                };\n            }),\n            ...result,\n        };\n\n        triggerEvent(moveable, \"onRoundGroupStart\", nextParams);\n        return result;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\n        const result = this.dragControl(moveable, e);\n\n\n        if (!result) {\n            return false;\n        }\n\n        const moveables = moveable.moveables;\n        const targets = moveable.props.targets!;\n        const events = fillChildEvents(moveable, \"roundable\", e);\n\n        const nextParams: OnRoundGroup = {\n            targets: moveable.props.targets!,\n            events: events.map((ev, i) => {\n                return {\n                    ...ev,\n                    target: targets[i],\n                    moveable: moveables[i],\n                    currentTarget: moveables[i],\n                    ...fillCSSObject({\n                        borderRadius: result.borderRadius,\n                    }, ev),\n                };\n            }),\n            ...result,\n        };\n\n        triggerEvent(moveable, \"onRoundGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\n        const moveables = moveable.moveables;\n        const targets = moveable.props.targets!;\n        const events = fillChildEvents(moveable, \"roundable\", e);\n\n        catchEvent(moveable, \"onRound\", parentEvent => {\n            const nextParams: OnRoundGroup = {\n                targets: moveable.props.targets!,\n                events: events.map((ev, i) => {\n                    return {\n                        ...ev,\n                        target: targets[i],\n                        moveable: moveables[i],\n                        currentTarget: moveables[i],\n                        ...fillCSSObject({\n                            borderRadius: parentEvent.borderRadius,\n                        }, ev),\n                    };\n                }),\n                ...parentEvent,\n            };\n            triggerEvent(moveable, \"onRoundGroup\", nextParams);\n        });\n        const result = this.dragControlEnd(moveable, e);\n\n        if (!result) {\n            return false;\n        }\n        const nextParams: OnRoundGroupEnd = {\n            targets: moveable.props.targets!,\n            events: events.map((ev, i) => {\n                return {\n                    ...ev,\n                    target: targets[i],\n                    moveable: moveables[i],\n                    currentTarget: moveables[i],\n                    lastEvent: ev.datas?.lastEvent,\n                };\n            }),\n            ...result,\n        };\n\n        triggerEvent(moveable, \"onRoundGroupEnd\", nextParams);\n        return nextParams;\n    },\n    unset(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        moveable.state.borderRadiusState = \"\";\n    },\n};\n/**\n * Whether to show and drag or double click border-radius, (default: false)\n * @name Moveable.Roundable#roundable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * % Can be used instead of the absolute px\n * @name Moveable.Roundable#roundRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\n * @name Moveable.Roundable#minRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     minRoundControls: [0, 0],\n * });\n * moveable.minRoundControls = [1, 0];\n */\n/**\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\n * @name Moveable.Roundable#maxRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     maxRoundControls: [4, 4],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * Whether you can add/delete round controls by double-clicking a line or control.\n * @name Moveable.Roundable#roundClickable\n * @default true\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     roundClickable: true,\n * });\n * moveable.roundClickable = false;\n */\n\n/**\n * Whether to show a round control that does not actually exist as a shadow\n * @name Moveable.Roundable#isDisplayShadowRoundControls\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     isDisplayShadowRoundControls: false,\n * });\n * moveable.isDisplayShadowRoundControls = true;\n */\n\n\n/**\n * The padding value of the position of the round control\n * @name Moveable.Roundable#roundPadding\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundPadding: 0,\n * });\n * moveable.roundPadding = 15;\n */\n\n/**\n * When drag start the clip area or controls, the `roundStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundStart\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag or double click the border area or controls, the `round` event is called.\n * @memberof Moveable.Roundable\n * @event round\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag end the border area or controls, the `roundEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundEnd\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag start the clip area or controls, the `roundGroupStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroupStart\n * @param {Moveable.Roundable.OnRoundGroupStart} - Parameters for the `roundGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *   e.events.forEach(ev => {\n *       ev.target.style.cssText += ev.cssText;\n *   });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag or double click the border area or controls, the `roundGroup` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroup\n * @param {Moveable.Roundable.OnRoundGroup} - Parameters for the `roundGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *   e.events.forEach(ev => {\n *       ev.target.style.cssText += ev.cssText;\n *   });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag end the border area or controls, the `roundGroupEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroupEnd\n * @param {Moveable.Roundable.onRoundGroupEnd} - Parameters for the `roundGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *     e.events.forEach(ev => {\n *         ev.target.style.cssText += ev.cssText;\n *     });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    MoveableManagerInterface, BeforeRenderableProps,\n    OnBeforeRenderStart, OnBeforeRender, OnBeforeRenderEnd,\n    MoveableGroupInterface, OnBeforeRenderGroupStart,\n    OnBeforeRenderGroup, OnBeforeRenderGroupEnd,\n} from \"../types\";\nimport { fillParams, triggerEvent } from \"../utils\";\nimport { convertMatrixtoCSS, createIdentityMatrix } from \"@scena/matrix\";\nimport { isArray, splitSpace } from \"@daybrush/utils\";\nimport { fillChildEvents } from \"../groupUtils\";\n\n\nfunction isIdentityMatrix(matrix: string, is3d?: boolean) {\n    const n = is3d ? 4 : 3;\n    const identityMatrix = createIdentityMatrix(n);\n    const value = `matrix${is3d ? \"3d\" : \"\"}(${identityMatrix.join(\",\")})`;\n\n    return matrix === value || matrix === `matrix(1,0,0,1,0,0)`;\n}\nexport default {\n    isPinch: true,\n    name: \"beforeRenderable\",\n    props: {\n    } as const,\n    events: {\n        onBeforeRenderStart: \"beforeRenderStart\",\n        onBeforeRender: \"beforeRender\",\n        onBeforeRenderEnd: \"beforeRenderEnd\",\n        onBeforeRenderGroupStart: \"beforeRenderGroupStart\",\n        onBeforeRenderGroup: \"beforeRenderGroup\",\n        onBeforeRenderGroupEnd: \"beforeRenderGroupEnd\",\n    } as const,\n    dragRelation: \"weak\",\n    setTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        const {\n            is3d,\n            target,\n            targetMatrix,\n        } = moveable.state;\n        const transform = target?.style.transform;\n        const cssMatrix = is3d\n            ? `matrix3d(${targetMatrix.join(\",\")})`\n            : `matrix(${convertMatrixtoCSS(targetMatrix, true)})`;\n        const startTransform = !transform || transform === \"none\" ? cssMatrix : transform;\n\n        e.datas.startTransforms = isIdentityMatrix(startTransform, is3d) ? [] : splitSpace(startTransform);\n    },\n    resetStyle(e: any) {\n        const datas = e.datas;\n\n        datas.nextStyle = {};\n        datas.nextTransforms = e.datas.startTransforms;\n        datas.nextTransformAppendedIndexes = [];\n    },\n    fillDragStartParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRenderStart>(moveable, e, {\n            setTransform: (transform: string | string[]) => {\n                e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            },\n            isPinch: !!e.isPinch,\n        });\n    },\n    fillDragParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        });\n    },\n    dragStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.setTransform(moveable, e);\n        this.resetStyle(e);\n\n        triggerEvent(moveable, `onBeforeRenderStart`, this.fillDragStartParams(moveable, e));\n    },\n    drag(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.resetStyle(e);\n        triggerEvent(moveable, `onBeforeRender`, fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        triggerEvent(moveable, `onBeforeRenderEnd`, fillParams<OnBeforeRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragStart(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.setTransform(childMoveable, childEvent);\n            this.resetStyle(childEvent);\n\n            return this.fillDragStartParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroupStart`, fillParams<OnBeforeRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            setTransform() { },\n            events: params,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.drag(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.resetStyle(childEvent);\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroup`, fillParams<OnBeforeRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            events: params,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragEnd(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderGroupEnd`, fillParams<OnBeforeRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import { getNextStyle, getNextTransformText } from \"../gesto/GestoUtils\";\nimport { fillChildEvents } from \"../groupUtils\";\nimport {\n    MoveableManagerInterface, RenderableProps, OnRenderStart, OnRender,\n    OnRenderEnd, MoveableGroupInterface,\n    OnRenderGroupStart, OnRenderGroup, OnRenderGroupEnd,\n} from \"../types\";\nimport { triggerEvent, fillParams, fillCSSObject } from \"../utils\";\n\nexport default {\n    name: \"renderable\",\n    props: {\n    } as const,\n    events: {\n        onRenderStart: \"renderStart\",\n        onRender: \"render\",\n        onRenderEnd: \"renderEnd\",\n        onRenderGroupStart: \"renderGroupStart\",\n        onRenderGroup: \"renderGroup\",\n        onRenderGroupEnd: \"renderGroupEnd\",\n    } as const,\n    dragRelation: \"weak\",\n    dragStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderStart`, fillParams<OnRenderStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    drag(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRender`, this.fillDragParams(moveable, e));\n    },\n    dragAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        if (e.resultCount) {\n            return this.drag(moveable, e);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderEnd`, this.fillDragEndParams(moveable, e));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupStart`, fillParams<OnRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroup`, fillParams<OnRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n            events: params,\n        },));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragEndParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroupEnd`, fillParams<OnRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n            events: params,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragAfter(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n    fillDragParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return fillParams<OnRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        });\n    },\n    fillDragEndParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return fillParams<OnRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        });\n    },\n} as const;\n","import { Able, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { convertDragDist, defaultSync } from \"../utils\";\nimport Gesto, { GestoOptions } from \"gesto\";\nimport BeforeRenderable from \"../ables/BeforeRenderable\";\nimport Renderable from \"../ables/Renderable\";\n\nexport function triggerAble(\n    moveable: MoveableManagerInterface,\n    ableType: string,\n    eventOperation: string,\n    eventAffix: string,\n    eventType: any,\n    e: any,\n    requestInstant?: boolean,\n) {\n    const isStart = eventType === \"Start\";\n    const target = moveable.state.target;\n    const isRequest = e.isRequest;\n\n    if (\n        !target\n        || (isStart && eventAffix.indexOf(\"Control\") > -1\n            && !isRequest && moveable.areaElement === e.inputEvent.target)\n    ) {\n        return false;\n    }\n    // \"drag\" \"Control\" \"After\"\n    const eventName = `${eventOperation}${eventAffix}${eventType}`;\n    const conditionName = `${eventOperation}${eventAffix}Condition`;\n    const isEnd = eventType === \"End\";\n    const isAfter = eventType === \"After\";\n    const isFirstStart = isStart && (\n        !moveable.targetGesto || !moveable.controlGesto\n        || (!moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag())\n    );\n\n    if (isFirstStart) {\n        moveable.updateRect(eventType, true, false);\n    }\n    e.clientDistX = e.distX;\n    e.clientDistY = e.distY;\n    if (eventType === \"\" && !isRequest) {\n        // Convert distX, distY\n        convertDragDist(moveable.state, e);\n    }\n    // const isGroup = eventAffix.indexOf(\"Group\") > -1;\n    const ables: Able[] = [...(moveable as any)[ableType]];\n\n    if (isRequest) {\n        const requestAble = e.requestAble;\n\n        if (!ables.some(able => able.name === requestAble)) {\n            ables.push(...moveable.props.ables!.filter(able => able.name === requestAble));\n        }\n    }\n    if (!ables.length || ables.every(able => able.dragRelation)) {\n        return false;\n    }\n    const eventAbles: Able[] = [BeforeRenderable, ...ables, Renderable].filter((able: any) => able[eventName]);\n    const datas = e.datas;\n\n    if (isFirstStart) {\n        eventAbles.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n\n    const inputEvent = e.inputEvent;\n    let inputTarget: Element;\n\n    if (isEnd && inputEvent) {\n        inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n    }\n    let resultCount = 0;\n\n    let isDragStop = false;\n    const stop = () => {\n        isDragStop = true;\n        e.stop?.();\n    };\n    const results = eventAbles.filter((able: any) => {\n        const ableName = able.name;\n        const nextDatas = datas[ableName] || (datas[ableName] = {});\n\n        if (isStart) {\n            nextDatas.isEventStart = !able[conditionName] || able[conditionName](moveable, e);\n        }\n\n        if (nextDatas.isEventStart) {\n            const result = able[eventName](moveable, {\n                ...e,\n                stop,\n                resultCount,\n                datas: nextDatas,\n                originalDatas: datas,\n                inputTarget,\n            });\n\n            (moveable as any)._emitter.off();\n            if (isStart && result === false) {\n                nextDatas.isEventStart = false;\n            }\n            resultCount += result ? 1 : 0;\n            return result;\n        }\n        return false;\n    });\n\n    const isUpdate = results.length;\n    let isForceEnd = false;\n\n    // end ables\n    if (isDragStop) {\n        isForceEnd = true;\n    }\n    if (!isForceEnd && isStart && eventAbles.length && !isUpdate) {\n        isForceEnd = eventAbles.filter(able => {\n            const ableName = able.name;\n            const nextDatas = datas[ableName];\n\n            if (nextDatas.isEventStart) {\n                if (able.dragRelation === \"strong\") {\n                    return false;\n                }\n                // start drag\n                return true;\n            }\n            // cancel event\n            return false;\n        }).length as any;\n    }\n\n    if (isEnd || isForceEnd) {\n        moveable.state.gestos = {};\n\n        if ((moveable as MoveableGroupInterface).moveables) {\n            (moveable as MoveableGroupInterface).moveables.forEach(childMoveable => {\n                childMoveable.state.gestos = {};\n            });\n        }\n        eventAbles.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n    if (isStart && !isForceEnd && !isRequest && isUpdate) {\n        e?.preventDefault();\n    }\n    if (moveable.isUnmounted || isForceEnd) {\n        return false;\n    }\n    if ((!isStart && isUpdate && !requestInstant) || isEnd) {\n        const flushSync = moveable.props.flushSync || defaultSync;\n\n        flushSync(() => {\n            moveable.updateRect(isEnd ? eventType : \"\", true, false);\n            moveable.forceUpdate();\n        });\n\n    }\n    if (!isStart && !isEnd && !isAfter && isUpdate && !requestInstant) {\n        triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e);\n    }\n    return true;\n}\n\nexport function checkMoveableTarget(moveable: MoveableManagerInterface) {\n    return (e: { inputEvent: Event }) => {\n        const {\n            dragTarget,\n        } = moveable.props;\n        const eventTarget = e.inputEvent.target as Element;\n        const areaElement = moveable.areaElement;\n\n        return dragTarget && (eventTarget === dragTarget || dragTarget.contains(eventTarget))\n            || eventTarget === areaElement\n            || (!moveable.isMoveableElement(eventTarget) && !moveable.controlBox.getElement().contains(eventTarget))\n            || hasClass(eventTarget, \"moveable-area\")\n            || hasClass(eventTarget, \"moveable-padding\")\n            || hasClass(eventTarget, \"moveable-edgeDraggable\");\n    };\n}\n\nexport function getTargetAbleGesto(\n    moveable: MoveableManagerInterface,\n    moveableTarget: HTMLElement | SVGElement,\n    eventAffix: string,\n) {\n    const controlBox = moveable.controlBox.getElement();\n    const targets: Array<HTMLElement | SVGElement> = [];\n    const dragTarget = moveable.props.dragTarget;\n\n    targets.push(controlBox);\n\n    if (!moveable.props.dragArea || dragTarget) {\n        targets.push(moveableTarget);\n    }\n\n    return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n        dragStart: checkMoveableTarget(moveable),\n        pinchStart: checkMoveableTarget(moveable),\n    });\n}\nexport function getAbleGesto(\n    moveable: MoveableManagerInterface,\n    target: HTMLElement | SVGElement | Array<HTMLElement | SVGElement>,\n    ableType: string,\n    eventAffix: string,\n    conditionFunctions: IObject<any> = {},\n) {\n    const isTargetAbles = ableType === \"targetAbles\";\n    const {\n        pinchOutside,\n        pinchThreshold,\n        preventClickEventOnDrag,\n        preventClickDefault,\n        checkInput,\n    } = moveable.props;\n    const options: GestoOptions = {\n        preventDefault: true,\n        preventRightClick: true,\n        preventWheelClick: true,\n        container: window,\n        pinchThreshold,\n        pinchOutside,\n        preventClickEventOnDrag: isTargetAbles ? preventClickEventOnDrag : false,\n        preventClickEventOnDragStart: isTargetAbles ? preventClickDefault : false,\n        preventClickEventByCondition: isTargetAbles ? null : (e: MouseEvent) => {\n            return moveable.controlBox.getElement().contains(e.target as Element);\n        },\n        checkInput: isTargetAbles ? checkInput : false,\n    };\n    const gesto = new Gesto(target!, options);\n    const isControl = eventAffix === \"Control\";\n\n    [\"drag\", \"pinch\"].forEach(eventOperation => {\n        [\"Start\", \"\", \"End\"].forEach(eventType => {\n\n            gesto.on(`${eventOperation}${eventType}` as any, e => {\n                const eventName = e.eventType;\n\n                if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n                    e.stop();\n                    return;\n                }\n                const result = triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e);\n\n                if (!result) {\n                    e.stop();\n                } else if (moveable.props.stopPropagation || (eventType === \"Start\" && isControl)) {\n                    e?.inputEvent?.stopPropagation();\n                }\n            });\n        });\n    });\n\n    return gesto;\n}\n","import { Able, MoveableManagerInterface } from \"./types\";\n\nexport default class EventManager {\n    private ables: Able[] = [];\n    constructor(\n        private target: HTMLElement | SVGElement | null,\n        private moveable: MoveableManagerInterface | null,\n        private eventName: string,\n    ) {\n        target!.addEventListener(eventName.toLowerCase(), this._onEvent);\n    }\n    public setAbles(ables: Able[]) {\n        this.ables = ables;\n    }\n    public destroy() {\n        this.target!.removeEventListener(this.eventName.toLowerCase(), this._onEvent);\n        this.target = null;\n        this.moveable = null;\n    }\n    private _onEvent = (e: Event) => {\n        const eventName = this.eventName;\n        const moveable = this.moveable!;\n\n        if (moveable.state.disableNativeEvent) {\n            return;\n        }\n        this.ables.forEach(able => {\n            (able as any)[eventName](moveable, {\n                inputEvent: e,\n            });\n        });\n    }\n}\n","import {\n    convertCSStoMatrix, convertDimension,\n    createIdentityMatrix, createOriginMatrix, createScaleMatrix,\n} from \"@scena/matrix\";\nimport { IS_WEBKIT, IS_SAFARI_ABOVE15, IS_FIREFOX } from \"../consts\";\nimport { MatrixInfo } from \"../types\";\nimport {\n    getOffsetInfo, getElementTransform,\n    getTransformMatrix, getPositionFixedInfo,\n    convert3DMatrixes, getOffsetPosInfo,\n    getSVGMatrix, getBodyOffset, getAbsoluteMatrix,\n} from \"../utils\";\n\n\nexport function getShadowRoot(parentElement: HTMLElement | SVGElement) {\n    if (parentElement && parentElement.getRootNode) {\n        const rootNode = parentElement.getRootNode();\n\n        if (rootNode.nodeType === 11) {\n            return rootNode;\n        }\n    }\n    return;\n}\n\nexport function getMatrixStackInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    checkContainer?: boolean,\n) {\n    let el: SVGElement | HTMLElement | null = target;\n    const matrixes: MatrixInfo[] = [];\n    const documentElement = document.documentElement || document.body;\n    let requestEnd = !checkContainer && target === container || target === documentElement;\n    let isEnd = requestEnd;\n    let is3d = false;\n    let n = 3;\n    let transformOrigin!: number[];\n    let targetTransformOrigin!: number[];\n    let targetMatrix!: number[];\n\n    let hasFixed = false;\n    let offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n    let zoom = 1;\n\n    while (el && !isEnd) {\n        isEnd = requestEnd;\n        const style: CSSStyleDeclaration = getComputedStyle(el);\n        const position = style.position;\n        const transform = getElementTransform(el, style);\n        let matrix: number[] = convertCSStoMatrix(getTransformMatrix(transform));\n        const isFixed = position === \"fixed\";\n        let fixedInfo: {\n            hasTransform: boolean;\n            fixedContainer: HTMLElement | null;\n        } = {\n            hasTransform: false,\n            fixedContainer: null,\n        };\n        if (isFixed) {\n            hasFixed = true;\n            fixedInfo = getPositionFixedInfo(el);\n\n            offsetContainer = fixedInfo.fixedContainer!;\n        }\n\n        // convert 3 to 4\n        const length = matrix.length;\n\n        if (!is3d && length === 16) {\n            is3d = true;\n            n = 4;\n\n            convert3DMatrixes(matrixes);\n            if (targetMatrix) {\n                targetMatrix = convertDimension(targetMatrix, 3, 4);\n            }\n        }\n        if (is3d && length === 9) {\n            matrix = convertDimension(matrix, 3, 4);\n        }\n        const {\n            tagName,\n            hasOffset,\n            isSVG,\n            origin,\n            targetOrigin,\n            offset: offsetPos,\n        } = getOffsetPosInfo(el, target, style);\n        let [\n            offsetLeft,\n            offsetTop,\n        ] = offsetPos;\n\n        if (tagName === \"svg\" && targetMatrix) {\n            // scale matrix for svg's SVGElements.\n            matrixes.push({\n                type: \"target\",\n                target: el,\n                matrix: getSVGMatrix(el as SVGSVGElement, n),\n            });\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createIdentityMatrix(n),\n            });\n        }\n\n        let offsetParent: HTMLElement;\n        let isOffsetEnd = false;\n        let isStatic = false;\n\n        const targetZoom = parseFloat((style as any).zoom) || 1;\n\n        if (isFixed) {\n            offsetParent = fixedInfo.fixedContainer!;\n            isOffsetEnd = true;\n        } else {\n            const offsetInfo = getOffsetInfo(el, container, false, true, style);\n            const offsetZoom = offsetInfo.offsetZoom;\n\n            offsetParent = offsetInfo.offsetParent;\n            isOffsetEnd = offsetInfo.isEnd;\n            isStatic = offsetInfo.isStatic;\n            zoom *= offsetZoom;\n\n            if (offsetZoom !== 1 && isStatic) {\n                offsetLeft -= offsetParent.offsetLeft;\n                offsetTop -= offsetParent.offsetTop;\n            } else if (IS_FIREFOX) {\n                const parentSlotElement = offsetInfo.parentSlotElement;\n\n                if (parentSlotElement) {\n                    let customOffsetParent: HTMLElement | null = offsetParent;\n                    let customOffsetLeft = 0;\n                    let customOffsetTop = 0;\n\n                    while (customOffsetParent) {\n                        if (!getShadowRoot(customOffsetParent)) {\n                            break;\n                        }\n                        customOffsetLeft += customOffsetParent.offsetLeft;\n                        customOffsetTop += customOffsetParent.offsetTop;\n                        customOffsetParent = customOffsetParent.offsetParent as HTMLElement;\n                    }\n                    offsetLeft -= customOffsetLeft;\n                    offsetTop -= customOffsetTop;\n                }\n            }\n        }\n\n        if (\n            IS_WEBKIT && !IS_SAFARI_ABOVE15\n            && hasOffset && !isSVG && isStatic\n            && (position === \"relative\" || position === \"static\")\n        ) {\n            offsetLeft -= offsetParent.offsetLeft;\n            offsetTop -= offsetParent.offsetTop;\n            requestEnd = requestEnd || isOffsetEnd;\n        }\n\n        let parentClientLeft = 0;\n        let parentClientTop = 0;\n        let fixedClientLeft = 0;\n        let fixedClientTop = 0;\n\n        if (isFixed) {\n            if (hasOffset && fixedInfo.hasTransform) {\n                // border\n                fixedClientLeft = offsetParent.clientLeft;\n                fixedClientTop = offsetParent.clientTop;\n            }\n        } else {\n            if (hasOffset && offsetContainer !== offsetParent) {\n                // border\n                parentClientLeft = offsetParent.clientLeft;\n                parentClientTop = offsetParent.clientTop;\n            }\n            if (hasOffset && offsetParent === documentElement) {\n                const margin = getBodyOffset(el, false, style);\n\n                offsetLeft += margin[0];\n                offsetTop += margin[1];\n            }\n        }\n\n        matrixes.push({\n            type: \"target\",\n            target: el,\n            matrix: getAbsoluteMatrix(matrix, n, origin),\n        });\n\n        if (hasOffset) {\n            const isElementTarget = el === target;\n            const scrollLeft = isElementTarget ? 0 : el.scrollLeft;\n            const scrollTop = isElementTarget ? 0 : el.scrollTop;\n\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createOriginMatrix([\n                    offsetLeft - scrollLeft + parentClientLeft - fixedClientLeft,\n                    offsetTop - scrollTop + parentClientTop - fixedClientTop,\n                ], n),\n            });\n        } else {\n            // svg\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                origin,\n            });\n        }\n        // transform으로 계산되지 않는 zoom을 위한 (0, 0) 을 기준 matrix 추가.\n        if (targetZoom !== 1) {\n            matrixes.push({\n                type: \"zoom\",\n                target: el,\n                matrix: getAbsoluteMatrix(createScaleMatrix([targetZoom, targetZoom], n), n, [0, 0]),\n            });\n        }\n        if (!targetMatrix) {\n            targetMatrix = matrix;\n        }\n        if (!transformOrigin) {\n            transformOrigin = origin;\n        }\n        if (!targetTransformOrigin) {\n            targetTransformOrigin = targetOrigin;\n        }\n\n        if (isEnd || isFixed) {\n            break;\n        } else {\n            el = offsetParent;\n            requestEnd = isOffsetEnd;\n        }\n        if (!checkContainer || el === documentElement) {\n            isEnd = requestEnd;\n        }\n    }\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(n);\n    }\n    if (!transformOrigin) {\n        transformOrigin = [0, 0];\n    }\n    if (!targetTransformOrigin) {\n        targetTransformOrigin = [0, 0];\n    }\n\n    return {\n        zoom,\n        offsetContainer,\n        matrixes,\n        targetMatrix,\n        transformOrigin,\n        targetOrigin: targetTransformOrigin,\n        is3d,\n        hasFixed,\n    };\n}\n","import { createIdentityMatrix, convertDimension, multiply, createOriginMatrix, ignoreDimension } from \"@scena/matrix\";\nimport { convert3DMatrixes, getOffsetInfo, getSVGOffset, makeMatrixCSS } from \"../utils\";\nimport { getMatrixStackInfo } from \"./getMatrixStackInfo\";\n\nexport interface MoveableElementMatrixInfo {\n    hasZoom: boolean;\n    hasFixed: boolean;\n    originalRootMatrix: number[];\n    rootMatrix: number[];\n    beforeMatrix: number[];\n    offsetMatrix: number[];\n    allMatrix: number[];\n    targetMatrix: number[];\n    transformOrigin: number[];\n    targetOrigin: number[];\n    is3d: boolean;\n    targetTransform: string;\n    offsetContainer: HTMLElement | null,\n    offsetRootContainer: HTMLElement | null,\n}\n\nexport function calculateMatrixStack(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    // prevMatrix?: number[],\n    // prevRootMatrix?: number[],\n    // prevN?: number,\n): MoveableElementMatrixInfo {\n    const {\n        matrixes,\n        is3d,\n        targetMatrix: prevTargetMatrix,\n        transformOrigin,\n        targetOrigin,\n        offsetContainer,\n        hasFixed,\n        zoom: containerZoom,\n    } = getMatrixStackInfo(target, container); // prevMatrix\n    const {\n        matrixes: rootMatrixes,\n        is3d: isRoot3d,\n        offsetContainer: offsetRootContainer,\n        zoom: rootZoom,\n    } = getMatrixStackInfo(offsetContainer, rootContainer, true); // prevRootMatrix\n\n    // if (rootContainer === document.body) {\n    //     console.log(offsetContainer, rootContainer, rootMatrixes);\n    // }\n    const isNext3d = isAbsolute3d || isRoot3d || is3d;\n    const n = isNext3d ? 4 : 3;\n    const isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n    let targetMatrix = prevTargetMatrix;\n    // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let allMatrix = createIdentityMatrix(n);\n    let rootMatrix = createIdentityMatrix(n);\n    let beforeMatrix = createIdentityMatrix(n);\n    let offsetMatrix = createIdentityMatrix(n);\n    const length = matrixes.length;\n\n    rootMatrixes.reverse();\n    matrixes.reverse();\n\n    if (!is3d && isNext3d) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n\n        convert3DMatrixes(matrixes);\n    }\n    if (!isRoot3d && isNext3d) {\n        convert3DMatrixes(rootMatrixes);\n    }\n\n\n    // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n    // rootMatrixBeforeOffset = lastOffsetMatrix -> (...) -> container\n    // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n    // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n    rootMatrixes.forEach(info => {\n        rootMatrix = multiply(rootMatrix, info.matrix!, n);\n    });\n    const originalRootContainer = rootContainer || document.body;\n    const endContainer = rootMatrixes[0]?.target\n        || getOffsetInfo(originalRootContainer, originalRootContainer, true).offsetParent;\n    const rootMatrixBeforeOffset = rootMatrixes.slice(1).reduce((matrix, info) => {\n        return multiply(matrix, info.matrix!, n);\n    }, createIdentityMatrix(n));\n    matrixes.forEach((info, i) => {\n        if (length - 2 === i) {\n            // length - 3\n            beforeMatrix = allMatrix.slice();\n        }\n        if (length - 1 === i) {\n            // length - 2\n            offsetMatrix = allMatrix.slice();\n        }\n\n        // calculate for SVGElement\n        if (!info.matrix) {\n            const nextInfo = matrixes[i + 1];\n            const offset = getSVGOffset(\n                info,\n                nextInfo,\n                endContainer,\n                n,\n                multiply(rootMatrixBeforeOffset, allMatrix, n),\n            );\n            info.matrix = createOriginMatrix(offset, n);\n        }\n        allMatrix = multiply(allMatrix, info.matrix!, n);\n    });\n    const isMatrix3d = !isSVGGraphicElement && is3d;\n\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n    }\n    const targetTransform = makeMatrixCSS(\n        isSVGGraphicElement && targetMatrix.length === 16\n            ? convertDimension(targetMatrix, 4, 3) : targetMatrix,\n        isMatrix3d,\n    );\n\n    const originalRootMatrix = rootMatrix;\n    rootMatrix = ignoreDimension(rootMatrix, n, n);\n\n    return {\n        hasZoom: containerZoom !== 1 || rootZoom !== 1,\n        hasFixed,\n        rootMatrix,\n        originalRootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        allMatrix,\n        targetMatrix,\n        targetTransform,\n        transformOrigin,\n        targetOrigin,\n        is3d: isNext3d,\n        offsetContainer,\n        offsetRootContainer,\n    };\n}\n","import { createIdentityMatrix } from \"@scena/matrix\";\nimport { ElementSizes, MoveablePosition } from \"../types\";\nimport { calculateMoveablePosition, getSize, getRotationRad } from \"../utils\";\nimport { calculateMatrixStack, MoveableElementMatrixInfo } from \"./calculateMatrixStack\";\n\nexport interface MoveableElementInfo extends MoveableElementMatrixInfo, MoveablePosition, ElementSizes {\n    width: number;\n    height: number;\n    rotation: number;\n}\n\nexport function calculateElementInfo(\n    target?: SVGElement | HTMLElement | null,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: HTMLElement | SVGElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n): MoveableElementInfo {\n    let width = 0;\n    let height = 0;\n    let rotation = 0;\n    let allResult: {} = {};\n\n    const sizes = getSize(target);\n\n    if (target) {\n        width = sizes.offsetWidth;\n        height = sizes.offsetHeight;\n    }\n\n    if (target) {\n        const result = calculateMatrixStack(\n            target,\n            container,\n            rootContainer,\n            isAbsolute3d,\n            // prevMatrix, prevRootMatrix, prevN,\n        );\n\n        const position = calculateMoveablePosition(\n            result.allMatrix,\n            result.transformOrigin,\n            width, height,\n        );\n        allResult = {\n            ...result,\n            ...position,\n        };\n        const rotationPosition = calculateMoveablePosition(\n            result.allMatrix, [50, 50], 100, 100,\n        );\n        rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\n    }\n    const n = isAbsolute3d ? 4 : 3;\n\n    return {\n        hasZoom: false,\n        width,\n        height,\n        rotation,\n        ...sizes,\n        originalRootMatrix: createIdentityMatrix(n),\n        rootMatrix: createIdentityMatrix(n),\n        beforeMatrix: createIdentityMatrix(n),\n        offsetMatrix: createIdentityMatrix(n),\n        allMatrix: createIdentityMatrix(n),\n        targetMatrix: createIdentityMatrix(n),\n        targetTransform: \"\",\n        transformOrigin: [0, 0],\n        targetOrigin: [0, 0],\n        is3d: !!isAbsolute3d,\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        origin: [0, 0],\n        pos1: [0, 0],\n        pos2: [0, 0],\n        pos3: [0, 0],\n        pos4: [0, 0],\n        direction: 1,\n        hasFixed: false,\n        offsetContainer: null,\n        offsetRootContainer: null,\n        ...allResult,\n    };\n}\n\n\nexport function getElementInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n) {\n    return calculateElementInfo(target, container, rootContainer, true);\n}\n","import { plus, getOrigin, multiply } from \"@scena/matrix\";\nimport { MoveableClientRect, Writable } from \"../types\";\nimport {\n    calculateMoveablePosition,\n    getClientRect, getClientRectByPosition, getOffsetInfo, getTransformOrigin, resetClientRect,\n} from \"../utils\";\nimport { calculateElementInfo, MoveableElementInfo } from \"./getElementInfo\";\n\n\nexport interface MoveableTargetInfo extends MoveableElementInfo {\n    targetClientRect: MoveableClientRect;\n    containerClientRect: MoveableClientRect;\n    moveableClientRect: MoveableClientRect;\n    rootContainerClientRect: MoveableClientRect;\n    beforeDirection: 1 | -1;\n    beforeOrigin: number[];\n    originalBeforeOrigin: number[];\n    target: HTMLElement | SVGElement | null | undefined;\n    style: Partial<Writable<CSSStyleDeclaration>>;\n}\n\nexport function getMoveableTargetInfo(\n    moveableElement?: HTMLElement | null,\n    target?: HTMLElement | SVGElement | null,\n    container?: HTMLElement | SVGElement | null,\n    parentContainer?: HTMLElement | SVGElement | null,\n    rootContainer?: HTMLElement | SVGElement | null,\n    requestStyle: Array<keyof CSSStyleDeclaration> = [],\n): MoveableTargetInfo {\n    let beforeDirection: 1 | -1 = 1;\n    let beforeOrigin = [0, 0];\n    let targetClientRect = resetClientRect();\n    let moveableClientRect = resetClientRect();\n    let containerClientRect = resetClientRect();\n    let rootContainerClientRect = resetClientRect();\n    const style: Partial<Writable<CSSStyleDeclaration>> = {};\n\n    const result = calculateElementInfo(\n        target, container!, rootContainer!,\n        true,\n    );\n    if (target) {\n        const computedStyle = getComputedStyle(target);\n\n        requestStyle.forEach(name => {\n            style[name] = computedStyle[name] as any;\n        });\n        const n = result.is3d ? 4 : 3;\n        const beforePosition = calculateMoveablePosition(\n            result.offsetMatrix,\n            plus(result.transformOrigin, getOrigin(result.targetMatrix, n)),\n            result.width, result.height,\n        );\n        beforeDirection = beforePosition.direction;\n        beforeOrigin = plus(\n            beforePosition.origin,\n            [beforePosition.left - result.left, beforePosition.top - result.top],\n        );\n\n        rootContainerClientRect = getClientRect(result.offsetRootContainer!);\n\n\n        const offsetContainer = getOffsetInfo(parentContainer, parentContainer, true).offsetParent\n            || result.offsetRootContainer!;\n\n\n\n        if (result.hasZoom) {\n            const absoluteTargetPosition = calculateMoveablePosition(\n                multiply(result.originalRootMatrix, result.allMatrix),\n                result.transformOrigin,\n                result.width, result.height,\n            );\n            const absoluteContainerPosition = calculateMoveablePosition(\n                result.originalRootMatrix,\n                getTransformOrigin(getComputedStyle(offsetContainer)).map(pos => parseFloat(pos)),\n                offsetContainer.offsetWidth, offsetContainer.offsetHeight,\n            );\n            targetClientRect = getClientRectByPosition(absoluteTargetPosition, rootContainerClientRect);\n            containerClientRect = getClientRectByPosition(\n                absoluteContainerPosition,\n                rootContainerClientRect,\n                offsetContainer,\n                true,\n            );\n\n            if (moveableElement) {\n                const left = absoluteTargetPosition.left;\n                const top = absoluteTargetPosition.top;\n                moveableClientRect = getClientRectByPosition({\n                    left,\n                    top,\n                    bottom: top,\n                    right: top,\n                }, rootContainerClientRect);\n            }\n        } else {\n            targetClientRect = getClientRect(target);\n            containerClientRect = getClientRect(offsetContainer, true);\n\n            if (moveableElement) {\n                moveableClientRect = getClientRect(moveableElement);\n            }\n        }\n    }\n\n    return {\n        targetClientRect,\n        containerClientRect,\n        moveableClientRect,\n        rootContainerClientRect,\n        beforeDirection,\n        beforeOrigin,\n        originalBeforeOrigin: beforeOrigin,\n        target,\n        style,\n        ...result,\n    };\n}\n","import { minus } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport { MoveableManagerState, PersistRectData } from \"../types\";\n\n\nexport function getPersistState(rect: PersistRectData): Partial<MoveableManagerState> | null {\n    let {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = rect;\n    if (!pos1 || !pos2 || !pos3 || !pos4) {\n        return null;\n    }\n    const minPos = getMinMaxs([pos1!, pos2!, pos3!, pos4!]);\n    const posDelta = [minPos.minX, minPos.minY];\n    const origin = minus(rect.origin!, posDelta);\n\n    pos1 = minus(pos1, posDelta);\n    pos2 = minus(pos2, posDelta);\n    pos3 = minus(pos3, posDelta);\n    pos4 = minus(pos4, posDelta);\n    return {\n        ...rect,\n        left: rect.left,\n        top: rect.top,\n        posDelta,\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        origin,\n        beforeOrigin: origin,\n        // originalBeforeOrigin: origin,\n        isPersisted: true,\n    };\n}\n","import * as React from \"react\";\nimport { createElement } from \"react\";\nimport { PREFIX } from \"./consts\";\nimport {\n    prefix,\n    unset,\n    getAbsolutePosesByState,\n    getRect,\n    filterAbles,\n    equals,\n    flat,\n    groupByMap,\n    calculatePadding,\n    getAbsoluteRotation,\n    defaultSync,\n    getRefTarget,\n    groupBy,\n} from \"./utils\";\nimport Gesto from \"gesto\";\nimport { ref } from \"framework-utils\";\nimport {\n    MoveableManagerProps, MoveableManagerState, Able,\n    RectInfo, Requester, PaddingBox, HitRect, MoveableManagerInterface,\n    MoveableDefaultOptions,\n    GroupableProps,\n} from \"./types\";\nimport { triggerAble, getTargetAbleGesto, getAbleGesto, checkMoveableTarget } from \"./gesto/getAbleGesto\";\nimport { plus } from \"@scena/matrix\";\nimport {\n    addClass, cancelAnimationFrame, find,\n    getKeys, IObject, removeClass, requestAnimationFrame,\n} from \"@daybrush/utils\";\nimport { renderLine } from \"./renderDirections\";\nimport { fitPoints, getAreaSize, getOverlapSize, isInside } from \"overlap-area\";\nimport EventManager from \"./EventManager\";\nimport styled from \"react-css-styled\";\nimport EventEmitter from \"@scena/event-emitter\";\nimport { getMoveableTargetInfo } from \"./utils/getMoveableTargetInfo\";\nimport { VIEW_DRAGGING } from \"./classNames\";\nimport { diff } from \"@egjs/list-differ\";\nimport { getPersistState } from \"./utils/persist\";\n// import { getClipPath } from \"./ables/clippable/utils\";\n\nexport default class MoveableManager<T = {}>\n    extends React.PureComponent<MoveableManagerProps<T>, MoveableManagerState> {\n    public static defaultProps: Required<MoveableManagerProps> = {\n        target: null,\n        dragTarget: null,\n        container: null,\n        rootContainer: null,\n        origin: true,\n        parentMoveable: null,\n        wrapperMoveable: null,\n        isWrapperMounted: false,\n        parentPosition: null,\n        portalContainer: null,\n        useResizeObserver: false,\n        ables: [],\n        pinchThreshold: 20,\n        dragArea: false,\n        passDragArea: false,\n        transformOrigin: \"\",\n        className: \"\",\n        zoom: 1,\n        triggerAblesSimultaneously: false,\n        padding: {},\n        pinchOutside: true,\n        checkInput: false,\n        groupable: false,\n        hideDefaultLines: false,\n        cspNonce: \"\",\n        translateZ: 0,\n        cssStyled: null,\n        customStyledMap: {},\n        props: {},\n        stopPropagation: false,\n        preventClickDefault: false,\n        preventClickEventOnDrag: true,\n        flushSync: defaultSync,\n        firstRenderState: null,\n        persistData: null,\n        viewContainer: null,\n    };\n    public state: MoveableManagerState = {\n        container: null,\n        gestos: {},\n        renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n        disableNativeEvent: false,\n        posDelta: [0, 0],\n        ...getMoveableTargetInfo(null),\n    };\n    public renderState: Record<string, any> = {};\n    public enabledAbles: Able[] = [];\n    public targetAbles: Able[] = [];\n    public controlAbles: Able[] = [];\n    public controlBox!: { getElement(): HTMLElement };\n    public areaElement!: HTMLElement;\n    public targetGesto!: Gesto;\n    public controlGesto!: Gesto;\n    public rotation = 0;\n    public scale: number[] = [1, 1];\n    public isMoveableMounted = false;\n    public isUnmounted = false;\n\n    public events: Record<string, EventManager | null> = {\n        \"mouseEnter\": null,\n        \"mouseLeave\": null,\n    };\n\n    protected _emitter: EventEmitter = new EventEmitter();\n    protected _prevTarget: HTMLElement | SVGElement | null | undefined = null;\n    protected _prevDragArea = false;\n    protected _isPropTargetChanged = false;\n    protected _hasFirstTarget = false;\n\n    private _observer: ResizeObserver | null = null;\n    private _observerId = 0;\n    public _rootContainer: HTMLElement | null | undefined = null;\n    private _viewContainer: HTMLElement | null | undefined = null;\n    private _viewClassNames: string[] = [];\n\n    public render() {\n        const props = this.props;\n        const state = this.getState();\n        const {\n            parentPosition,\n            className,\n            target: propsTarget,\n            zoom, cspNonce,\n            translateZ,\n            cssStyled: ControlBoxElement,\n            portalContainer,\n            groupable,\n        } = props;\n\n        this._checkUpdateRootContainer();\n        this.checkUpdate();\n        this.updateRenderPoses();\n\n        const [parentLeft, parentTop] = parentPosition as number[] || [0, 0];\n        const {\n            left,\n            top,\n            target: stateTarget,\n            direction,\n            hasFixed,\n        } = state;\n        const groupTargets = (props as any).targets;\n        const isDragging = this.isDragging();\n        const ableAttributes: IObject<boolean> = {};\n        this.getEnabledAbles().forEach(able => {\n            ableAttributes[`data-able-${able.name.toLowerCase()}`] = true;\n        });\n        const ableClassName = this._getAbleClassName();\n        const isDisplay\n            = (groupTargets && groupTargets.length && (stateTarget || groupable))\n            || propsTarget\n            || (!this._hasFirstTarget && this.state.isPersisted);\n        const isVisible = this.controlBox || this.props.firstRenderState || this.props.persistData;\n\n        return (\n            <ControlBoxElement\n                cspNonce={cspNonce}\n                ref={ref(this, \"controlBox\")}\n                className={`${prefix(\"control-box\", direction === -1 ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\")} ${ableClassName} ${className}`}\n                {...ableAttributes}\n                onClick={this._onPreventClick}\n                portalContainer={portalContainer}\n                style={{\n                    \"position\": hasFixed ? \"fixed\" : \"absolute\",\n                    \"display\": isDisplay ? \"block\" : \"none\",\n                    \"visibility\": isVisible ? \"visible\" : \"hidden\",\n                    \"transform\": `translate3d(${left - parentLeft}px, ${top - parentTop}px, ${translateZ})`,\n                    \"--zoom\": zoom,\n                    \"--zoompx\": `${zoom}px`,\n                }}>\n                {this.renderAbles()}\n                {this._renderLines()}\n            </ControlBoxElement>\n        );\n    }\n    public componentDidMount() {\n        this.isMoveableMounted = true;\n        this.isUnmounted = false;\n        this.controlBox.getElement();\n        const props = this.props;\n        const { parentMoveable, container, wrapperMoveable } = props;\n\n\n        this._checkUpdateRootContainer();\n        this._checkUpdateViewContainer();\n        this._updateTargets();\n        this._updateNativeEvents();\n        this._updateEvents();\n        this.updateCheckInput();\n        this._updateObserver(this.props);\n\n        if (!container && !parentMoveable && !wrapperMoveable && !this.state.isPersisted) {\n            this.updateRect(\"\", false, false);\n            this.forceUpdate();\n        }\n    }\n    public componentDidUpdate(prevProps: any) {\n        this._checkUpdateRootContainer();\n        this._checkUpdateViewContainer();\n        this._updateNativeEvents();\n        this._updateEvents();\n        this._updateTargets();\n        this.updateCheckInput();\n        this._updateObserver(prevProps);\n    }\n    public componentWillUnmount() {\n        this.isMoveableMounted = false;\n        this.isUnmounted = true;\n        this._emitter.off();\n\n        const viewContainer = this._viewContainer;\n\n        if (viewContainer) {\n            this._changeAbleViewClassNames([]);\n        }\n        unset(this, \"targetGesto\");\n        unset(this, \"controlGesto\");\n\n        const events = this.events;\n        for (const name in events) {\n            const manager = events[name];\n            manager && manager.destroy();\n        }\n    }\n    public getTargets(): Array<HTMLElement | SVGElement> {\n        const target = this.props.target;\n        return target ? [target] : [];\n    }\n    /**\n     * Get the able used in MoveableManager.\n     * @method Moveable#getAble\n     * @param - able name\n     */\n    public getAble<T extends Able>(ableName: string): T | undefined {\n        const ables: Able[] = this.props.ables || [];\n\n        return find(ables, able => able.name === ableName) as T;\n    }\n    public getContainer(): HTMLElement | SVGElement {\n        const { parentMoveable, wrapperMoveable, container } = this.props;\n\n        return container!\n            || (wrapperMoveable && wrapperMoveable.getContainer())\n            || (parentMoveable && parentMoveable.getContainer())\n            || this.controlBox.getElement().parentElement!;\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @method Moveable#isMoveableElement\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: Element) {\n        return target && (target.getAttribute?.(\"class\") || \"\").indexOf(PREFIX) > -1;\n    }\n    /**\n     * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n     * @method Moveable#dragStart\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent) {\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n\n        if (targetGesto && checkMoveableTarget(this)({ inputEvent: e })) {\n            if (!targetGesto.isFlag()) {\n                targetGesto.triggerDragStart(e);\n            }\n        } else if (controlGesto && this.isMoveableElement(e.target as Element)) {\n            if (!controlGesto.isFlag()) {\n                controlGesto.triggerDragStart(e);\n            }\n        }\n        return this;\n    }\n    /**\n     * Hit test an element or rect on a moveable target.\n     * (100% = 100)\n     * @method Moveable#hitTest\n     * @param - element or rect to test\n     * @return - Get hit test rate (rate > 0 is hitted)\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.hitTest(e.target) > 0) {\n     *          console.log(\"hiited\");\n     *     }\n     * });\n     */\n    public hitTest(el: Element | HitRect): number {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return 0;\n        }\n        let rect: Required<HitRect>;\n\n        if (el instanceof Element) {\n            const clientRect = el.getBoundingClientRect();\n\n            rect = {\n                left: clientRect.left,\n                top: clientRect.top,\n                width: clientRect.width,\n                height: clientRect.height,\n            };\n        } else {\n            rect = { width: 0, height: 0, ...el };\n        }\n\n        const {\n            left: rectLeft,\n            top: rectTop,\n            width: rectWidth,\n            height: rectHeight,\n        } = rect;\n        const points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\n        const size = getOverlapSize(points, [\n            [rectLeft, rectTop],\n            [rectLeft + rectWidth, rectTop],\n            [rectLeft + rectWidth, rectTop + rectHeight],\n            [rectLeft, rectTop + rectHeight],\n        ]);\n        const totalSize = getAreaSize(points);\n\n        if (!size || !totalSize) {\n            return 0;\n        }\n\n        return Math.min(100, size / totalSize * 100);\n    }\n    /**\n     * Whether the coordinates are inside Moveable\n     * @method Moveable#isInside\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number) {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return false;\n        }\n        return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\n    }\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @method Moveable#updateRect\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        const props = this.props;\n        const parentMoveable = props.parentMoveable;\n        const state = this.state;\n        const target = (state.target || this.props.target) as HTMLElement | SVGElement;\n        const container = this.getContainer();\n        const rootContainer = parentMoveable\n            ? (parentMoveable as any)._rootContainer\n            : this._rootContainer;\n        const nextState = getMoveableTargetInfo(\n            this.controlBox && this.controlBox.getElement(),\n            target,\n            container,\n            container,\n            rootContainer || container,\n            this._getRequestStyles(),\n        );\n\n        if (!target && this._hasFirstTarget && props.persistData) {\n            const persistState = getPersistState(props.persistData);\n\n            for (const name in persistState) {\n                (nextState as any)[name] = (persistState as any)[name];\n            }\n        }\n        this.updateState(\n            nextState,\n            parentMoveable ? false : isSetState,\n        );\n    }\n    /**\n     * Check if the moveable state is being dragged.\n     * @method Moveable#isDragging\n     * @param - If you want to check if able is dragging, specify ableName.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // false\n     * console.log(moveable.isDragging());\n     *\n     * moveable.on(\"drag\", () => {\n     *   // true\n     *   console.log(moveable.isDragging());\n     * });\n     */\n    public isDragging(ableName?: string) {\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n\n        if (targetGesto?.isFlag()) {\n            if (!ableName) {\n                return true;\n            }\n            const data = targetGesto.getEventData();\n\n            return !!data[ableName]?.isEventStart;\n        }\n        if (controlGesto?.isFlag()) {\n            if (!ableName) {\n                return true;\n            }\n            const data = controlGesto.getEventData();\n\n            return !!data[ableName]?.isEventStart;\n        }\n        return false;\n    }\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * @method Moveable#updateTarget\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(type?: \"Start\" | \"\" | \"End\") {\n        this.updateRect(type, true);\n    }\n    /**\n     * You can get the vertex information, position and offset size information of the target based on the container.\n     * @method Moveable#getRect\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const rectInfo = moveable.getRect();\n     */\n    public getRect(): RectInfo {\n        const state = this.state;\n        const poses = getAbsolutePosesByState(this.state);\n        const [pos1, pos2, pos3, pos4] = poses;\n        const rect = getRect(poses);\n        const {\n            width: offsetWidth,\n            height: offsetHeight,\n        } = state;\n        const {\n            width,\n            height,\n            left,\n            top,\n        } = rect;\n        const statePos = [state.left, state.top];\n        const origin = plus(statePos, state.origin);\n        const beforeOrigin = plus(statePos, state.beforeOrigin);\n        const transformOrigin = state.transformOrigin;\n\n        return {\n            width,\n            height,\n            left,\n            top,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            offsetWidth,\n            offsetHeight,\n            beforeOrigin,\n            origin,\n            transformOrigin,\n            rotation: this.getRotation(),\n        };\n    }\n    /**\n     * Get a manager that manages the moveable's state and props.\n     * @method Moveable#getManager\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const manager = moveable.getManager(); // real moveable class instance\n     */\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this as any;\n    }\n    /**\n     * You can stop the dragging currently in progress through a method from outside.\n     * @method Moveable#stopDrag\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.stopDrag();\n     */\n    public stopDrag(type?: \"target\" | \"control\"): void {\n        if (!type || type === \"target\") {\n            this.targetGesto?.stop();\n        }\n        if (!type || type === \"control\") {\n            this.controlGesto?.stop();\n        }\n    }\n    public getRotation() {\n        const {\n            pos1,\n            pos2,\n            direction,\n        } = this.state;\n\n        return getAbsoluteRotation(pos1, pos2, direction);\n    }\n    /**\n     * Request able through a method rather than an event.\n     * At the moment of execution, requestStart is executed,\n     * and then request and requestEnd can be executed through Requester.\n     * @method Moveable#request\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\n     * @param - ableName\n     * @param - request to be able params.\n     * @param - If isInstant is true, request and requestEnd are executed immediately.\n     * @return - Able Requester. If there is no request in able, nothing will work.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     *\n     * // Start move\n     * const requester = moveable.request(\"draggable\");\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.requestEnd();\n     */\n    public request(ableName: string, param: IObject<any> = {}, isInstant?: boolean): Requester {\n        const { ables, groupable } = this.props as any;\n        const requsetAble: Able = ables!.filter((able: Able) => able.name === ableName)[0];\n\n        if (this.isDragging() || !requsetAble || !requsetAble.request) {\n            return {\n                request() {\n                    return this;\n                },\n                requestEnd() {\n                    return this;\n                },\n            };\n        }\n        const self = this;\n        const ableRequester = requsetAble.request(this);\n\n        const requestInstant = isInstant || param.isInstant;\n        const ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n        const eventAffix = `${(groupable ? \"Group\" : \"\")}${ableRequester.isControl ? \"Control\" : \"\"}`;\n\n        const requester = {\n            request(ableParam: IObject<any>) {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"\", {\n                    ...ableRequester.request(ableParam),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n            requestEnd() {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"End\", {\n                    ...ableRequester.requestEnd(),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n        };\n\n        triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", {\n            ...ableRequester.requestStart(param),\n            requestAble: ableName,\n            isRequest: true,\n        }, requestInstant);\n\n        return requestInstant ? requester.request(param).requestEnd() : requester;\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @method Moveable#destroy\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy(): void {\n        this.componentWillUnmount();\n    }\n    public updateRenderPoses() {\n        const state = this.getState();\n        const props = this.props;\n        const {\n            originalBeforeOrigin,\n            transformOrigin,\n            allMatrix, is3d,\n            pos1, pos2, pos3, pos4,\n            left: stateLeft,\n            top: stateTop,\n            // offsetWidth,\n            // offsetHeight,\n            isPersisted,\n        } = state;\n        const {\n            left = 0,\n            top = 0,\n            bottom = 0,\n            right = 0,\n        } = (props.padding || {}) as PaddingBox;\n        const n = is3d ? 4 : 3;\n\n        // const clipPathInfo = getClipPath(\n        //     props.target,\n        //     offsetWidth,\n        //     offsetHeight,\n        // );\n\n        // if (clipPathInfo) {\n        //     left -= Math.max(0, clipPathInfo.left);\n        //     top -= Math.max(0, clipPathInfo.top);\n        //     bottom -= Math.max(0, offsetHeight - clipPathInfo.bottom);\n        //     right -= Math.max(0, offsetWidth - clipPathInfo.right);\n        // }\n\n        let absoluteOrigin: number[] = [];\n\n        if (isPersisted) {\n            absoluteOrigin = transformOrigin;\n        } else if (this.controlBox && props.groupable) {\n            absoluteOrigin = originalBeforeOrigin;\n        } else {\n            absoluteOrigin = plus(originalBeforeOrigin, [stateLeft, stateTop]);\n        }\n\n        state.renderPoses = [\n            plus(pos1, calculatePadding(allMatrix, [-left, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos2, calculatePadding(allMatrix, [right, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos3, calculatePadding(allMatrix, [-left, bottom], transformOrigin, absoluteOrigin, n)),\n            plus(pos4, calculatePadding(allMatrix, [right, bottom], transformOrigin, absoluteOrigin, n)),\n        ];\n    }\n    public checkUpdate() {\n        this._isPropTargetChanged = false;\n        const { target, container, parentMoveable } = this.props;\n        const {\n            target: stateTarget,\n            container: stateContainer,\n        } = this.state;\n\n        if (!stateTarget && !target) {\n            return;\n        }\n        this.updateAbles();\n\n        const isTargetChanged = !equals(stateTarget, target);\n        const isChanged = isTargetChanged || !equals(stateContainer, container);\n\n        if (!isChanged) {\n            return;\n        }\n        const moveableContainer = container || this.controlBox;\n\n        if (moveableContainer) {\n            this.unsetAbles();\n        }\n        this.updateState({ target, container });\n\n        if (!parentMoveable && moveableContainer) {\n            this.updateRect(\"End\", false, false);\n        }\n        this._isPropTargetChanged = isTargetChanged;\n    }\n    public waitToChangeTarget(): Promise<void> {\n        return new Promise(() => { });\n    }\n    public triggerEvent(name: string, e: any): any {\n        this._emitter.trigger(name, e);\n        const callback = (this.props as any)[name];\n\n        return callback && callback(e);\n    }\n    public useCSS(tag: string, css: string) {\n        const customStyleMap = this.props.customStyledMap as Record<string, any>;\n\n        const key = tag + css;\n\n        if (!customStyleMap[key]) {\n            customStyleMap[key] = styled(tag, css);\n        }\n        return customStyleMap[key];\n    }\n    public checkUpdateRect = () => {\n        if (this.isDragging()) {\n            return;\n        }\n        const parentMoveable = this.props.parentMoveable;\n\n        if (parentMoveable) {\n            (parentMoveable as MoveableManager).checkUpdateRect();\n            return;\n        }\n        cancelAnimationFrame(this._observerId);\n        this._observerId = requestAnimationFrame(() => {\n            if (this.isDragging()) {\n                return;\n            }\n            this.updateRect();\n        });\n    }\n    public getState(): MoveableManagerState {\n        const props = this.props;\n        if (props.target || (props as any).targets?.length) {\n            this._hasFirstTarget = true;\n        }\n        const hasControlBox = this.controlBox;\n        const persistData = props.persistData;\n        const firstRenderState = props.firstRenderState;\n\n        if (firstRenderState && !hasControlBox) {\n            return firstRenderState;\n        }\n        if (!this._hasFirstTarget && persistData) {\n            const persistState = getPersistState(persistData);\n\n            if (persistState) {\n                this.updateState(persistState, false);\n                return this.state;\n            }\n        }\n        (this.state as any).isPersisted = false;\n        return this.state;\n    }\n    public updateSelectors() { }\n    protected unsetAbles() {\n        this.targetAbles.forEach(able => {\n            if (able.unset) {\n                able.unset(this);\n            }\n        });\n    }\n    protected updateAbles(\n        ables: Able[] = this.props.ables!,\n        eventAffix: string = \"\",\n    ) {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const enabledAbles = this.getEnabledAbles(ables);\n\n        const dragStart = `drag${eventAffix}Start` as \"dragStart\";\n        const pinchStart = `pinch${eventAffix}Start` as \"pinchStart\";\n        const dragControlStart = `drag${eventAffix}ControlStart` as \"dragControlStart\";\n\n        const targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n        const controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n\n        this.enabledAbles = enabledAbles;\n        this.targetAbles = targetAbles;\n        this.controlAbles = controlAbles;\n    }\n    protected updateState(nextState: any, isSetState?: boolean) {\n        if (isSetState) {\n            if (this.isUnmounted) {\n                return;\n            }\n            this.setState(nextState);\n        } else {\n            const state = this.state;\n\n            for (const name in nextState) {\n                (state as any)[name] = nextState[name];\n            }\n        }\n    }\n    protected getEnabledAbles(ables: Able[] = this.props.ables!) {\n        const props = this.props as any;\n\n        return ables.filter(able => able && (\n            (able.always && props[able.name] !== false)\n            || props[able.name]));\n    }\n    protected renderAbles() {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const Renderer = {\n            createElement,\n        };\n\n        this.renderState = {};\n\n        return groupByMap(flat<any>(\n            filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(({ render }) => {\n                return render!(this, Renderer) || [];\n            })).filter(el => el), ({ key }) => key).map(group => group[0]);\n    }\n    protected updateCheckInput() {\n        this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n    }\n    protected _getRequestStyles() {\n        const styleNames = this.getEnabledAbles().reduce((names, able) => {\n            const ableStyleNames = (able.requestStyle?.() ?? []) as Array<keyof CSSStyleDeclaration>;\n\n            return [...names, ...ableStyleNames];\n        }, [] as Array<keyof CSSStyleDeclaration>);\n\n\n        return styleNames;\n    }\n    protected _updateObserver(prevProps: MoveableDefaultOptions) {\n        const props = this.props;\n        const target = props.target;\n\n        if (!window.ResizeObserver || !target || !props.useResizeObserver) {\n            this._observer?.disconnect();\n            return;\n        }\n\n        if (prevProps.target === target && this._observer) {\n            return;\n        }\n\n        const observer = new ResizeObserver(this.checkUpdateRect);\n\n        observer.observe(target!, {\n            box: \"border-box\",\n        });\n        this._observer = observer;\n\n        return;\n    }\n    protected _updateEvents() {\n        const controlBoxElement = this.controlBox.getElement();\n        const hasTargetAble = this.targetAbles.length;\n        const hasControlAble = this.controlAbles.length;\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const isUnset = (!hasTargetAble && this.targetGesto)\n            || this._isTargetChanged(true);\n\n        if (isUnset) {\n            unset(this, \"targetGesto\");\n            this.updateState({ gesto: null });\n        }\n        if (!hasControlAble) {\n            unset(this, \"controlGesto\");\n        }\n\n        if (target && hasTargetAble && !this.targetGesto) {\n            this.targetGesto = getTargetAbleGesto(this, target!, \"\");\n        }\n        if (!this.controlGesto && hasControlAble) {\n            this.controlGesto = getAbleGesto(this, controlBoxElement, \"controlAbles\", \"Control\");\n        }\n    }\n    protected _updateTargets() {\n        const props = this.props;\n\n        this._prevTarget = props.dragTarget || props.target;\n        this._prevDragArea = props.dragArea!;\n    }\n    private _renderLines() {\n        const props = this.props;\n        const {\n            zoom,\n            hideDefaultLines,\n            hideChildMoveableDefaultLines,\n            parentMoveable,\n        } = props as MoveableManagerProps<GroupableProps>;\n\n        if (hideDefaultLines || (parentMoveable && hideChildMoveableDefaultLines)) {\n            return [];\n        }\n        const renderPoses = this.getState().renderPoses;\n        const Renderer = {\n            createElement,\n        };\n\n        return [\n            [0, 1],\n            [1, 3],\n            [3, 2],\n            [2, 0],\n        ].map(([from, to], i) => {\n            return renderLine(Renderer, \"\", renderPoses[from], renderPoses[to], zoom!, `render-line-${i}`);\n        });\n    }\n    private _onPreventClick = (e: any) => {\n        e.stopPropagation();\n        e.preventDefault();\n        // removeEvent(window, \"click\", this._onPreventClick, true);\n    }\n    private _isTargetChanged(useDragArea?: boolean) {\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const prevTarget = this._prevTarget;\n        const prevDragArea = this._prevDragArea;\n        const dragArea = props.dragArea;\n\n        // check target without dragArea\n        const isTargetChanged = !dragArea && prevTarget !== target;\n        const isDragAreaChanged = (useDragArea || dragArea) && prevDragArea !== dragArea;\n\n        return isTargetChanged || isDragAreaChanged;\n    }\n    private _updateNativeEvents() {\n        const props = this.props;\n        const target = props.dragArea ? this.areaElement : this.state.target;\n        const events = this.events;\n        const eventKeys = getKeys(events);\n\n        if (this._isTargetChanged()) {\n            for (const eventName in events) {\n                const manager = events[eventName];\n                manager && manager.destroy();\n                events[eventName] = null;\n            }\n        }\n        if (!target) {\n            return;\n        }\n        const enabledAbles = this.enabledAbles;\n        eventKeys.forEach(eventName => {\n            const ables = filterAbles(enabledAbles, [eventName] as any);\n            const hasAbles = ables.length > 0;\n            let manager = events[eventName];\n\n            if (!hasAbles) {\n                if (manager) {\n                    manager.destroy();\n                    events[eventName] = null;\n                }\n                return;\n            }\n            if (!manager) {\n                manager = new EventManager(target, this, eventName);\n                events[eventName] = manager;\n            }\n            manager.setAbles(ables);\n        });\n    }\n    private _checkUpdateRootContainer() {\n        const rootContainer = this.props.rootContainer;\n\n        if (!this._rootContainer && rootContainer) {\n            this._rootContainer = getRefTarget(rootContainer, true);\n        }\n    }\n    private _checkUpdateViewContainer() {\n        const viewContainerOption = this.props.viewContainer;\n\n        if (!this._viewContainer && viewContainerOption) {\n            this._viewContainer = getRefTarget(viewContainerOption, true);\n        }\n        const viewContainer = this._viewContainer;\n\n        if (viewContainer) {\n            this._changeAbleViewClassNames([\n                ...this._getAbleViewClassNames(),\n                this.isDragging() ? VIEW_DRAGGING : \"\",\n            ]);\n        }\n    }\n    private _changeAbleViewClassNames(classNames: string[]) {\n        const viewContainer = this._viewContainer!;\n        const nextClassNames = groupBy(\n            classNames.filter(Boolean),\n            el => el,\n        ).map(([className]) => className);\n        const prevClassNames = this._viewClassNames;\n\n        const {\n            removed,\n            added,\n        } = diff(prevClassNames, nextClassNames);\n\n        removed.forEach(index => {\n            removeClass(viewContainer, prevClassNames[index]);\n        });\n        added.forEach(index => {\n            addClass(viewContainer, nextClassNames[index]);\n        });\n\n        this._viewClassNames = nextClassNames;\n\n    }\n    private _getAbleViewClassNames() {\n        return (this.getEnabledAbles().map(able => {\n            return (able.viewClassName?.(this) || \"\");\n        }).join(\" \") + ` ${this._getAbleClassName(\"-view\")}`).split(/\\s+/g);\n    }\n    private _getAbleClassName(classPrefix = \"\") {\n        const ables = this.getEnabledAbles();\n\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n        const targetGestoData: Record<string, any> = targetGesto?.isFlag()\n            ? targetGesto.getEventData() : {};\n        const controlGestoData: Record<string, any> = controlGesto?.isFlag()\n            ? controlGesto.getEventData() : {};\n\n        return ables.map(able => {\n            const name = able.name;\n            let className = able.className?.(this) || \"\";\n\n            if (\n                targetGestoData[name]?.isEventStart\n                || controlGestoData[name]?.isEventStart\n            ) {\n                className += ` ${prefix(`${name}${classPrefix}-dragging`)}`;\n            }\n            return className.trim();\n        }).filter(Boolean).join(\" \");\n    }\n}\n\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n/**\n * Zooms in the elements of a moveable.\n * @name Moveable#zoom\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.zoom = 2;\n */\n\n/**\n * Whether the target size is detected and updated whenever it changes.\n * @name Moveable#useResizeObserver\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.useResizeObserver = true;\n */\n\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n\n/**\n * You can specify the className of the moveable controlbox.\n * @name Moveable#className\n * @default \"\"\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n\n/**\n * The target(s) to drag Moveable target(s)\n * @name Moveable#dragTarget\n * @default target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n","import { minus } from \"@scena/matrix\";\nimport { refs } from \"framework-utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { renderLine } from \"../renderDirections\";\nimport { Renderer, MoveableGroupInterface, GroupableProps } from \"../types\";\nimport { flat } from \"../utils\";\n\nexport default {\n    name: \"groupable\",\n    props: {\n        defaultGroupRotate: Number,\n        defaultGroupOrigin: String,\n        groupable: Boolean,\n        groupableProps: Object,\n        targetGroups: Object,\n        hideChildMoveableDefaultLines: Boolean,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableGroupInterface<GroupableProps>, React: Renderer): any[] {\n        const props = moveable.props;\n        let targets: Array<HTMLElement | SVGElement | undefined | null> = props.targets || [];\n\n        moveable.moveables = [];\n        const { left, top, isPersisted } = moveable.getState();\n        const position = [left, top];\n        const zoom = props.zoom || 1;\n        const renderGroupRects = moveable.renderGroupRects;\n        let persistDatChildren = props.persistData?.children || [];\n\n        if (isPersisted) {\n            targets = persistDatChildren.map(() => null);\n        } else {\n            persistDatChildren = [];\n        }\n\n        return [\n            ...targets.map((target, i) => {\n                return <MoveableManager<GroupableProps>\n                    key={\"moveable\" + i}\n                    ref={refs(moveable, \"moveables\", i)}\n                    target={target}\n                    origin={false}\n                    cssStyled={props.cssStyled}\n                    customStyledMap={props.customStyledMap}\n                    useResizeObserver={props.useResizeObserver}\n                    hideChildMoveableDefaultLines={props.hideChildMoveableDefaultLines}\n                    parentMoveable={moveable}\n                    parentPosition={position}\n                    persistData={persistDatChildren[i]}\n                    zoom={zoom}\n                />;\n            }),\n            ...flat(renderGroupRects.map(({ pos1, pos2, pos3, pos4 }, i) => {\n                const poses = [pos1, pos2, pos3, pos4];\n\n                return [\n                    [0, 1],\n                    [1, 3],\n                    [3, 2],\n                    [2, 0],\n                ].map(([from, to], j) => {\n                    return renderLine(\n                        React,\n                        \"\",\n                        minus(poses[from], position),\n                        minus(poses[to], position),\n                        zoom,\n                        `group-rect-${i}-${j}`,\n                    );\n                });\n            })),\n        ];\n    },\n};\n","import {\n    MoveableManagerInterface, MoveableGroupInterface,\n    ClickableProps, OnClick, OnClickGroup,\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport { findIndex } from \"@daybrush/utils\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"clickable\", {\n    props: {\n        clickable: Boolean,\n    },\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    always: true,\n    dragRelation: \"weak\",\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    dragStart() {\n        return;\n    },\n    dragControlStart() {\n        return;\n    },\n    dragGroupStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        const target = moveable.props.target!;\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n        const isMoveableElement = moveable.isMoveableElement(inputTarget);\n        const containsElement = !isMoveableElement && moveable.controlBox.getElement().contains(inputTarget);\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            || containsElement\n            // External event duplicate target or dragAreaElement\n        ) {\n            return;\n        }\n        const containsTarget = target.contains(inputTarget);\n\n        triggerEvent(moveable, \"onClick\", fillParams<OnClick>(moveable, e, {\n            isDouble: e.isDouble,\n            inputTarget,\n            isTarget: target === inputTarget,\n            moveableTarget: moveable.props.target!,\n            containsTarget,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<ClickableProps>, e: any) {\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n            || e.datas.inputTarget === inputTarget\n        ) {\n            return;\n        }\n        const targets = moveable.props.targets!;\n        let targetIndex = targets.indexOf(inputTarget);\n        const isTarget = targetIndex > -1;\n        let containsTarget = false;\n\n        if (targetIndex === -1) {\n            targetIndex = findIndex(targets, parentTarget => parentTarget.contains(inputTarget));\n            containsTarget = targetIndex > -1;\n        }\n\n        triggerEvent(moveable, \"onClickGroup\", fillParams<OnClickGroup>(moveable, e, {\n            isDouble: e.isDouble,\n            targets,\n            inputTarget,\n            targetIndex,\n            isTarget,\n            containsTarget,\n            moveableTarget: targets[targetIndex],\n        }));\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n});\n\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n","import { hasClass } from \"@daybrush/utils\";\nimport { DraggableProps, MoveableGroupInterface, MoveableManagerInterface, Renderer } from \"../types\";\nimport { prefix } from \"../utils\";\nimport Draggable from \"./Draggable\";\nimport { makeAble } from \"./AbleManager\";\nimport { renderEdgeLines } from \"../renderDirections\";\n\nfunction getDraggableEvent(e: any) {\n    let datas = e.originalDatas.draggable;\n    if (!datas) {\n        e.originalDatas.draggable = {};\n        datas = e.originalDatas.draggable;\n    }\n    return { ...e, datas };\n}\nexport default makeAble(\"edgeDraggable\", {\n    css: [\n        `.edge.edgeDraggable.line {\n    cursor: move;\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<DraggableProps>, React: Renderer) {\n        const props = moveable.props;\n        const edge = props.edgeDraggable!;\n\n        if (!edge) {\n            return [];\n        }\n        return renderEdgeLines(\n            React,\n            \"edgeDraggable\",\n            edge,\n            moveable.getState().renderPoses,\n            props.zoom!,\n        );\n    },\n    dragCondition(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        const props = moveable.props;\n        const target = e.inputEvent?.target;\n\n        if (!props.edgeDraggable || !target) {\n            return false;\n        }\n\n        return !props.draggable\n            && hasClass(target, prefix(\"direction\"))\n            && hasClass(target, prefix(\"edge\"))\n            && hasClass(target, prefix(\"edgeDraggable\"));\n    },\n    dragStart(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.dragStart(moveable, getDraggableEvent(e));\n    },\n    drag(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.drag(moveable, getDraggableEvent(e));\n    },\n    dragEnd(moveable: MoveableManagerInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragEnd(moveable, getDraggableEvent(e));\n    },\n    dragGroupCondition(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        const props = moveable.props;\n        const target = e.inputEvent?.target;\n\n        if (!props.edgeDraggable || !target) {\n            return false;\n        }\n        return !props.draggable && hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\n    },\n    dragGroup(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroup(moveable, getDraggableEvent(e));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\n    },\n    unset(moveable: any) {\n        return Draggable.unset(moveable);\n    },\n});\n\n/**\n * Whether to move by dragging the edge line (default: false)\n * @name Moveable.Draggable#edgeDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  draggable: true,\n *  edgeDraggable: false,\n * });\n *\n * moveable.edgeDraggable = true;\n */\n","export default {\n    name: \"individualGroupable\",\n    props: {\n        individualGroupable: Boolean,\n    } as const,\n    events: {} as const,\n} as const;\n","import Pinchable from \"./Pinchable\";\nimport Rotatable from \"./Rotatable\";\nimport Draggable from \"./Draggable\";\nimport Resizable from \"./Resizable\";\nimport Scalable from \"./Scalable\";\nimport Warpable from \"./Warpable\";\nimport Snappable from \"./Snappable\";\nimport DragArea from \"./DragArea\";\nimport Origin from \"./Origin\";\nimport Scrollable from \"./Scrollable\";\nimport Default from \"./Default\";\nimport Padding from \"./Padding\";\nimport Clippable from \"./Clippable\";\nimport OriginDraggable from \"./OriginDraggable\";\nimport Roundable from \"./Roundable\";\nimport { UnionToIntersection } from \"../types\";\nimport { invertObject } from \"../utils\";\nimport Groupable from \"./Groupable\";\nimport BeforeRenderable from \"./BeforeRenderable\";\nimport Renderable from \"./Renderable\";\nimport Clickable from \"./Clickable\";\nimport edgeDraggable from \"./edgeDraggable\";\nimport IndividualGroupable from \"./IndividualGroupable\";\n\nexport const MOVEABLE_ABLES = /*#__PURE__*/[\n    BeforeRenderable,\n    Default, Snappable, Pinchable, Draggable, edgeDraggable,\n    Resizable, Scalable, Warpable, Rotatable, Scrollable, Padding, Origin,\n    OriginDraggable,\n    Clippable, Roundable, Groupable, IndividualGroupable,\n    Clickable,\n    DragArea,\n    Renderable,\n] as const;\n\nexport const MOVEABLE_EVENTS_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...(\"events\" in able ? able.events : {})};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"events\"]>;\nexport const MOVEABLE_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...able.props};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"props\"]>;\n\nexport const MOVEABLE_EVENTS_MAP = /*#__PURE__*/invertObject(MOVEABLE_EVENTS_PROPS_MAP);\nexport const MOVEABLE_EVENTS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_EVENTS_MAP);\nexport const MOVEABLE_PROPS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_PROPS_MAP);\n","export function solveConstantsDistance(\n    [a, b, c]: [number, number, number],\n    pos: number[],\n) {\n    return (a * pos[0] + b * pos[1] + c) / Math.sqrt(a * a + b * b);\n}\nexport function solveC(\n    [a, b]: [number, number],\n    pos: number[],\n) {\n    // ax + by + c = 0\n    // -ax -by;\n    return -a * pos[0] - b * pos[1];\n}\n","import MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, GroupRect, MoveableTargetGroupsType, RectInfo } from \"./types\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\nimport { getAbleGesto, getTargetAbleGesto } from \"./gesto/getAbleGesto\";\nimport Groupable from \"./ables/Groupable\";\nimport { MIN_NUM, MAX_NUM, TINY_NUM } from \"./consts\";\nimport {\n    getAbsolutePosesByState, equals, unset, rotatePosesInfo,\n    convertTransformOriginArray,\n} from \"./utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport { getIntersectionPointsByConstants, getMinMaxs } from \"overlap-area\";\nimport { find, isArray, throttle } from \"@daybrush/utils\";\nimport { getMoveableTargetInfo } from \"./utils/getMoveableTargetInfo\";\nimport { solveC, solveConstantsDistance } from \"./Snappable/utils\";\n\nfunction getMaxPos(poses: number[][][], index: number) {\n    return Math.max(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getMinPos(poses: number[][][], index: number) {\n    return Math.min(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\n\n\nfunction getGroupRect(parentPoses: number[][][], rotation: number): GroupRect {\n    let pos1 = [0, 0];\n    let pos2 = [0, 0];\n    let pos3 = [0, 0];\n    let pos4 = [0, 0];\n    let width = 0;\n    let height = 0;\n\n    if (!parentPoses.length) {\n        return {\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            minX: 0,\n            minY: 0,\n            maxX: 0,\n            maxY: 0,\n            width,\n            height,\n            rotation,\n        };\n    }\n    const fixedRotation = throttle(rotation, TINY_NUM);\n\n    if (fixedRotation % 90) {\n        const rad = fixedRotation / 180 * Math.PI;\n        const a1 = Math.tan(rad);\n        const a2 = -1 / a1;\n        // ax = y  // -ax + y = 0 // 0 => 1\n        // -ax = y // ax + y = 0  // 0 => 3\n        const a1MinMax = [MAX_NUM, MIN_NUM];\n        const a1MinMaxPos = [[0, 0], [0, 0]];\n        const a2MinMax = [MAX_NUM, MIN_NUM];\n        const a2MinMaxPos = [[0, 0], [0, 0]];\n\n        parentPoses.forEach(poses => {\n            poses.forEach(pos => {\n\n                // const b1 = pos[1] - a1 * pos[0];\n                // const b2 = pos[1] - a2 * pos[0];\n\n                const a1Dist = solveConstantsDistance([-a1, 1, 0], pos);\n                const a2Dist = solveConstantsDistance([-a2, 1, 0], pos);\n\n                if (a1MinMax[0] > a1Dist) {\n                    a1MinMaxPos[0] = pos;\n                    a1MinMax[0] = a1Dist;\n                }\n                if (a1MinMax[1] < a1Dist) {\n                    a1MinMaxPos[1] = pos;\n                    a1MinMax[1] = a1Dist;\n                }\n                if (a2MinMax[0] > a2Dist) {\n                    a2MinMaxPos[0] = pos;\n                    a2MinMax[0] = a2Dist;\n                }\n                if (a2MinMax[1] < a2Dist) {\n                    a2MinMaxPos[1] = pos;\n                    a2MinMax[1] = a2Dist;\n                }\n            });\n        });\n\n        const [a1MinPos, a1MaxPos] = a1MinMaxPos;\n        const [a2MinPos, a2MaxPos] = a2MinMaxPos;\n\n        const minHorizontalLine = [-a1, 1, solveC([-a1, 1], a1MinPos)];\n        const maxHorizontalLine = [-a1, 1, solveC([-a1, 1], a1MaxPos)];\n\n        const minVerticalLine = [-a2, 1, solveC([-a2, 1], a2MinPos)];\n        const maxVerticalLine = [-a2, 1, solveC([-a2, 1], a2MaxPos)];\n\n        [pos1, pos2, pos3, pos4] = [\n            [minHorizontalLine, minVerticalLine],\n            [minHorizontalLine, maxVerticalLine],\n            [maxHorizontalLine, minVerticalLine],\n            [maxHorizontalLine, maxVerticalLine],\n        ].map(([line1, line2]) => getIntersectionPointsByConstants(line1, line2)[0]);\n\n        width = a2MinMax[1] - a2MinMax[0];\n        height = a1MinMax[1] - a1MinMax[0];\n    } else {\n        const minX = getMinPos(parentPoses, 0);\n        const minY = getMinPos(parentPoses, 1);\n        const maxX = getMaxPos(parentPoses, 0);\n        const maxY = getMaxPos(parentPoses, 1);\n\n        pos1 = [minX, minY];\n        pos2 = [maxX, minY];\n        pos3 = [minX, maxY];\n        pos4 = [maxX, maxY];\n        width = maxX - minX;\n        height = maxY - minY;\n        if (fixedRotation % 180) {\n            // 0\n            // 1 2\n            // 3 4\n            // 90\n            // 3 1\n            // 4 2\n            // 180\n            // 4 3\n            // 2 1\n            // 270\n            // 2 4\n            // 1 3\n            // 1, 2, 3,4 = 3 1 4 2\n            const changedX = [pos3, pos1, pos4, pos2];\n\n            [pos1, pos2, pos3, pos4] = changedX;\n            width = maxY - minY;\n            height = maxX - minX;\n        }\n\n    }\n    if (fixedRotation % 360 > 180) {\n        // 1 2   4 3\n        // 3 4   2 1\n        const changedX = [pos4, pos3, pos2, pos1];\n\n        [pos1, pos2, pos3, pos4] = changedX;\n    }\n    const { minX, minY, maxX, maxY } = getMinMaxs([pos1, pos2, pos3, pos4]);\n\n    return {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        width,\n        height,\n        minX,\n        minY,\n        maxX,\n        maxY,\n        rotation,\n    };\n}\ntype SelfGroup = Array<MoveableManager | null | SelfGroup>;\ntype CheckedMoveableManager = { finded: boolean; manager: MoveableManager };\n\nfunction findMoveableGroups(\n    moveables: CheckedMoveableManager[],\n    childTargetGroups: MoveableTargetGroupsType,\n): SelfGroup {\n    const groups = childTargetGroups.map(targetGroup => {\n        if (isArray(targetGroup)) {\n            const childMoveableGroups = findMoveableGroups(moveables, targetGroup);\n            const length = childMoveableGroups.length;\n\n            if (length > 1) {\n                return childMoveableGroups;\n            } else if (length === 1) {\n                return childMoveableGroups[0];\n            } else {\n                return null;\n            }\n        } else {\n            const checked = find(moveables, ({ manager }) => manager.props.target === targetGroup)!;\n\n            if (checked) {\n                checked.finded = true;\n                return checked.manager;\n            }\n            return null;\n        }\n    }).filter(Boolean);\n\n    if (groups.length === 1 && isArray(groups[0])) {\n        return groups[0];\n    }\n    return groups;\n}\n\n/**\n * @namespace Moveable.Group\n * @description You can make targets moveable.\n */\nclass MoveableGroup extends MoveableManager<GroupableProps> {\n    public static defaultProps = {\n        ...MoveableManager.defaultProps,\n        transformOrigin: [\"50%\", \"50%\"],\n        groupable: true,\n        dragArea: true,\n        keepRatio: true,\n        targets: [],\n        defaultGroupRotate: 0,\n        defaultGroupOrigin: \"50% 50%\",\n    };\n    public differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    public moveables: MoveableManager[] = [];\n    public transformOrigin = \"50% 50%\";\n    public renderGroupRects: GroupRect[] = [];\n    private _hasFirstTargets = false;\n\n    public componentDidMount() {\n        super.componentDidMount();\n    }\n    public checkUpdate() {\n        this._isPropTargetChanged = false;\n        this.updateAbles();\n    }\n    public getTargets() {\n        return this.props.targets!;\n    }\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState = true) {\n        const state = this.state;\n\n        if (!this.controlBox || state.isPersisted) {\n            return;\n        }\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, false, false);\n        });\n\n        const props = this.props;\n        const moveables = this.moveables;\n        const target = state.target! || props.target!;\n        const checkeds = moveables.map(moveable => ({ finded: false, manager: moveable }));\n        const moveableGroups = findMoveableGroups(\n            checkeds,\n            this.props.targetGroups || [],\n        );\n\n        moveableGroups.push(...checkeds.filter(({ finded }) => !finded).map(({ manager }) => manager));\n\n        const renderGroupRects: GroupRect[] = [];\n        const isReset = !isTarget || (type !== \"\" && props.updateGroup);\n        let defaultGroupRotate = props.defaultGroupRotate || 0;\n\n        if (!this._hasFirstTargets) {\n            const persistedRoatation = this.props.persistData?.rotation;\n\n            if (persistedRoatation != null) {\n                defaultGroupRotate = persistedRoatation;\n            }\n        }\n\n        function getMoveableGroupRect(group: SelfGroup, parentRotation: number, isRoot?: boolean): GroupRect {\n            const posesRotations = group.map(moveable => {\n                if (isArray(moveable)) {\n                    const rect = getMoveableGroupRect(moveable, parentRotation);\n                    const poses = [rect.pos1, rect.pos2, rect.pos3, rect.pos4];\n\n                    renderGroupRects.push(rect);\n                    return { poses, rotation: rect.rotation };\n                } else {\n                    return {\n                        poses: getAbsolutePosesByState(moveable!.state),\n                        rotation: moveable!.getRotation(),\n                    };\n                }\n            });\n            const rotations = posesRotations.map(({ rotation }) => rotation);\n\n            let groupRotation = 0;\n            const firstRotation = rotations[0];\n            const isSameRotation = rotations.every(nextRotation => {\n                return Math.abs(firstRotation - nextRotation) < 0.1;\n            });\n\n            if (isReset) {\n                groupRotation = isSameRotation ? firstRotation : defaultGroupRotate;\n            } else {\n                groupRotation = !isRoot && isSameRotation ? firstRotation : parentRotation;\n            }\n            const groupPoses = posesRotations.map(({ poses }) => poses);\n            const groupRect = getGroupRect(\n                groupPoses,\n                groupRotation,\n            );\n\n            return groupRect;\n        }\n        const rootGroupRect = getMoveableGroupRect(moveableGroups, this.rotation, true);\n\n        if (isReset) {\n            // reset rotataion\n            this.rotation = rootGroupRect.rotation;\n            this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n            this.scale = [1, 1];\n        }\n\n        this.renderGroupRects = renderGroupRects;\n        const transformOrigin = this.transformOrigin;\n        const rotation = this.rotation;\n        const scale = this.scale;\n        const { width, height, minX, minY } = rootGroupRect;\n        const posesInfo = rotatePosesInfo(\n            [\n                [0, 0],\n                [width, 0],\n                [0, height],\n                [width, height],\n            ],\n            convertTransformOriginArray(transformOrigin, width, height),\n            this.rotation / 180 * Math.PI,\n        );\n\n        const { minX: deltaX, minY: deltaY } = getMinMaxs(posesInfo.result);\n        const rotateScale = ` rotate(${rotation}deg)`\n            + ` scale(${scale[0] >= 0 ? 1 : -1}, ${scale[1] >= 0 ? 1 : -1})`;\n        const transform = `translate(${-deltaX}px, ${-deltaY}px)${rotateScale}`;\n\n        this.controlBox.getElement().style.transform\n            = `translate3d(${minX}px, ${minY}px, ${this.props.translateZ || 0})`;\n\n        target.style.cssText += `left:0px;top:0px;`\n            + `transform-origin:${transformOrigin};`\n            + `width:${width}px;height:${height}px;`\n            + `transform: ${transform}`;\n        state.width = width;\n        state.height = height;\n\n        const container = this.getContainer();\n        const info = getMoveableTargetInfo(\n            this.controlBox.getElement(),\n            target,\n            this.controlBox.getElement(),\n            this.getContainer(),\n            this._rootContainer || container,\n            [],\n        );\n        const pos = [info.left!, info.top!];\n        const [\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        ] = getAbsolutePosesByState(info); // info.left + info.pos(1 ~ 4)\n\n        const minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n        const delta = [minPos.minX, minPos.minY];\n        const direction = scale[0] * scale[1] > 0 ? 1 : -1;\n\n        info.pos1 = minus(pos1, delta);\n        info.pos2 = minus(pos2, delta);\n        info.pos3 = minus(pos3, delta);\n        info.pos4 = minus(pos4, delta);\n        // info.left = info.left + delta[0];\n        // info.top = info.top + delta[1];\n        info.left = minX - info.left! + delta[0];\n        info.top = minY - info.top! + delta[1];\n        info.origin = minus(plus(pos, info.origin!), delta);\n        info.beforeOrigin = minus(plus(pos, info.beforeOrigin!), delta);\n        info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin!);\n        info.transformOrigin = minus(plus(pos, info.transformOrigin!), delta);\n        target.style.transform\n            = `translate(${-deltaX - delta[0]}px, ${-deltaY - delta[1]}px)`\n            + rotateScale;\n        this.updateState(\n            {\n                ...info,\n                posDelta: delta,\n                direction,\n                beforeDirection: direction,\n            },\n            isSetState,\n        );\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public triggerEvent(name: string, e: any, isManager?: boolean): any {\n        if (isManager || name.indexOf(\"Group\") > -1) {\n            return super.triggerEvent(name as any, e);\n        } else {\n            this._emitter.trigger(name, e);\n        }\n    }\n    protected updateAbles() {\n        super.updateAbles([...this.props.ables!, Groupable], \"Group\");\n    }\n    protected _updateTargets() {\n        super._updateTargets();\n        this._prevTarget = this.props.dragTarget || this.areaElement;\n    }\n    protected _updateEvents() {\n        const state = this.state;\n        const props = this.props;\n\n        const prevTarget = this._prevTarget;\n        const nextTarget = props.dragTarget || this.areaElement;\n\n        if (prevTarget !== nextTarget) {\n            unset(this, \"targetGesto\");\n            unset(this, \"controlGesto\");\n            state.target = null;\n        }\n        if (!state.target) {\n            state.target = this.areaElement;\n            this.controlBox.getElement().style.display = \"block\";\n        }\n        if (state.target) {\n            if (!this.targetGesto) {\n                this.targetGesto = getTargetAbleGesto(this, nextTarget, \"Group\");\n            }\n            if (!this.controlGesto) {\n                this.controlGesto = getAbleGesto(this, this.controlBox.getElement(), \"controlAbles\", \"GroupControl\");\n            }\n        }\n        const isContainerChanged = !equals(state.container, props.container);\n\n        if (isContainerChanged) {\n            state.container = props.container;\n        }\n        const { added, changed, removed } = this.differ.update(props.targets!);\n        const isTargetChanged = added.length || removed.length;\n\n        if (isContainerChanged || isTargetChanged || changed.length) {\n            this.updateRect();\n            this._hasFirstTargets = true;\n        }\n        this._isPropTargetChanged = !!isTargetChanged;\n    }\n    protected _updateObserver() { }\n}\n\n/**\n * Sets the initial rotation of the group.\n * @name Moveable.Group#defaultGroupRotate\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupRotate: 0,\n * });\n *\n * moveable.defaultGroupRotate = 40;\n */\n\n/**\n * Sets the initial origin of the group.\n * @name Moveable.Group#defaultGroupOrigin\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupOrigin: \"50% 50%\",\n * });\n *\n * moveable.defaultGroupOrigin = \"20% 40%\";\n */\n\n\n/**\n * Whether to hide the line in child moveable for group corresponding to the rect of the target.\n * @name Moveable.Group#hideChildMoveableDefaultLines\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   hideChildMoveableDefaultLines: false,\n * });\n *\n * moveable.hideChildMoveableDefaultLines = true;\n */\nexport default MoveableGroup;\n","import { ref, refs } from \"framework-utils\";\nimport * as React from \"react\";\nimport MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, RectInfo } from \"./types\";\nimport { prefix } from \"./utils\";\n\n/**\n * @namespace Moveable.IndividualGroup\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\n */\nclass MoveableIndividualGroup extends MoveableManager<GroupableProps> {\n    public moveables: MoveableManager[] = [];\n    public render() {\n        const props = this.props;\n        const {\n            cspNonce,\n            cssStyled: ControlBoxElement,\n            persistData,\n        } = props;\n\n        let targets: Array<HTMLElement | SVGElement | null | undefined> = props.targets || [];\n        const length = targets.length;\n        const canPersist = this.isUnmounted || !length;\n        let persistDatChildren = persistData?.children ?? [];\n        if (canPersist && !length && persistDatChildren.length) {\n            targets = persistDatChildren.map(() => null);\n        } else if (!canPersist) {\n            persistDatChildren = [];\n        }\n\n        return <ControlBoxElement\n            cspNonce={cspNonce}\n            ref={ref(this, \"controlBox\")}\n            className={prefix(\"control-box\")}>\n            {targets!.map((target, i) => {\n                return <MoveableManager\n                    key={\"moveable\" + i}\n                    ref={refs(this, \"moveables\", i)}\n                    {...this.props}\n                    target={target}\n                    wrapperMoveable={this}\n                    isWrapperMounted={this.isMoveableMounted}\n                    persistData={persistDatChildren[i]}\n\n                />;\n            })}\n        </ControlBoxElement>;\n    }\n    public componentDidUpdate() {}\n    public getTargets() {\n        return this.props.targets!;\n    }\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, isTarget, isSetState);\n        });\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public request() {\n        return {\n            request() {\n                return this;\n            },\n            requestEnd() {\n                return this;\n            },\n        };\n    }\n    public dragStart() {\n        return this;\n    }\n    public hitTest() {\n        return 0;\n    }\n    public isInside() {\n        return false;\n    }\n    public isDragging() {\n        return false;\n    }\n    public updateRenderPoses() { }\n    public checkUpdate() { }\n    public triggerEvent() { }\n    protected updateAbles() { }\n    protected _updateEvents() { }\n    protected _updateObserver() {}\n}\n\n/**\n * Create targets individually, not as a group.\n * @name Moveable.IndividualGroup#individualGroupable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   individualGroupable: true,\n * });\n */\nexport default MoveableIndividualGroup;\n","import * as React from \"react\";\nimport {\n    Able, MoveableInterface, GroupableProps, MoveableDefaultProps,\n    IndividualGroupableProps, MoveableManagerInterface, MoveableRefTargetsResultType,\n    MoveableTargetGroupsType, BeforeRenderableProps, RenderableProps, MoveableManagerState,\n} from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { ref, withMethods, prefixCSS } from \"framework-utils\";\nimport { find, getKeys, IObject, isArray, isString } from \"@daybrush/utils\";\nimport { MOVEABLE_METHODS, PREFIX, MOVEABLE_CSS } from \"./consts\";\nimport Default from \"./ables/Default\";\nimport Groupable from \"./ables/Groupable\";\nimport DragArea from \"./ables/DragArea\";\nimport styled from \"react-css-styled\";\nimport { getRefTargets } from \"./utils\";\nimport IndividualGroupable from \"./ables/IndividualGroupable\";\nimport MoveableIndividualGroup from \"./MoveableIndividualGroup\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\n\n\nfunction getElementTargets(\n    refTargets: MoveableRefTargetsResultType,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n): Array<SVGElement | HTMLElement> {\n    const elementTargets: Array<SVGElement | HTMLElement> = [];\n\n    refTargets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                elementTargets.push(...selectorMap[target]);\n            }\n            return;\n        }\n        if (isArray(target)) {\n            elementTargets.push(...getElementTargets(target, selectorMap));\n        } else {\n            elementTargets.push(target);\n        }\n    });\n\n    return elementTargets;\n}\nfunction getTargetGroups(\n    refTargets: MoveableRefTargetsResultType,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n) {\n    const targetGroups: MoveableTargetGroupsType = [];\n\n    refTargets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                targetGroups.push(...selectorMap[target]);\n            }\n            return;\n        }\n        if (isArray(target)) {\n            targetGroups.push(getTargetGroups(target, selectorMap));\n        } else {\n            targetGroups.push(target);\n        }\n    });\n\n    return targetGroups;\n}\nfunction compareRefTargets(\n    prevRefTargets: MoveableRefTargetsResultType,\n    nextRefTargets: MoveableRefTargetsResultType,\n): boolean {\n    return (prevRefTargets.length !== nextRefTargets.length) || prevRefTargets.some((target, i) => {\n        const nextTarget = nextRefTargets[i];\n\n        if (!target && !nextTarget) {\n            return false;\n        } else if (target != nextTarget) {\n            if (isArray(target) && isArray(nextTarget)) {\n                return compareRefTargets(target, nextTarget);\n            }\n            return true;\n        }\n        return false;\n    });\n}\n\ntype DefaultAbles = GroupableProps & IndividualGroupableProps & BeforeRenderableProps & RenderableProps;\n\nexport class InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & DefaultAbles & T> {\n    public static defaultAbles: Able[] = [];\n    public static customStyledMap: Record<string, any> = {};\n    public static defaultStyled: any = null;\n    public static makeStyled() {\n        const cssMap: IObject<boolean> = {};\n\n        const ables = this.getTotalAbles();\n        ables.forEach(({ css }: Able) => {\n            if (!css) {\n                return;\n            }\n            css.forEach(text => {\n                cssMap[text] = true;\n            });\n        });\n        const style = getKeys(cssMap).join(\"\\n\");\n\n        this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\n    }\n    public static getTotalAbles(): Able[] {\n\n        return [Default, Groupable, IndividualGroupable, DragArea, ...this.defaultAbles];\n    }\n    @withMethods(MOVEABLE_METHODS)\n    public moveable!: MoveableManager | MoveableGroup | MoveableIndividualGroup;\n    public refTargets: MoveableRefTargetsResultType = [];\n    public selectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n    private _differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    private _elementTargets: Array<HTMLElement | SVGElement> = [];\n    private _onChangeTargets: (() => void) | null = null;\n    public render() {\n        const moveableContructor = (this.constructor as typeof InitialMoveable);\n\n        if (!moveableContructor.defaultStyled) {\n            moveableContructor.makeStyled();\n        }\n        const {\n            ables: userAbles,\n            props: userProps,\n            ...props\n        } = this.props;\n        const refTargets = this._updateRefs(true);\n        const elementTargets = getElementTargets(refTargets, this.selectorMap);\n\n        let isGroup = elementTargets.length > 1;\n        const totalAbles = moveableContructor.getTotalAbles();\n        const ables = [\n            ...totalAbles,\n            ...(userAbles as any || []),\n        ];\n        const nextProps = {\n            ...props,\n            ...(userProps || {}),\n            ables,\n            cssStyled: moveableContructor.defaultStyled,\n            customStyledMap: moveableContructor.customStyledMap,\n        };\n\n        this._elementTargets = elementTargets;\n\n        let firstRenderState: MoveableManagerState | null = null;\n        const prevMoveable = this.moveable;\n\n\n        const persistData = props.persistData;\n\n        if (persistData?.children) {\n            isGroup = true;\n        }\n        if (isGroup) {\n            if (props.individualGroupable) {\n                return <MoveableIndividualGroup key=\"individual-group\" ref={ref(this, \"moveable\")}\n                    {...nextProps}\n                    target={null}\n                    targets={elementTargets}\n                />;\n            }\n            const targetGroups = getTargetGroups(refTargets, this.selectorMap);\n\n            // manager\n            if (prevMoveable && !prevMoveable.props.groupable && !(prevMoveable.props as any).individualGroupable) {\n                const target = prevMoveable.props.target!;\n\n                if (target && elementTargets.indexOf(target) > -1) {\n                    firstRenderState = { ...prevMoveable.state };\n                }\n            }\n\n            return <MoveableGroup key=\"group\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                {...props.groupableProps ?? {}}\n                target={null}\n                targets={elementTargets}\n                targetGroups={targetGroups}\n                firstRenderState={firstRenderState}\n            />;\n        } else {\n            const target = elementTargets[0];\n            // manager\n            if (prevMoveable && (prevMoveable.props.groupable || (prevMoveable.props as any).individualGroupable)) {\n                const moveables = (prevMoveable as MoveableGroup | MoveableIndividualGroup).moveables || [];\n                const prevTargetMoveable = find(moveables, mv => mv.props.target === target);\n\n                if (prevTargetMoveable) {\n                    firstRenderState = { ...prevTargetMoveable.state };\n                }\n            }\n\n            return <MoveableManager<any> key=\"single\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={target}\n                firstRenderState={firstRenderState} />;\n        }\n    }\n    public componentDidMount() {\n        this._checkChangeTargets();\n        this._updateRefs();\n    }\n    public componentDidUpdate() {\n        this._checkChangeTargets();\n    }\n    public componentWillUnmount() {\n        this.selectorMap = {};\n        this.refTargets = [];\n    }\n    /**\n     * Get targets set in moveable through target or targets of props.\n     * @method Moveable#getTargets\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body, {\n     *    target: [targetRef, \".target\", document.querySelectorAll(\".target\")],\n     * });\n     *\n     * console.log(moveable.getTargets());\n     */\n    public getTargets() {\n        return this.moveable?.getTargets() ?? [];\n    }\n    /**\n     * If the element list corresponding to the selector among the targets is changed, it is updated.\n     * @method Moveable#updateSelectors\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body, {\n     *    target: \".target\",\n     * });\n     *\n     * moveable.updateSelectors();\n     */\n    public updateSelectors() {\n        this.selectorMap = {};\n        this._updateRefs();\n    }\n    /**\n     * User changes target and waits for target to change.\n     * @method Moveable#waitToChangeTarget\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.querySelector(\".target\").addEventListener(\"mousedown\", e => {\n     *   moveable.waitToChangeTarget().then(() => {\n     *      moveable.dragStart(e.currentTarget);\n     *   });\n     *   moveable.target = e.currentTarget;\n     * });\n     */\n    public waitToChangeTarget(): Promise<void> {\n        // let resolvePromise: (e: OnChangeTarget) => void;\n\n        // this._onChangeTargets = () => {\n        //     this._onChangeTargets = null;\n        //     resolvePromise({\n        //         moveable: this.getManager(),\n        //         targets: this._elementTargets,\n        //     });\n        // };\n\n        // return new Promise<OnChangeTarget>(resolve => {\n        //     resolvePromise = resolve;\n        // });\n        let resolvePromise: () => void;\n\n        this._onChangeTargets = () => {\n            this._onChangeTargets = null;\n            resolvePromise();\n        };\n\n        return new Promise(resolve => {\n            resolvePromise = resolve;\n        });\n    }\n    public waitToChangeTargets(): Promise<void> {\n        return this.waitToChangeTarget();\n    }\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this.moveable;\n    }\n    private _updateRefs(isRender?: boolean) {\n        const prevRefTargets = this.refTargets;\n        const nextRefTargets = getRefTargets((this.props.target || this.props.targets) as any);\n        const isBrowser = typeof document !== \"undefined\";\n\n        let isUpdate = compareRefTargets(prevRefTargets, nextRefTargets);\n        const selectorMap = this.selectorMap;\n        const nextSelectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n\n        this.refTargets.forEach(function updateSelectorMap(target) {\n            if (isString(target)) {\n                const selectorTarget = selectorMap[target];\n\n                if (selectorTarget) {\n                    nextSelectorMap[target] = selectorMap[target];\n                } else if (isBrowser) {\n                    isUpdate = true;\n                    nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\n                }\n            } else if (isArray(target)) {\n                target.forEach(updateSelectorMap);\n            }\n        });\n\n        this.refTargets = nextRefTargets;\n        this.selectorMap = nextSelectorMap;\n\n        if (!isRender && isUpdate) {\n            this.forceUpdate();\n        }\n        return nextRefTargets;\n    }\n    private _checkChangeTargets() {\n        const { added, removed } = this._differ.update(this._elementTargets);\n        const isTargetChanged = added.length || removed.length;\n\n        if (isTargetChanged) {\n            this.props.onChangeTargets?.({\n                moveable: this.moveable,\n                targets: this._elementTargets,\n            });\n            this._onChangeTargets?.();\n        }\n        this._updateRefs();\n\n    }\n}\nexport interface InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & DefaultAbles & T>,\n    MoveableInterface {\n    setState(state: any, callback?: () => any): any;\n    forceUpdate(callback?: () => any): any;\n}\n","import { MoveableProps, Able } from \"./types\";\nimport { MOVEABLE_ABLES } from \"./ables/consts\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport default class Moveable<T = {}> extends InitialMoveable<MoveableProps & T> {\n    public static defaultAbles: Able[] = MOVEABLE_ABLES as any;\n}\n","import { IObject } from \"@daybrush/utils\";\nimport { Able } from \"./types\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport function makeMoveable<T extends IObject<any> = {}>(\n    ables: Array<Able<T>>): typeof InitialMoveable & (new (...args: any[]) => InitialMoveable<T>) {\n    return class Moveable extends InitialMoveable<T> {\n        public static defaultAbles = ables;\n    };\n}\n","import Moveable, * as modules from \"./index.esm\";\n\nfor (const name in modules) {\n    (Moveable as any)[name] = (modules as any)[name];\n}\n\nmodule.exports = Moveable;\nexport * from \"./index.esm\";\nexport default Moveable;\n"],"names":["makeAble","name","able","__assign","events","props","_a","Boolean","getSVGCursor","scale","degree","concat","getCursorCSS","x1","degree45","Math","round","defaultCursor","agent","getAgent","IS_WEBKIT","browser","webkit","IS_WEBKIT605","navi","window","userAgent","navigator","res","exec","toLowerCase","parseFloat","IS_FIREFOX","IS_SAFARI_ABOVE15","parseInt","webkitVersion","version","PREFIX","MOVEABLE_CSS","map","join","NEARBY_POS","FLOAT_POINT_NUM","TINY_NUM","MIN_SCALE","MAX_NUM","pow","MIN_NUM","DIRECTIONS4","DIRECTIONS","DIRECTION_REGION_TO_DIRECTION","n","e","s","w","nw","ne","sw","se","DIRECTION_INDEXES","DIRECTION_ROTATIONS","MOVEABLE_METHODS","setCustomDrag","state","delta","isPinch","isConvert","ableName","result","_b","gestos","move","inputEvent","datas","originalDatas","ableDatas","convertDragDist","parentEvent","CustomGesto","prevX","prevY","startX","startY","isDrag","isFlag","draggable","dragStart","client","type","drag","clientX","clientY","isFirstDrag","isPrevDrag","distX","distY","deltaX","deltaY","parentGesto","calculatePointerDist","moveable","moveableClientRect","rootMatrix","is3d","pos1","left","top","minus","calculateInversePosition","posX","posY","_c","getDragDist","setDragStart","allMatrix","beforeMatrix","origin","offsetMatrix","targetMatrix","transformOrigin","matrix","inverseMatrix","invert","inverseBeforeMatrix","absoluteOrigin","convertPositionMatrix","plus","startDragBeforeDist","calculate","startDragDist","getTransformDirection","calculateMoveablePosition","beforeTransform","direction","resolveTransformEvent","event","functionName","beforeRenderable","index","transformIndex","nextTransforms","length","nextTransformAppendedIndexes","nextIndex","findIndex","text","match","find","info","filter","convertTransformInfo","targetFunction","matFunctionName","beforeFunctionTexts","afterFunctionTexts","beforeFunctionMatrix","beforeTransform2","beforeFunctionMatrix2","targetTansform","targetFunctionMatrix","afterTransform","afterFunctionMatrix","afterTransform2","afterFunctionMatrix2","targetAllTransform","allFunctionMatrix","splice","isAppendTransform","__spreadArray","isAppend","convertTransformFormat","value","dist","getTransformDist","getBeforeDragDist","bx","by","getTransfromMatrix","fromTranslation","isAfter","nextTargetMatrix","multiply","res1","afterTargetMatrix","isBefore","getInverseDragDist","calculateTransformOrigin","width","height","prevWidth","prevHeight","prevOrigin","pos","i","splitUnit","unit","prevSize","size","isNaN","measureRatio","getPosIndexesByDirection","indexes","push","getPosesByDirection","poses","getPosByDirection","xRatio","yRatio","dot","bottom","getDist","startPos","fixedDirection","calculatePoses","fixedPos","getNextMatrix","getAbsoluteMatrix","getNextTransformMatrix","transform","targetTransform","parseMat","convertDimension","scaleMatrix","createScaleMatrix","fillTransformStartEvent","getBeforeRenderableDatas","setTransform","startTransforms","isArray","splitSpace","setTransformIndex","setDefaultTransformIndex","property","func","indexOf","parse","startValue","functionValue","fillOriginalTransform","getNextTransforms","getNextTransformText","getNextStyle","nextStyle","fillTransformEvent","nextTransform","Draggable","fillCSSObject","getTranslateDist","fixedPosition","groupable","nextMatrix","groupLeft","groupTop","nextFixedPosition","getDirectionOffset","getScaleDist","scaleDist","getDirectionByPos","nextFixedOffset","calculatePosition","getRotateDist","rotateDist","getResizeDist","nextOrigin","getAbsolutePosition","getAbsolutePosesByState","getGestoData","targetGesto","controlGesto","data","getEventData","multiply2","pos2","prefix","classNames","_i","arguments","prefixNames","apply","defaultSync","fn","getTransformMatrix","isObject","multiplies","createOriginMatrix","a","measureSVGSize","el","isHorizontal","viewBox","getSVGViewBox","ownerSVGElement","getBeforeTransformOrigin","relativeOrigin","getTransformOrigin","getComputedStyle","o","style","split","getElementTransform","target","computedStyle","computedTransform","list","baseVal","matrixes","chr","getOffsetInfo","lastParent","isParent","checkZoom","targetStyle","documentElement","document","body","hasSlot","parentSlotElement","assignedSlotParentElement","assignedSlot","parentElement","isCustomElement","isEnd","position","offsetZoom","targetZoom","zoom","targetPosition","tagName","willChange","slotParentNode","parentNode","targetParentNode","nodeType","host","isStatic","offsetParent","getOffsetPosInfo","offsetLeft","offsetTop","isSVG","isUndefined","hasOffset","targetOrigin","slice","getSVGGraphicsOffset","offset","getBodyOffset","bodyStyle","bodyPosition","marginLeft","marginTop","right","convert3DMatrixes","forEach","getPositionFixedInfo","fixedContainer","hasTransform","makeMatrixCSS","convertMatrixtoCSS","clientWidth","clientHeight","x","y","getSVGMatrix","viewBoxWidth","viewBoxHeight","scaleX","scaleY","preserveAspectRatio","align","meetOrSlice","svgOrigin","translate","xAlign","yAlign","floor","scaleDimension","max","min","isGTarget","getBBox","bbox","getRect","posesX","posesY","rectWidth","rectHeight","calculateRect","getSVGOffset","offsetInfo","targetInfo","container","getSize","offsetWidth","offsetHeight","containerClientRect","getBoundingClientRect","margin","rect","rectLeft","scrollLeft","clientLeft","rectTop","scrollTop","clientTop","mat","prevLeft","prevTop","posOrigin","rectOrigin","count","mat2","_d","nextLeft","nextTop","distLeft","distTop","abs","p","calculateMoveableClientPositions","rootClientRect","rootPoses","y1","x2","y2","x3","y3","x4","y4","_e","originX","originY","getShapeDirection","pos3","pos4","getDistSize","vec","sqrt","getDiagonalSize","getLineStyle","rad","getRad","getControlTransform","rotation","reduce","prev","getProps","self","cssWidth","cssHeight","contentWidth","contentHeight","minWidth","minHeight","minOffsetWidth","minOffsetHeight","maxWidth","Infinity","maxHeight","maxOffsetWidth","maxOffsetHeight","svg","boxSizing","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderBottom","borderBottomWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","horizontalPadding","verticalPadding","horizontalBorder","verticalBorder","horizontalOffset","verticalOffset","containerWidth","containerHeight","parentStyle","convertUnitSize","inlineCSSWidth","inlineCSSHeight","computedWidth","computedHeight","between","getRotationRad","resetClientRect","scrollWidth","scrollHeight","getExtendsRect","isRoot","extendsRect","overflow","getClientRectByPosition","base","isExtends","baseTop","baseLeft","getClientRect","clientRect","getTotalDirection","parentDirection","getDirection","deg","getAttribute","direciton","dir","getAbsolutePoses","roundSign","num","unset","resolvedEvent","cssText","getKeys","decamelize","fillAfterTransform","prevEvent","nextEvent","fillParams","params","isBeforeEvent","nextParams","currentTarget","stopDrag","stop","call","isStartEvent","lastEvent","fillEndParams","isDouble","catchEvent","callback","_emitter","on","triggerEvent","isManager","pseudoElt","filterAbles","ables","methods","triggerAblesSimultaneously","enabledAbles","ableGroups","some","method","ableGroup","equals","a1","a2","selectValue","values","groupBy","arr","groups","groupKeys","groupKey","keyIndex","group","groupByMap","flat","cur","maxOffset","args","sort","b","calculatePadding","convertCSSSize","isRelative","getTinyDist","v","getDirectionViewClassName","isDragging","getDirectionCondition","checkAbles","isRequest","requestAble","hasClass","invertObject","obj","nextObj","transforms","undefined","beforeFunctionTexts2","targetFunctionText","afterFunctionTexts2","beforeFunctions","beforeFunctions2","targetFunctions","afterFunctions","afterFunctions2","toMat","isArrayFormat","Element","getRefTarget","isSelector","isString","querySelector","isFunction","current","getRefTargets","targets","userTargets","querySelectorAll","getAbsoluteRotation","PI","getDragDistByState","calculateMatrixDist","getSizeDistByDist","startSize","ratio","keepRatio","startOffsetWidth","startOffsetHeight","distWidth","distHeight","standardRad","signSize","cos","startWidthSize","startHeightSize","distSize","ratioRad","sin","getOffsetSizeDist","sizeDirection","parentDistance","parentDist","parentScale","startFixedDirection","directionsDists","directionRatios","ratioDistance","dist_1","convertTransformUnit","xy","leftOrigin","rightOrigin","originObject","nextOriginObject","convertTransformOriginArray","rotatePosesInfo","prevPoses","nextPoses","rotate","next","onPinchStart","onPinch","onPinchEnd","onPinchGroupStart","onPinchGroup","onPinchGroupEnd","pinchStart","angle","pinchable","eventName","controlEventName","pinchAbles","controlAbles","canPinch","ableEvent","parentRotate","snapRenderInfo","request","pinch","pinchScale","distance","pinchEnd","pinchGroupStart","pinchGroup","pinchGroupEnd","fillChildEvents","groupableDatas","childDatas","moveables","_","triggerChildGesto","isStart","childs","ev","childMoveable","childEvent","childGestos","parentFlag","child","triggerChildAbles","eachEvent","VERTICAL_NAMES","HORIZONTAL_NAMES","VERTICAL_NAMES_MAP","start","end","center","HORIZONTAL_NAMES_MAP","hasGuidelines","snappable","bounds","innerBounds","verticalGuidelines","horizontalGuidelines","snapGridWidth","snapGridHeight","guidelines","enableSnap","getSnapDirections","snapDirections","mapSnapDirectionPoses","snapPoses","nextSnapDirections","nextSnapPoses","splitSnapDirectionPoses","horizontalNames","verticalNames","horizontal","vertical","calculateContainerPos","containerRect","clientPos","solveLineConstants","point1","point2","dx","dy","c","throttle","checkMoveableSnapPoses","customSnapThreshold","snapThreshold","checkSnapPoses","checkSnap","checkSnapKeepRatio","endPos","endX","endY","isBottom","isRight","verticalInfo","isSnap","horizontalInfo","verticalSnapInfo","horizontalSnapInfo","posInfos","getNearestSnapGuidelineInfo","isVerticalSnap","verticalGuideline","guideline","isHorizontalSnap","horizontalGuideline","horizontalPos","verticalPos","checkSnaps","snapInfo","posInfo","guidelineInfo","guidelineInfos","targetType","targetPoses","isVertical","posType","snapPosInfos","targetPos","snapPosInfo","getSnapInfosByDirection","snapDirection","alignPoses","checkSnapBoundPriority","aDist","bDist","isBound","getNearOffsetInfo","offsets","aSign","sign","bSign","aOffset","bOffset","getCheckSnapDirections","directions","endDirection_1","signX","signY","nextDirection","signs","isStartLine","line","cx","average","cy","hitTestLine","test1","test2","isSameStartLine","dots","centerSign","error","every","checkInnerBoundDot","threshold","checkInnerBound","verticalSign","horizontalSign","lineConstants","isAllBound","isVerticalBound","isHorizontalBound","leftLine","topLine","rightLine","bottomLine","topBoundInfo","checkLineBoundCollision","bottomBoundInfo","leftBoundInfo","rightBoundInfo","isAllVerticalBound","isAllHorizontalBound","boundLine","isRender","dot1","boundDot1","boundDot2","dy2","dx2","hasDx","hasDy","slope","getInnerBoundInfo","lineInfos","multiple","sizeOffset","getInnerBoundDragInfo","lines","getCheckInnerBoundLineInfos","innerBoundInfo","widthOffsetInfo","heightOffsetInfo","getCheckSnapLineDirections","lineDirections","virtualPoses","dir1","dir2","virtualLine","isBoundRotate","relativePoses","boundDots","getDistPointLine","solveReverseLine","checkRotateInnerBounds","relativeLeft","relativeRight","relativeTop","relativeBottom","dotInfos","lineRad","lineDist","dotDist","dotRad","distRad","acos","nextRad1","nextRad2","nextRad","checkInnerBoundPoses","horizontalPoses","verticalPoses","boundMap","lineInfo","isHorizontalStart","isVerticalStart","checkBoundPoses","_f","nextBounds","checkBounds","getBounds","externalBounds","snapOffset","snapOffsetLeft","snapOffsetTop","snapOffsetRight","snapOffsetBottom","isCSS","_g","checkBoundKeepRatio","startBoundPos","endBoundPos","minPos","maxPos","boundInfos","boundRect","boundRotate","boundPos","r","nextPos","checkRotateBounds","relativeRad1","relativeRad2","renderGuideline","React","key","scaleType","createElement","className","renderInnerGuideline","sizeValue","posValue","renderSnapPoses","renderPos","renderGuidelines","targetRect","isDisplayInnerSnapDigit","mainNames","targetStart","targetEnd","hide","elementRect","element","renderDigitLine","lineType","gap","snapDigit","isDisplaySnapDigit","snapDistFormat","sizeName","absGap","snapSize","toFixed","groupByElementGuidelines","otherIndex","names","nextGuidelines","inner","elementRect1","elementRect2","nextPos1","nextPos2","total","renderDashedGuidelines","rendered","sideNames","sidePos","prevRect","nextRect","size1","size2","renderPos1","renderPos2","renderGapGuidelines","targetSideStart","targetSideEnd","gapRects","sideStartPos","sideEndPos","sideCenterPos","solveEquation","solveNextOffset","isOutside","dist1","dist2","widthOffset","heightOffset","getSnapBound","boundInfo","checkThrottleDragRotate","throttleDragRotate","offsetX","offsetY","adjustPoses","adjustPos","prevDistY","checkSnapBoundsDrag","absolutePoses","boundPoses","middle","checkMoveableSnapBounds","verticalSnapBoundInfo","horizontalSnapBoundInfo","verticalInnerBoundInfo","horizontalInnerBoundInfo","horizontalBoundInfos","verticalBoundInfos","horizontalDist","verticalDist","snapIndex","snap","checkSnapBounds","guideines","checkSnapRightLine","snapBoundInfo","rad180","isHorizontalLine","isVerticalLine","getSnapBoundInfo","startDirection","endDirection","otherStartPos","otherEndPos","checkSnapBoundsKeepRatio","otherHorizontalOffset","isOtherHorizontalBound","isOtherHorizontalSnap","otherVerticalOffset","isOtherVerticalBound","isOtherVerticalSnap","snapLine","getSnapBoundOffset","horizontalBoundInfo","verticalBoundInfo","checkMaxBounds","left_1","top_1","right_1","bottom_1","otherDirection","isCheckVertical","isCheckHorizontal","otherPos","nextOtherPos","isHeightOutside","isWidthOutside","getTotalGuidelines","hasFixed","containerClientHeight","containerClientWidth","snapGap","maxSnapElementGuidelineDistance","elementGuidelines","getElementGuidelines","totalGuidelines","getGapGuidelines","getGridGuidelines","getDefaultGuidelines","checkBetweenRects","maxSnapElementGapDistance","elementRects","gapGuidelines","targetCenter","targetStart2","targetEnd2","nextElementRects","snapRect1","snapRect2","rect1","rect2","rect1Start","rect1End","rect2Start","rect2End","isCenter","prevValues","snapRect","refresh","nextElementGuidelines","diff","maintained","added","nextValues","prevIndex","getSnapElementRects","elementSnapDirections","topValue","leftValue","rightValue","bottomValue","centerValue","middleValue","sizes","snapWidth","snapHeight","nextPosInfo","targetClientRect","containerLeft","containerTop","getMinMaxs","targetLeft","minX","targetTop","minY","elementLeft","elementTop","elementRight","elementBottom","checkSnapInfo","snapContainer","snapContainerTarget","snapContainerRect","offset1","offset2","getNextFixedPoses","nextFixedPos","getSizeOffsetInfo","innerBoundLineInfos","recheckSizeByTwoDirection","snapPos","nextWidthOffset","nextHeightOffset","nextWidth","nextHeight","checkSizeDist","getNextPoses","isWidthBound","isHeightBound","widthDist","heightDist","isGetWidthOffset","checkSnapRotate","origin2","checkSnapResize","nextAllMatrix","checkSnapScale","sizeDist","startCheckSnapDrag","getSnapGuidelines","addBoundGuidelines","verticalSnapPoses","horizontalSnapPoses","verticalInnerBoundPoses","horizontalInnerBoundPoses","innerPos","directionCondition","dragRelation","Array","Object","Number","snapRenderThreshold","Function","onSnap","css","render","minLeft","minTop","externalPoses","snapInfos","hasExternalPoses","externalRect","verticalPosInfos","horizontalPosInfos","allGuidelines","elements","gaps","dragEnd","dragControlCondition","rotatableDragControlCondtion","dragControlStart","dragControl","dragControlEnd","dragGroupStart","dragGroup","dragGroupEnd","dragGroupControlStart","dragGroupControl","dragGroupControlEnd","renderDirectionControlsByInfos","renderDirections","getState","renderPoses","rotationRad","degRotation","directionMap","renderState","renderDirectionMap","directionRotation","dataAttrs","renderDirectionControls","defaultDirections","renderAroundControls","renderLine","renderEdgeLines","edge","index1","index2","getRenderDirections","renderDiagonalDirections","renderAllDirections","throttleDrag","startDragRotate","edgeDraggable","onDragStart","onDrag","onDragEnd","onDragGroupStart","onDragGroup","onDragGroupEnd","requestStyle","dragInfo","beforeOrigin","prevDist","prevBeforeDist","deltaOffset","set","startRect","parentMoveable","dragRotateRad","ry","rx","beforeTranslate","throttleArray","beforeDist","beforeDelta","passDelta","passDist","dragAfter","param","isControl","requestStart","requestEnd","resizable","throttleResize","resizeFormat","keepRatioFinally","onResizeStart","onBeforeResize","onResize","onResizeEnd","onResizeGroupStart","onBeforeResizeGroup","onResizeGroup","onResizeGroupEnd","viewClassName","isGroup","parentFixedDirection","minSize","startWidth","startHeight","maxSize","startOffsetMatrix","startTransformOrigin","isWidth","parentIsWidth","setRatio","isFinite","startPositions","setFixedDirection","setFixedPosition","setMin","setMax","nextMaxSize","isNumber","startRatio","setOrigin","startFixedPosition","isResize","parentKeepRatio","dragClient","resolveMatrix","targetN","getNextBoundingSize","nextSize","boundingWidth","boundingHeight","nextFixedDirection","setSize","snapDist","computeSize","isNoSnap","calculateBoundSize","inverseDelta","dragControlAfter","errorWidth","errorHeight","isErrorWidth","isErrorHeight","dragGroupControlCondition","originalEvents","setDist","createRotateMatrix","originalX","originalY","parentStartOffsetWidth","parentStartOffsetHeight","updateGroupMin","originalMinSize","childMinSize","childStartOffsetWidth","childStartOffsetHeight","parentMinWidth","parentMinHeight","updateGroupMax","originalMaxSize","childMaxSize","parentMaxWidth","parentMaxHeight","deltaWidth","deltaHeight","setRotateStartInfo","startAbsoluteOrigin","prevDeg","defaultDeg","prevSnapDeg","loop","startDist","getAbsoluteDist","normalizedPrevDeg","getAbsoluteDistByClient","getRotateInfo","moveableRect","throttleRotate","snapRotation","snapDeg","getRotationPositions","rotationPosition","radPoses","isReverse","rotationTarget","contains","directionCSS","rotatable","String","rotateAroundControls","resolveAblesWithRotatable","onRotateStart","onBeforeRotate","onRotate","onRotateEnd","onRotateGroupStart","onBeforeRotateGroup","onRotateGroup","onRotateGroupEnd","positions","jsxs","resolveMap_1","directionControlInfos","resolve","beforeDirection","resizeStart","startClientX","startClientY","externalRotate","beforeInfo","afterInfo","absoluteInfo","inputTarget","regionDirection","controlDirection","isAroundControl","resolveAble","clientPoses","originalFixedPosition_1","getOrigin","fixedBeforeOrigin","fixedAfterOrigin","posDelta","Resizable","parentPosition","controlPosition","parentFixedPosition","rotatation","isRotate","clientDistX","clientDistY","groupDelta","targetDirection","beforeRotation","absoluteDelta","absoluteDist","absoluteRotation","startRotation","absoluteStartRotation","nextClientX","nextClientY","setRotation","nextRotation","inverseDist","prevInverseDist","requestValue","dragEvent","transformEvent","resize","resizeEvent","beforeRotate","absoluteRotate","parentLeft","parentTop","parentBeforeOrigin","childClient","startGroupClient","groupClient","prevClientX","prevClientY","rotateMatrix","setGroupRotation","distRotate","getRotation","deltaRotate","scalable","throttleScale","onScaleStart","onBeforeScale","onScale","onScaleEnd","onScaleGroupStart","onBeforeScaleGroup","onScaleGroup","onScaleGroupEnd","scaleWidth","scaleHeight","scaleXRatio","scaleYRatio","isScale","getNextScale","stateDirection","setScale","nextScale","scaleEndParam","moveableScale","getMiddleLinePos","getTriangleRad","rad1","rad2","isValidPos","poses1","poses2","pi","warpable","onWarpStart","onWarp","onWarpEnd","linePosFrom1","linePosFrom2","linePosFrom3","linePosFrom4","linePosTo1","linePosTo2","linePosTo3","linePosTo4","warpTargetMatrix","targetInverseMatrix","ignoreDimension","createIdentityMatrix","prevMatrix","posIndexes","isWarp","selectedPoses","nearByPoses","h","createWarpMatrix","afterMatrix","totalMatrix","AREA_PIECES","AREA_PIECE","AVOID","VIEW_DRAGGING","restoreStyle","areaElement","removeClass","renderPieces","dragArea","passDragArea","onClick","onClickGroup","ref","isDragArea","rects","children","nextElementSibling","addClass","disableNativeEvent","enableNativeEvent","requestAnimationFrame","getDefaultScrollPosition","scrollContainer","scrollable","scrollThreshold","scrollThrottleTime","getScrollPosition","onScroll","onScrollGroup","getContainer","dragScroll","DragScroll","scrollContainerElement","gestoName","scrollBy","checkScroll","throttleTime","dragGroupContro","dragGroupControEnd","dragTarget","portalContainer","rootContainer","useResizeObserver","pinchThreshold","pinchOutside","checkInput","cspNonce","translateZ","hideDefaultLines","flushSync","stopPropagation","preventClickEventOnDrag","preventClickDefault","viewContainer","persistData","firstRenderState","onChangeTargets","padding","paddingDirections","paddingPos1","paddingPos2","paddingPos3","paddingPos4","RADIUS_DIRECTIONS","calculateRatio","sumSize","sumRatio","HORIZONTAL_RADIUS_ORDER","VERTICAL_RADIUS_ORDER","HORIZONTAL_RADIUS_DIRECTIONS","VERTICAL_RADIUS_DIRECTIONS","getRadiusStyles","clipStyles","radiusPoses","virtual","raws","rawPos","styles","getRadiusRange","controlPoses","horizontalRange","verticalRange","clipPose","sub","getRadiusValues","minCounts","full","splitIndex","splitLength","horizontalValues","verticalValues","horizontalValuesLength","verticalValuesLength","hasVerticalValues","nwValue","neValue","seValue","_h","swValue","_j","wnValue","_k","enValue","_l","esValue","_m","wsValue","horizontalRawPoses","verticalRawPoses","nextHorizontalPoses","nextVerticalPoses","raw","removeRadiusPos","startIndex","radiuslIndex","deleteCount","addRadiusPos","horizontalIndex","verticalIndex","radiusX","radiusY","startVerticalIndex","splitRadiusPoses","horizontals","verticals","CLIP_DIRECTIONS","CLIP_RECT_DIRECTIONS","getClipStyles","clipPath","clipRelative","clipType","clipPoses","isRect","isCircle","subWidth","subHeight","getRectPoses","xs","ys","dirx","diry","getControlSize","xRange","yRange","getClipPath","defaultClip","customClip","clipText","clip","splitBracket","clipPrefix","splitter","splitComma","xPos","yPos","minMaxs","maxX","maxY","radiusX_1","radiusY_1","radius","xRadius","yRadius","centerPos_1","roundIndex","rectLength","radiusValues","_o","_p","_q","_r","nextRight","nextBottom","_s","moveControlPos","dists","verticalDirections","horizontalDirections","verticalDirection_1","horizontalDirection_1","fixedIndex","nextDist","nextControlPoses_1","controlPose","controlDir","dirDir","dirHorizontal","dirVertical","addClipPath","clipIndex","clipStyle","clipEventType","removeClipPath","clippable","defaultClipPath","customClipPath","clipArea","dragWithClip","clipTargetBounds","clipVerticalGuidelines","clipHorizontalGuidelines","clipSnapThreshold","onClipStart","onClip","onClipEnd","clipPathState","snapBoundInfos","calculatedPos","controls","isInset","isPolygon","linePoses_1","to","from","clipLeft","clipTop","ellipseClipPath","piece","areaPoses","allWidth","allHeight","allLeft_1","allTop_1","directionType","snapPos1","snapPos2","isDragTarget","isClipStart","isLine","isArea","originalDraggable","originalDist","firstDist","isDragWithTarget","isAll","guidePoses","isEllipse","guideRect","guideXPoses","guideYPoses","rectPoses","rectDists_1","boundDelta","snapOffsetY","snapOffsetX","distSnapX","distSnapY","width_1","height_1","nextControlPoses_2","j","nextClipStyles","dragDist","originDraggable","originRelative","onDragOriginStart","onDragOrigin","onDragOriginEnd","startOrigin","startTargetOrigin","isDragOrigin","distOrigin","dragDelta","deltaOrigin","addBorderRadiusByLine","lineIndex","horizontalsLength","verticalsLength","controlIndex","controlPoseInfo","addBorderRadius","removeBorderRadius","getBorderRadius","borderRadius","triggerRoundEvent","roundRelative","borderRadiusState","getStyleBorderRadius","firstTarget","getTargets","roundable","minRoundControls","maxRoundControls","roundClickable","roundPadding","isDisplayShadowRoundControls","onRoundStart","onRound","onRoundEnd","onRoundGroupStart","onRoundGroup","onRoundGroupEnd","verticalCount","horizontalCount","basePos","originalPos","isDisplay","display","indexAttr","replace","isRound","selectedControlPose","selectedVertical","selectedHorizontal","pose","poseDist","isIdentityMatrix","identityMatrix","onBeforeRenderStart","onBeforeRender","onBeforeRenderEnd","onBeforeRenderGroupStart","onBeforeRenderGroup","onBeforeRenderGroupEnd","cssMatrix","startTransform","resetStyle","fillDragStartParams","fillDragParams","_this","onRenderStart","onRender","onRenderEnd","onRenderGroupStart","onRenderGroup","onRenderGroupEnd","resultCount","fillDragEndParams","triggerAble","ableType","eventOperation","eventAffix","eventType","requestInstant","conditionName","isFirstStart","updateRect","requestAble_1","eventAbles","BeforeRenderable","Renderable","elementFromPoint","isDragStop","results","nextDatas","isEventStart","off","isUpdate","isForceEnd","preventDefault","isUnmounted","forceUpdate","checkMoveableTarget","eventTarget","isMoveableElement","controlBox","getElement","getTargetAbleGesto","moveableTarget","getAbleGesto","conditionFunctions","isTargetAbles","options","preventRightClick","preventWheelClick","preventClickEventOnDragStart","preventClickEventByCondition","gesto","Gesto","EventManager","_onEvent","addEventListener","setAbles","destroy","removeEventListener","getShadowRoot","getRootNode","rootNode","getMatrixStackInfo","checkContainer","targetTransformOrigin","offsetContainer","convertCSStoMatrix","isFixed","fixedInfo","offsetPos","isOffsetEnd","customOffsetParent","customOffsetLeft","customOffsetTop","parentClientLeft","parentClientTop","fixedClientLeft","fixedClientTop","isElementTarget","calculateMatrixStack","isAbsolute3d","prevTargetMatrix","containerZoom","rootMatrixes","isRoot3d","offsetRootContainer","rootZoom","isNext3d","isSVGGraphicElement","reverse","originalRootContainer","endContainer","rootMatrixBeforeOffset","nextInfo","isMatrix3d","originalRootMatrix","hasZoom","calculateElementInfo","allResult","getElementInfo","getMoveableTargetInfo","moveableElement","parentContainer","rootContainerClientRect","computedStyle_1","beforePosition","absoluteTargetPosition","absoluteContainerPosition","originalBeforeOrigin","getPersistState","isPersisted","MoveableManager","_super","__extends","targetAbles","isMoveableMounted","EventEmitter","_prevTarget","_prevDragArea","_isPropTargetChanged","_hasFirstTarget","_observer","_observerId","_rootContainer","_viewContainer","_viewClassNames","checkUpdateRect","cancelAnimationFrame","_onPreventClick","propsTarget","ControlBoxElement","cssStyled","_checkUpdateRootContainer","checkUpdate","updateRenderPoses","stateTarget","groupTargets","ableAttributes","getEnabledAbles","ableClassName","_getAbleClassName","isVisible","renderAbles","_renderLines","componentDidMount","wrapperMoveable","_checkUpdateViewContainer","_updateTargets","_updateNativeEvents","_updateEvents","updateCheckInput","_updateObserver","componentDidUpdate","prevProps","componentWillUnmount","_changeAbleViewClassNames","manager","getAble","triggerDragStart","hitTest","points","fitPoints","getOverlapSize","totalSize","getAreaSize","isInside","isTarget","isSetState","nextState","_getRequestStyles","persistState","updateState","updateTarget","statePos","getManager","isInstant","requsetAble","ableRequester","requester","ableParam","stateLeft","stateTop","stateContainer","updateAbles","isTargetChanged","isChanged","moveableContainer","unsetAbles","waitToChangeTarget","Promise","trigger","useCSS","tag","customStyleMap","customStyledMap","styled","hasControlBox","updateSelectors","setState","always","Renderer","styleNames","ableStyleNames","ResizeObserver","disconnect","observer","observe","box","controlBoxElement","hasTargetAble","hasControlAble","isUnset","_isTargetChanged","hideChildMoveableDefaultLines","useDragArea","prevTarget","prevDragArea","isDragAreaChanged","eventKeys","hasAbles","viewContainerOption","_getAbleViewClassNames","nextClassNames","prevClassNames","removed","classPrefix","targetGestoData","controlGestoData","trim","defaultProps","isWrapperMounted","PureComponent","defaultGroupRotate","defaultGroupOrigin","groupableProps","targetGroups","renderGroupRects","persistDatChildren","refs","clickable","containsElement","containsTarget","targetIndex","parentTarget","getDraggableEvent","dragCondition","dragGroupCondition","individualGroupable","MOVEABLE_ABLES","Default","Snappable","Pinchable","Scalable","Warpable","Rotatable","Scrollable","Padding","Origin","OriginDraggable","Clippable","Roundable","Groupable","IndividualGroupable","Clickable","DragArea","MOVEABLE_EVENTS_PROPS_MAP","MOVEABLE_PROPS_MAP","MOVEABLE_EVENTS_MAP","MOVEABLE_EVENTS","keys","MOVEABLE_PROPS","solveConstantsDistance","solveC","getMaxPos","getMinPos","getGroupRect","parentPoses","fixedRotation","a1_1","tan","a2_1","a1MinMax_1","a1MinMaxPos_1","a2MinMax_1","a2MinMaxPos_1","a1Dist","a2Dist","a1MinPos","a1MaxPos","a2MinPos","a2MaxPos","minHorizontalLine","maxHorizontalLine","minVerticalLine","maxVerticalLine","line1","line2","getIntersectionPointsByConstants","minX_1","minY_1","maxX_1","maxY_1","changedX","findMoveableGroups","childTargetGroups","targetGroup","childMoveableGroups","checked","finded","MoveableGroup","differ","ChildrenDiffer","_hasFirstTargets","prototype","checkeds","moveableGroups","isReset","updateGroup","persistedRoatation","getMoveableGroupRect","parentRotation","posesRotations","rotations","groupRotation","firstRotation","isSameRotation","groupPoses","groupRect","rootGroupRect","posesInfo","rotateScale","nextTarget","isContainerChanged","update","changed","MoveableIndividualGroup","canPersist","getElementTargets","refTargets","selectorMap","elementTargets","getTargetGroups","compareRefTargets","prevRefTargets","nextRefTargets","InitialMoveable","_differ","_elementTargets","_onChangeTargets","makeStyled","cssMap","getTotalAbles","defaultStyled","prefixCSS","defaultAbles","moveableContructor","constructor","userAbles","userProps","__rest","_updateRefs","totalAbles","nextProps","prevMoveable","target_1","prevTargetMoveable","mv","_checkChangeTargets","resolvePromise","waitToChangeTargets","isBrowser","nextSelectorMap","updateSelectorMap","selectorTarget","__decorate","withMethods","Moveable","makeMoveable","modules","module","exports"],"mappings":"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"}