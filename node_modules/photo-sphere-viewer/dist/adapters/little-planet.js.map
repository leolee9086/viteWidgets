{"version":3,"file":"little-planet.js","sources":["../../src/adapters/little-planet/index.js"],"sourcesContent":["import { Euler, MathUtils, Matrix4, Mesh, PlaneBufferGeometry, ShaderMaterial, Texture } from 'three';\nimport { CONSTANTS, DEFAULTS, EquirectangularAdapter } from '../..';\n\n\nDEFAULTS.defaultLat = -Math.PI / 2;\n\nconst euler = new Euler();\n\n\n/**\n * @summary Adapter for equirectangular panoramas displayed with little planet effect\n * @memberof PSV.adapters\n * @extends PSV.adapters.AbstractAdapter\n */\nexport class LittlePlanetAdapter extends EquirectangularAdapter {\n\n  static id = 'little-planet';\n  static supportsOverlay = false;\n\n  /**\n   * @param {PSV.Viewer} psv\n   */\n  constructor(psv) {\n    super(psv);\n\n    this.psv.prop.littlePlanet = true;\n\n    this.psv.on(CONSTANTS.EVENTS.SIZE_UPDATED, this);\n    this.psv.on(CONSTANTS.EVENTS.ZOOM_UPDATED, this);\n    this.psv.on(CONSTANTS.EVENTS.POSITION_UPDATED, this);\n  }\n\n  /**\n   * @override\n   */\n  supportsTransition() {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  supportsPreload() {\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      case CONSTANTS.EVENTS.SIZE_UPDATED:\n        this.__setResolution(e.args[0]);\n        break;\n      case CONSTANTS.EVENTS.ZOOM_UPDATED:\n        this.__setZoom();\n        break;\n      case CONSTANTS.EVENTS.POSITION_UPDATED:\n        this.__setPosition(e.args[0]);\n        break;\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @param {PSV.Size} size\n   * @private\n   */\n  __setResolution(size) {\n    this.uniforms.resolution.value = size.width / size.height;\n  }\n\n  /**\n   * @private\n   */\n  __setZoom() {\n    // mapping values are empirical\n    this.uniforms.zoom.value = Math.max(0.1, MathUtils.mapLinear(this.psv.prop.vFov, 90, 30, 50, 2));\n  }\n\n  /**\n   * @param {PSV.Position} position\n   * @private\n   */\n  __setPosition(position) {\n    euler.set(\n      Math.PI / 2 + position.latitude,\n      0,\n      -Math.PI / 2 - position.longitude,\n      'ZYX'\n    );\n\n    this.uniforms.transform.value.makeRotationFromEuler(euler);\n  }\n\n  /**\n   * @override\n   */\n  createMesh() {\n    const geometry = new PlaneBufferGeometry(20, 10)\n      .translate(0, 0, -1);\n\n    // this one was copied from https://github.com/pchen66/panolens.js\n    const material = new ShaderMaterial({\n      uniforms: {\n        panorama  : { value: new Texture() },\n        resolution: { value: 2.0 },\n        transform : { value: new Matrix4() },\n        zoom      : { value: 10.0 },\n        opacity   : { value: 1.0 },\n      },\n\n      vertexShader: `\nvarying vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n  gl_Position = vec4( position, 1.0 );\n}`,\n\n      fragmentShader: `\nuniform sampler2D panorama;\nuniform float resolution;\nuniform mat4 transform;\nuniform float zoom;\nuniform float opacity;\n\nvarying vec2 vUv;\n\nconst float PI = 3.1415926535897932384626433832795;\n\nvoid main() {\n  vec2 position = -1.0 + 2.0 * vUv;\n  position *= vec2( zoom * resolution, zoom * 0.5 );\n\n  float x2y2 = position.x * position.x + position.y * position.y;\n  vec3 sphere_pnt = vec3( 2. * position, x2y2 - 1. ) / ( x2y2 + 1. );\n  sphere_pnt = vec3( transform * vec4( sphere_pnt, 1.0 ) );\n\n  vec2 sampleUV = vec2(\n    1.0 - (atan(sphere_pnt.y, sphere_pnt.x) / PI + 1.0) * 0.5,\n    (asin(sphere_pnt.z) / PI + 0.5)\n  );\n\n  gl_FragColor = texture2D( panorama, sampleUV );\n  gl_FragColor.a *= opacity;\n}`,\n    });\n\n    this.uniforms = material.uniforms;\n\n    return new Mesh(geometry, material);\n  }\n\n  /**\n   * @override\n   */\n  setTexture(mesh, textureData) {\n    mesh.material.uniforms.panorama.value.dispose();\n    mesh.material.uniforms.panorama.value = textureData.texture;\n  }\n\n}\n"],"names":["DEFAULTS","defaultLat","Math","PI","euler","Euler","LittlePlanetAdapter","psv","prop","littlePlanet","on","CONSTANTS","EVENTS","SIZE_UPDATED","ZOOM_UPDATED","POSITION_UPDATED","supportsTransition","supportsPreload","handleEvent","e","type","__setResolution","args","__setZoom","__setPosition","size","uniforms","resolution","value","width","height","zoom","max","MathUtils","mapLinear","vFov","position","set","latitude","longitude","transform","makeRotationFromEuler","createMesh","geometry","PlaneBufferGeometry","translate","material","ShaderMaterial","panorama","Texture","Matrix4","opacity","vertexShader","fragmentShader","Mesh","setTexture","mesh","textureData","dispose","texture","EquirectangularAdapter","id","supportsOverlay"],"mappings":"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"}