{"version":3,"file":"autorotate-keypoints.js","sources":["../../src/plugins/autorotate-keypoints/index.js"],"sourcesContent":["import { SplineCurve, Vector2 } from 'three';\nimport { AbstractPlugin, CONSTANTS, PSVError, utils } from '../..';\n\n/**\n * @typedef {Object} PSV.plugins.AutorotateKeypointsPlugin.KeypointObject\n * @property {PSV.ExtendedPosition} [position]\n * @property {string} [markerId] - use the position and tooltip of a marker\n * @property {number} [pause=0] - pause the animation when reaching this point, will display the tooltip if available\n * @property {string|{content: string, position: string}} [tooltip]\n */\n\n/**\n * @typedef {PSV.ExtendedPosition|string|PSV.plugins.AutorotateKeypointsPlugin.KeypointObject} PSV.plugins.AutorotateKeypointsPlugin.Keypoint\n * @summary Definition of keypoints for automatic rotation, can be a position object, a marker id or an keypoint object\n */\n\n/**\n * @typedef {Object} PSV.plugins.AutorotateKeypointsPlugin.Options\n * @property {boolean} [startFromClosest=true] - start from the closest keypoint instead of the first keypoint\n * @property {PSV.plugins.AutorotateKeypointsPlugin.Keypoint[]} keypoints\n */\n\n\nconst NUM_STEPS = 16;\n\nfunction serializePt(position) {\n  return [position.longitude, position.latitude];\n}\n\n\n/**\n * @summary Replaces the standard autorotate animation by a smooth transition between multiple points\n * @extends PSV.plugins.AbstractPlugin\n * @memberof PSV.plugins\n */\nexport class AutorotateKeypointsPlugin extends AbstractPlugin {\n\n  static id = 'autorotate-keypoints';\n\n  /**\n   * @param {PSV.Viewer} psv\n   * @param {PSV.plugins.AutorotateKeypointsPlugin.Options} [options]\n   */\n  constructor(psv, options) {\n    super(psv);\n\n    /**\n     * @member {Object}\n     * @property {number} idx -  current index in keypoints\n     * @property {number[][]} curve - curve between idx and idx + 1\n     * @property {number[]} startStep - start point of the current step\n     * @property {number[]} endStep - end point of the current step\n     * @property {number} startTime - start time of the current step\n     * @property {number} stepDuration - expected duration of the step\n     * @property {number} remainingPause - time remaining for the pause\n     * @property {number} lastTime - previous timestamp in render loop\n     * @property {PSV.components.Tooltip} tooltip - currently displayed tooltip\n     * @private\n     */\n    this.state = {};\n\n    /**\n     * @member {PSV.plugins.AutorotateKeypointsPlugin.Options}\n     * @private\n     */\n    this.config = {\n      startFromClosest: true,\n      ...options,\n    };\n\n    /**\n     * @type {PSV.plugins.AutorotateKeypointsPlugin.Keypoint[]} keypoints\n     */\n    this.keypoints = null;\n\n    /**\n     * @type {PSV.plugins.MarkersPlugin}\n     * @private\n     */\n    this.markers = null;\n  }\n\n  /**\n   * @package\n   */\n  init() {\n    super.init();\n\n    this.markers = this.psv.getPlugin('markers');\n\n    if (this.config.keypoints) {\n      this.setKeypoints(this.config.keypoints);\n      delete this.config.keypoints;\n    }\n\n    this.psv.on(CONSTANTS.EVENTS.AUTOROTATE, this);\n    this.psv.on(CONSTANTS.EVENTS.BEFORE_RENDER, this);\n  }\n\n  /**\n   * @package\n   */\n  destroy() {\n    this.psv.off(CONSTANTS.EVENTS.AUTOROTATE, this);\n    this.psv.off(CONSTANTS.EVENTS.BEFORE_RENDER, this);\n\n    delete this.markers;\n    delete this.keypoints;\n\n    super.destroy();\n  }\n\n  /**\n   * @private\n   */\n  handleEvent(e) {\n    if (e.type === CONSTANTS.EVENTS.AUTOROTATE) {\n      this.__configure();\n    }\n    else if (e.type === CONSTANTS.EVENTS.BEFORE_RENDER) {\n      this.__beforeRender(e.args[0]);\n    }\n  }\n\n  /**\n   * @summary Changes the keypoints\n   * @param {PSV.plugins.AutorotateKeypointsPlugin.Keypoint[]} keypoints\n   */\n  setKeypoints(keypoints) {\n    if (keypoints?.length < 2) {\n      throw new PSVError('At least two points are required');\n    }\n\n    this.keypoints = utils.clone(keypoints);\n\n    if (this.keypoints) {\n      this.keypoints.forEach((pt, i) => {\n        if (typeof pt === 'string') {\n          pt = { markerId: pt };\n        }\n        else if (utils.isExtendedPosition(pt)) {\n          pt = { position: pt };\n        }\n        if (pt.markerId) {\n          if (!this.markers) {\n            throw new PSVError(`Keypoint #${i} references a marker but the markers plugin is not loaded`);\n          }\n          const marker = this.markers.getMarker(pt.markerId);\n          pt.position = serializePt(marker.props.position);\n        }\n        else if (pt.position) {\n          pt.position = serializePt(this.psv.dataHelper.cleanPosition(pt.position));\n        }\n        else {\n          throw new PSVError(`Keypoint #${i} is missing marker or position`);\n        }\n\n        if (typeof pt.tooltip === 'string') {\n          pt.tooltip = { content: pt.tooltip };\n        }\n\n        this.keypoints[i] = pt;\n      });\n    }\n\n    this.__configure();\n  }\n\n  /**\n   * @private\n   */\n  __configure() {\n    if (!this.psv.isAutorotateEnabled() || !this.keypoints) {\n      this.__hideTooltip();\n      this.state = {};\n      return;\n    }\n\n    // cancel core rotation\n    this.psv.dynamics.position.stop();\n\n    this.state = {\n      idx           : -1,\n      curve         : [],\n      startStep     : null,\n      endStep       : null,\n      startTime     : null,\n      stepDuration  : null,\n      remainingPause: null,\n      lastTime      : null,\n      tooltip       : null,\n    };\n\n    if (this.config.startFromClosest) {\n      const currentPosition = serializePt(this.psv.getPosition());\n      const index = this.__findMinIndex(this.keypoints, (keypoint) => {\n        return utils.greatArcDistance(keypoint.position, currentPosition);\n      });\n\n      this.keypoints.push(...this.keypoints.splice(0, index));\n    }\n  }\n\n  /**\n   * @private\n   */\n  __beforeRender(timestamp) {\n    if (this.psv.isAutorotateEnabled()) {\n      // initialisation\n      if (!this.state.startTime) {\n        this.state.endStep = serializePt(this.psv.getPosition());\n        this.__nextStep();\n\n        this.state.startTime = timestamp;\n        this.state.lastTime = timestamp;\n      }\n\n      this.__nextFrame(timestamp);\n    }\n  }\n\n  /**\n   * @private\n   */\n  __incrementIdx() {\n    this.state.idx++;\n    if (this.state.idx === this.keypoints.length) {\n      this.state.idx = 0;\n    }\n  }\n\n  /**\n   * @private\n   */\n  __showTooltip() {\n    const keypoint = this.keypoints[this.state.idx];\n\n    if (keypoint.tooltip) {\n      const position = this.psv.dataHelper.vector3ToViewerCoords(this.psv.prop.direction);\n\n      this.state.tooltip = this.psv.tooltip.create({\n        content : keypoint.tooltip.content,\n        position: keypoint.tooltip.position,\n        top     : position.y,\n        left    : position.x,\n      });\n    }\n    else if (keypoint.markerId) {\n      const marker = this.markers.getMarker(keypoint.markerId);\n      marker.showTooltip();\n      this.state.tooltip = marker.tooltip;\n    }\n  }\n\n  /**\n   * @private\n   */\n  __hideTooltip() {\n    if (this.state.tooltip) {\n      const keypoint = this.keypoints[this.state.idx];\n\n      if (keypoint.tooltip) {\n        this.state.tooltip.hide();\n      }\n      else if (keypoint.markerId) {\n        const marker = this.markers.getMarker(keypoint.markerId);\n        marker.hideTooltip();\n      }\n\n      this.state.tooltip = null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  __nextPoint() {\n    // get the 4 points necessary to compute the current movement\n    // the two points of the current segments and one point before and after\n    const workPoints = [];\n    if (this.state.idx === -1) {\n      const currentPosition = serializePt(this.psv.getPosition());\n      workPoints.push(\n        currentPosition,\n        currentPosition,\n        this.keypoints[0].position,\n        this.keypoints[1].position\n      );\n    }\n    else {\n      for (let i = -1; i < 3; i++) {\n        const keypoint = this.state.idx + i < 0\n          ? this.keypoints[this.keypoints.length - 1]\n          : this.keypoints[(this.state.idx + i) % this.keypoints.length];\n        workPoints.push(keypoint.position);\n      }\n    }\n\n    // apply offsets to avoid crossing the origin\n    const workVectors = [new Vector2(workPoints[0][0], workPoints[0][1])];\n\n    let k = 0;\n    for (let i = 1; i <= 3; i++) {\n      const d = workPoints[i - 1][0] - workPoints[i][0];\n      if (d > Math.PI) { // crossed the origin left to right\n        k += 1;\n      }\n      else if (d < -Math.PI) { // crossed the origin right to left\n        k -= 1;\n      }\n      if (k !== 0 && i === 1) {\n        // do not modify first point, apply the reverse offset the the previous point instead\n        workVectors[0].x -= k * 2 * Math.PI;\n        k = 0;\n      }\n      workVectors.push(new Vector2(workPoints[i][0] + k * 2 * Math.PI, workPoints[i][1]));\n    }\n\n    const curve = new SplineCurve(workVectors)\n      .getPoints(NUM_STEPS * 3)\n      .map(p => ([p.x, p.y]));\n\n    // debugCurve(this.markers, curve, NUM_STEPS);\n\n    // only keep the curve for the current movement\n    this.state.curve = curve.slice(NUM_STEPS + 1, NUM_STEPS * 2 + 1);\n\n    if (this.state.idx !== -1) {\n      this.state.remainingPause = this.keypoints[this.state.idx].pause;\n\n      if (this.state.remainingPause) {\n        this.__showTooltip();\n      }\n      else {\n        this.__incrementIdx();\n      }\n    }\n    else {\n      this.__incrementIdx();\n    }\n  }\n\n  /**\n   * @private\n   */\n  __nextStep() {\n    if (this.state.curve.length === 0) {\n      this.__nextPoint();\n\n      // reset transformation made to the previous point\n      this.state.endStep[0] = utils.parseAngle(this.state.endStep[0]);\n    }\n\n    // target next point\n    this.state.startStep = this.state.endStep;\n    this.state.endStep = this.state.curve.shift();\n\n    // compute duration from distance and speed\n    const distance = utils.greatArcDistance(this.state.startStep, this.state.endStep);\n    this.state.stepDuration = distance * 1000 / Math.abs(this.psv.config.autorotateSpeed);\n\n    if (distance === 0) { // edge case\n      this.__nextStep();\n    }\n  }\n\n  /**\n   * @private\n   */\n  __nextFrame(timestamp) {\n    const ellapsed = timestamp - this.state.lastTime;\n    this.state.lastTime = timestamp;\n\n    // currently paused\n    if (this.state.remainingPause) {\n      this.state.remainingPause = Math.max(0, this.state.remainingPause - ellapsed);\n      if (this.state.remainingPause > 0) {\n        return;\n      }\n      else {\n        this.__hideTooltip();\n        this.__incrementIdx();\n        this.state.startTime = timestamp;\n      }\n    }\n\n    let progress = (timestamp - this.state.startTime) / this.state.stepDuration;\n    if (progress >= 1) {\n      this.__nextStep();\n      progress = 0;\n      this.state.startTime = timestamp;\n    }\n\n    this.psv.rotate({\n      longitude: this.state.startStep[0] + (this.state.endStep[0] - this.state.startStep[0]) * progress,\n      latitude : this.state.startStep[1] + (this.state.endStep[1] - this.state.startStep[1]) * progress,\n    });\n  }\n\n  /**\n   * @private\n   */\n  __findMinIndex(array, mapper) {\n    let idx = 0;\n    let current = Number.MAX_VALUE;\n\n    array.forEach((item, i) => {\n      const value = mapper ? mapper(item) : item;\n      if (value < current) {\n        current = value;\n        idx = i;\n      }\n    });\n\n    return idx;\n  }\n\n}\n"],"names":["NUM_STEPS","serializePt","position","longitude","latitude","AutorotateKeypointsPlugin","psv","options","state","config","startFromClosest","keypoints","markers","init","getPlugin","setKeypoints","on","CONSTANTS","EVENTS","AUTOROTATE","BEFORE_RENDER","destroy","off","handleEvent","e","type","__configure","__beforeRender","args","length","PSVError","utils","clone","forEach","pt","i","markerId","isExtendedPosition","marker","getMarker","props","dataHelper","cleanPosition","tooltip","content","isAutorotateEnabled","__hideTooltip","dynamics","stop","idx","curve","startStep","endStep","startTime","stepDuration","remainingPause","lastTime","currentPosition","getPosition","index","__findMinIndex","keypoint","greatArcDistance","push","splice","timestamp","__nextStep","__nextFrame","__incrementIdx","__showTooltip","vector3ToViewerCoords","prop","direction","create","top","y","left","x","showTooltip","hide","hideTooltip","__nextPoint","workPoints","workVectors","Vector2","k","d","Math","PI","SplineCurve","getPoints","map","p","slice","pause","parseAngle","shift","distance","abs","autorotateSpeed","ellapsed","max","progress","rotate","array","mapper","current","Number","MAX_VALUE","item","value","AbstractPlugin","id"],"mappings":"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"}